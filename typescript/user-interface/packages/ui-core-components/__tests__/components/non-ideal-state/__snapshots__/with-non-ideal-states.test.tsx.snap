// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`With Non Ideal States bad props renders 1`] = `
<WrappedWithNonIdealStateChecker
  glContainer={
    Object {
      "close": [MockFunction],
      "emit": [MockFunction],
      "extendState": [MockFunction],
      "getElement": [MockFunction],
      "getState": [MockFunction],
      "height": 500,
      "hide": [MockFunction],
      "isHidden": false,
      "layoutManager": undefined,
      "off": [MockFunction],
      "on": [MockFunction] {
        "calls": Array [
          Array [
            "show",
            [Function],
          ],
          Array [
            "resize",
            [Function],
          ],
          Array [
            "show",
            [Function],
          ],
          Array [
            "resize",
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "parent": undefined,
      "setSize": [MockFunction],
      "setState": [MockFunction],
      "setTitle": [MockFunction],
      "show": [MockFunction],
      "tab": undefined,
      "title": "container-title",
      "trigger": [MockFunction],
      "unbind": [MockFunction],
      "width": 1000,
    }
  }
  status={
    Object {
      "error": undefined,
      "loading": undefined,
    }
  }
>
  <Blueprint3.NonIdealState
    action={
      <Blueprint3.Spinner
        intent="primary"
      />
    }
    description="Test"
    title="No Group Data:"
  >
    <div
      className="bp3-non-ideal-state"
    >
      <Component>
        <h4
          className="bp3-heading"
        >
          No Group Data:
        </h4>
      </Component>
      <div>
        Test
      </div>
      <Blueprint3.Spinner
        intent="primary"
      >
        <div
          className="bp3-spinner bp3-intent-primary"
        >
          <div
            className="bp3-spinner-animation"
          >
            <svg
              height={50}
              strokeWidth="8.00"
              viewBox="1.00 1.00 98.00 98.00"
              width={50}
            >
              <path
                className="bp3-spinner-track"
                d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
              />
              <path
                className="bp3-spinner-head"
                d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                pathLength={280}
                strokeDasharray="280 280"
                strokeDashoffset={210}
              />
            </svg>
          </div>
        </div>
      </Blueprint3.Spinner>
    </div>
  </Blueprint3.NonIdealState>
</WrappedWithNonIdealStateChecker>
`;

exports[`With Non Ideal States bad props shallow renders 1`] = `
<Blueprint3.Card
  elevation={0}
  interactive={true}
>
  <Component>
    Card heading
  </Component>
  <p>
    Card content
  </p>
</Blueprint3.Card>
`;

exports[`With Non Ideal States renders 1`] = `
<WrappedWithNonIdealStateChecker
  glContainer={
    Object {
      "close": [MockFunction],
      "emit": [MockFunction],
      "extendState": [MockFunction],
      "getElement": [MockFunction],
      "getState": [MockFunction],
      "height": 500,
      "hide": [MockFunction],
      "isHidden": false,
      "layoutManager": undefined,
      "off": [MockFunction],
      "on": [MockFunction] {
        "calls": Array [
          Array [
            "show",
            [Function],
          ],
          Array [
            "resize",
            [Function],
          ],
          Array [
            "show",
            [Function],
          ],
          Array [
            "resize",
            [Function],
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "parent": undefined,
      "setSize": [MockFunction],
      "setState": [MockFunction],
      "setTitle": [MockFunction],
      "show": [MockFunction],
      "tab": undefined,
      "title": "container-title",
      "trigger": [MockFunction],
      "unbind": [MockFunction],
      "width": 1000,
    }
  }
  status={
    Object {
      "error": undefined,
      "loading": true,
    }
  }
>
  <Blueprint3.NonIdealState
    action={
      <Blueprint3.Spinner
        intent="primary"
      />
    }
    description="Test"
    title="Loading:"
  >
    <div
      className="bp3-non-ideal-state"
    >
      <Component>
        <h4
          className="bp3-heading"
        >
          Loading:
        </h4>
      </Component>
      <div>
        Test
      </div>
      <Blueprint3.Spinner
        intent="primary"
      >
        <div
          className="bp3-spinner bp3-intent-primary"
        >
          <div
            className="bp3-spinner-animation"
          >
            <svg
              height={50}
              strokeWidth="8.00"
              viewBox="1.00 1.00 98.00 98.00"
              width={50}
            >
              <path
                className="bp3-spinner-track"
                d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
              />
              <path
                className="bp3-spinner-head"
                d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                pathLength={280}
                strokeDasharray="280 280"
                strokeDashoffset={210}
              />
            </svg>
          </div>
        </div>
      </Blueprint3.Spinner>
    </div>
  </Blueprint3.NonIdealState>
</WrappedWithNonIdealStateChecker>
`;

exports[`With Non Ideal States shallow renders 1`] = `
<Blueprint3.Card
  elevation={0}
  interactive={true}
>
  <Component>
    Card heading
  </Component>
  <p>
    Card content
  </p>
</Blueprint3.Card>
`;
