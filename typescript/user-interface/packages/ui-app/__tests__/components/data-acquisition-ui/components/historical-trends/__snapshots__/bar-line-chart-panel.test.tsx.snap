// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BarLineChartPanel renders BarLineChartPanel undefined data 1`] = `
<Blueprint3.NonIdealState
  description={null}
  title={null}
/>
`;

exports[`BarLineChartPanel renders BarLineChartPanel with duration data 1`] = `
<BarLineChartPanel
  colorPalette={
    DistinctColorPalette {
      "colorMap": Immutable.Map {
        "channel name": Object {
          "hue": 222.4922359499622,
          "lightness": 52.49999999999999,
          "saturation": 36.8421052631579,
        },
      },
      "generateDistinctColorHSL": [Function],
      "generateNewColorList": [Function],
      "generateNewListOfDistinctColorsWithKeysHSL": [Function],
      "getHueFromSeed": [Function],
      "nextHue": 222.4922359499622,
    }
  }
  endTimeMs={1606818300000}
  entryVisibilityMap={Immutable.Map {}}
  heightPx={100}
  legendTitle="My title"
  monitorType="LAG"
  startTimeMs={1606818240000}
  station={
    Object {
      "allStationAggregates": Array [],
      "channelSohs": Array [
        Object {
          "allSohMonitorValueAndStatuses": Array [
            Object {
              "contributing": false,
              "hasUnacknowledgedChanges": false,
              "monitorType": "LAG",
              "quietUntilMs": 1,
              "status": "GOOD",
              "thresholdBad": 10,
              "thresholdMarginal": 1,
              "value": 1,
              "valuePresent": true,
            },
          ],
          "channelName": "AAA111",
          "channelSohStatus": "GOOD",
        },
      ],
      "id": "1",
      "needsAcknowledgement": true,
      "needsAttention": true,
      "sohStatusSummary": "MARGINAL",
      "stationGroups": Array [
        Object {
          "groupName": "GroupA",
          "sohStationCapability": "BAD",
          "stationName": "Test",
        },
      ],
      "stationName": "Test",
      "statusContributors": Array [],
      "time": 123456789,
      "uuid": "2",
    }
  }
  uiHistoricalSoh={
    Object {
      "calculationTimes": Array [
        0,
        0.001,
        0.002,
      ],
      "minAndMax": Object {
        "xMax": 0.002,
        "xMin": 0,
        "yMax": 9,
        "yMin": 5,
      },
      "monitorValues": Array [
        Object {
          "average": 6,
          "channelName": "channel name",
          "type": "DURATION",
          "values": Float32Array [
            0,
            5,
            50,
            6,
            100,
            9,
          ],
        },
      ],
      "percentageSent": 100,
      "stationName": "station name",
    }
  }
  valueType="FLOAT"
  widthPx={100}
>
  <BarAndLineChart
    barChart={
      Object {
        "barDefs": Array [
          Object {
            "color": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
            "id": "channel name",
            "value": Object {
              "x": "channel name",
              "y": 6,
            },
          },
        ],
        "categories": Object {
          "x": Array [
            "channel name",
          ],
          "y": Array [],
        },
        "heightPx": 12,
        "maxBarWidth": 150,
        "minBarWidth": 25,
        "scrollBrushColor": "#fff",
        "thresholdsBad": Array [
          10,
        ],
        "thresholdsMarginal": Array [
          1,
        ],
        "widthPx": 100,
        "xAxisLabel": "Channel Name",
        "xTickFormat": [Function],
        "xTickTooltips": Array [
          "6",
        ],
        "yAxisLabel": "Average Lag (s)",
        "yTickFormat": [Function],
      }
    }
    heightPx={162}
    id="Test"
    lineChart={
      Object {
        "endTimeMs": 1606818300000,
        "heightPx": 12,
        "lineDefs": Array [
          Object {
            "average": 6,
            "color": "#5973b3",
            "id": "channel name",
            "values": Float32Array [
              0,
              5,
              50,
              6,
              100,
              9,
            ],
          },
        ],
        "minAndMax": Object {
          "xMax": 0.002,
          "xMin": 0,
          "yMax": 9,
          "yMin": 5,
        },
        "startTimeMs": 1606818240000,
        "widthPx": 100,
        "xAxisLabel": "Time",
        "yAxisLabel": "Lag (s)",
      }
    }
    widthPx={100}
  >
    <div
      className="legend-and-charts"
    >
      <BarChart
        barDefs={
          Array [
            Object {
              "color": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
              "id": "channel name",
              "value": Object {
                "x": "channel name",
                "y": 6,
              },
            },
          ]
        }
        categories={
          Object {
            "x": Array [
              "channel name",
            ],
            "y": Array [],
          }
        }
        classNames="table-display"
        heightPx={12}
        id="bar-chart-Test"
        maxBarWidth={150}
        minBarWidth={25}
        padding={
          Object {
            "bottom": 120,
            "left": 63,
            "right": 29,
            "top": 16,
          }
        }
        scrollBrushColor="#fff"
        thresholdsBad={
          Array [
            10,
          ]
        }
        thresholdsMarginal={
          Array [
            1,
          ]
        }
        widthPx={100}
        xAxisLabel="Channel Name"
        xTickFormat={[Function]}
        xTickTooltips={
          Array [
            "6",
          ]
        }
        yAxisLabel="Average Lag (s)"
        yTickFormat={[Function]}
      >
        <div
          className="core-chart table-display"
        >
          <VictoryChart
            animate={false}
            backgroundComponent={
              <Background
                circleComponent={<Circle />}
                rectComponent={<Rect />}
                role="presentation"
                shapeRendering="auto"
              />
            }
            containerComponent={
              <VictoryZoomContainer
                allowPan={false}
                allowZoom={false}
                className="VictoryContainer"
                clipContainerComponent={
                  <VictoryClipContainer
                    circleComponent={<Circle />}
                    clipPathComponent={<ClipPath />}
                    groupComponent={<g />}
                    rectComponent={<Rect />}
                  />
                }
                portalComponent={<Portal />}
                portalZIndex={99}
                responsive={true}
                zoomActive={false}
                zoomDomain={
                  Object {
                    "x": Array [
                      0,
                      -0.42857142857142855,
                    ],
                  }
                }
              />
            }
            defaultAxes={
              Object {
                "dependent": <VictoryAxis
                  axisComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="axis"
                    />
                  }
                  axisLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                  containerComponent={
                    <VictoryContainer
                      className="VictoryContainer"
                      portalComponent={<Portal />}
                      portalZIndex={99}
                      responsive={true}
                    />
                  }
                  dependentAxis={true}
                  fixLabelOverlap={false}
                  gridComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="grid"
                    />
                  }
                  groupComponent={
                    <g
                      role="presentation"
                    />
                  }
                  standalone={true}
                  theme={
                    Object {
                      "area": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "axis": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "axis": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeLinecap": "round",
                            "strokeLinejoin": "round",
                            "strokeWidth": 1,
                          },
                          "axisLabel": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 25,
                            "stroke": "transparent",
                            "textAnchor": "middle",
                          },
                          "grid": Object {
                            "fill": "none",
                            "pointerEvents": "painted",
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "fill": "transparent",
                            "size": 1,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "bar": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "padding": 8,
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "boxplot": Object {
                        "boxWidth": 20,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "max": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "maxLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "median": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "medianLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "min": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "minLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q1": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q1Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q3": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q3Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "candlestick": Object {
                        "candleColors": Object {
                          "negative": "#252525",
                          "positive": "#ffffff",
                        },
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "chart": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "errorbar": Object {
                        "borderWidth": 8,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "group": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "histogram": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#969696",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "legend": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "gutter": 10,
                        "orientation": "vertical",
                        "style": Object {
                          "data": Object {
                            "type": "circle",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "title": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "titleOrientation": "top",
                      },
                      "line": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "pie": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 400,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "padding": 10,
                            "stroke": "transparent",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 20,
                            "stroke": "transparent",
                          },
                        },
                        "width": 400,
                      },
                      "scatter": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "stack": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "tooltip": Object {
                        "cornerRadius": 5,
                        "flyoutPadding": 5,
                        "flyoutStyle": Object {
                          "fill": "#f0f0f0",
                          "pointerEvents": "none",
                          "stroke": "#252525",
                          "strokeWidth": 1,
                        },
                        "pointerLength": 10,
                        "style": Object {
                          "fill": "#252525",
                          "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "padding": 0,
                          "pointerEvents": "none",
                          "stroke": "transparent",
                        },
                      },
                      "voronoi": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "flyout": Object {
                            "fill": "#f0f0f0",
                            "pointerEvents": "none",
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "pointerEvents": "none",
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                    }
                  }
                  tickComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="tick"
                    />
                  }
                  tickLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                />,
                "independent": <VictoryAxis
                  axisComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="axis"
                    />
                  }
                  axisLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                  containerComponent={
                    <VictoryContainer
                      className="VictoryContainer"
                      portalComponent={<Portal />}
                      portalZIndex={99}
                      responsive={true}
                    />
                  }
                  fixLabelOverlap={false}
                  gridComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="grid"
                    />
                  }
                  groupComponent={
                    <g
                      role="presentation"
                    />
                  }
                  standalone={true}
                  theme={
                    Object {
                      "area": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "axis": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "axis": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeLinecap": "round",
                            "strokeLinejoin": "round",
                            "strokeWidth": 1,
                          },
                          "axisLabel": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 25,
                            "stroke": "transparent",
                            "textAnchor": "middle",
                          },
                          "grid": Object {
                            "fill": "none",
                            "pointerEvents": "painted",
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "fill": "transparent",
                            "size": 1,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "bar": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "padding": 8,
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "boxplot": Object {
                        "boxWidth": 20,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "max": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "maxLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "median": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "medianLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "min": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "minLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q1": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q1Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q3": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q3Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "candlestick": Object {
                        "candleColors": Object {
                          "negative": "#252525",
                          "positive": "#ffffff",
                        },
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "chart": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "errorbar": Object {
                        "borderWidth": 8,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "group": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "histogram": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#969696",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "legend": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "gutter": 10,
                        "orientation": "vertical",
                        "style": Object {
                          "data": Object {
                            "type": "circle",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "title": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "titleOrientation": "top",
                      },
                      "line": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "pie": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 400,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "padding": 10,
                            "stroke": "transparent",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 20,
                            "stroke": "transparent",
                          },
                        },
                        "width": 400,
                      },
                      "scatter": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "stack": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "tooltip": Object {
                        "cornerRadius": 5,
                        "flyoutPadding": 5,
                        "flyoutStyle": Object {
                          "fill": "#f0f0f0",
                          "pointerEvents": "none",
                          "stroke": "#252525",
                          "strokeWidth": 1,
                        },
                        "pointerLength": 10,
                        "style": Object {
                          "fill": "#252525",
                          "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "padding": 0,
                          "pointerEvents": "none",
                          "stroke": "transparent",
                        },
                      },
                      "voronoi": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "flyout": Object {
                            "fill": "#f0f0f0",
                            "pointerEvents": "none",
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "pointerEvents": "none",
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                    }
                  }
                  tickComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="tick"
                    />
                  }
                  tickLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                />,
              }
            }
            defaultPolarAxes={
              Object {
                "dependent": <VictoryAxis
                  axisComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="axis"
                    />
                  }
                  axisLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                  circularAxisComponent={
                    <Arc
                      pathComponent={<Path />}
                      role="presentation"
                      shapeRendering="auto"
                      type="axis"
                    />
                  }
                  circularGridComponent={
                    <Arc
                      pathComponent={<Path />}
                      role="presentation"
                      shapeRendering="auto"
                      type="grid"
                    />
                  }
                  containerComponent={
                    <VictoryContainer
                      className="VictoryContainer"
                      portalComponent={<Portal />}
                      portalZIndex={99}
                      responsive={true}
                    />
                  }
                  dependentAxis={true}
                  endAngle={360}
                  gridComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="grid"
                    />
                  }
                  groupComponent={
                    <g
                      role="presentation"
                    />
                  }
                  labelPlacement="parallel"
                  standalone={true}
                  startAngle={0}
                  theme={
                    Object {
                      "area": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "axis": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "axis": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeLinecap": "round",
                            "strokeLinejoin": "round",
                            "strokeWidth": 1,
                          },
                          "axisLabel": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 25,
                            "stroke": "transparent",
                            "textAnchor": "middle",
                          },
                          "grid": Object {
                            "fill": "none",
                            "pointerEvents": "painted",
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "fill": "transparent",
                            "size": 1,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "bar": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "padding": 8,
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "boxplot": Object {
                        "boxWidth": 20,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "max": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "maxLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "median": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "medianLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "min": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "minLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q1": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q1Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q3": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q3Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "candlestick": Object {
                        "candleColors": Object {
                          "negative": "#252525",
                          "positive": "#ffffff",
                        },
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "chart": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "errorbar": Object {
                        "borderWidth": 8,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "group": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "histogram": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#969696",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "legend": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "gutter": 10,
                        "orientation": "vertical",
                        "style": Object {
                          "data": Object {
                            "type": "circle",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "title": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "titleOrientation": "top",
                      },
                      "line": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "pie": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 400,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "padding": 10,
                            "stroke": "transparent",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 20,
                            "stroke": "transparent",
                          },
                        },
                        "width": 400,
                      },
                      "scatter": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "stack": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "tooltip": Object {
                        "cornerRadius": 5,
                        "flyoutPadding": 5,
                        "flyoutStyle": Object {
                          "fill": "#f0f0f0",
                          "pointerEvents": "none",
                          "stroke": "#252525",
                          "strokeWidth": 1,
                        },
                        "pointerLength": 10,
                        "style": Object {
                          "fill": "#252525",
                          "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "padding": 0,
                          "pointerEvents": "none",
                          "stroke": "transparent",
                        },
                      },
                      "voronoi": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "flyout": Object {
                            "fill": "#f0f0f0",
                            "pointerEvents": "none",
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "pointerEvents": "none",
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                    }
                  }
                  tickComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="tick"
                    />
                  }
                  tickLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                />,
                "independent": <VictoryAxis
                  axisComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="axis"
                    />
                  }
                  axisLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                  circularAxisComponent={
                    <Arc
                      pathComponent={<Path />}
                      role="presentation"
                      shapeRendering="auto"
                      type="axis"
                    />
                  }
                  circularGridComponent={
                    <Arc
                      pathComponent={<Path />}
                      role="presentation"
                      shapeRendering="auto"
                      type="grid"
                    />
                  }
                  containerComponent={
                    <VictoryContainer
                      className="VictoryContainer"
                      portalComponent={<Portal />}
                      portalZIndex={99}
                      responsive={true}
                    />
                  }
                  endAngle={360}
                  gridComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="grid"
                    />
                  }
                  groupComponent={
                    <g
                      role="presentation"
                    />
                  }
                  labelPlacement="parallel"
                  standalone={true}
                  startAngle={0}
                  theme={
                    Object {
                      "area": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "axis": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "axis": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeLinecap": "round",
                            "strokeLinejoin": "round",
                            "strokeWidth": 1,
                          },
                          "axisLabel": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 25,
                            "stroke": "transparent",
                            "textAnchor": "middle",
                          },
                          "grid": Object {
                            "fill": "none",
                            "pointerEvents": "painted",
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "fill": "transparent",
                            "size": 1,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "bar": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "padding": 8,
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "boxplot": Object {
                        "boxWidth": 20,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "max": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "maxLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "median": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "medianLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "min": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "minLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q1": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q1Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q3": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q3Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "candlestick": Object {
                        "candleColors": Object {
                          "negative": "#252525",
                          "positive": "#ffffff",
                        },
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "chart": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "errorbar": Object {
                        "borderWidth": 8,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "group": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "histogram": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#969696",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "legend": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "gutter": 10,
                        "orientation": "vertical",
                        "style": Object {
                          "data": Object {
                            "type": "circle",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "title": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "titleOrientation": "top",
                      },
                      "line": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "pie": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 400,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "padding": 10,
                            "stroke": "transparent",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 20,
                            "stroke": "transparent",
                          },
                        },
                        "width": 400,
                      },
                      "scatter": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "stack": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "tooltip": Object {
                        "cornerRadius": 5,
                        "flyoutPadding": 5,
                        "flyoutStyle": Object {
                          "fill": "#f0f0f0",
                          "pointerEvents": "none",
                          "stroke": "#252525",
                          "strokeWidth": 1,
                        },
                        "pointerLength": 10,
                        "style": Object {
                          "fill": "#252525",
                          "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "padding": 0,
                          "pointerEvents": "none",
                          "stroke": "transparent",
                        },
                      },
                      "voronoi": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "flyout": Object {
                            "fill": "#f0f0f0",
                            "pointerEvents": "none",
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "pointerEvents": "none",
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                    }
                  }
                  tickComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="tick"
                    />
                  }
                  tickLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                />,
              }
            }
            domainPadding={
              Object {
                "x": -15,
              }
            }
            groupComponent={<g />}
            height={-98}
            key="bar-chart-Test"
            padding={
              Object {
                "bottom": 120,
                "left": 63,
                "right": 29,
                "top": 16,
              }
            }
            standalone={true}
            style={
              Object {
                "parent": Object {
                  "height": -98,
                },
              }
            }
            theme={
              Object {
                "axis": Object {
                  "style": Object {
                    "axis": Object {
                      "offset": 14,
                      "stroke": "var(--core-prominent)",
                      "strokeWidth": 1,
                    },
                    "grid": Object {
                      "fill": "none",
                      "pointerEvents": "painted",
                      "stroke": "none",
                    },
                  },
                },
                "bar": Object {
                  "style": Object {
                    "data": Object {
                      "padding": 8,
                      "strokeWidth": 0,
                    },
                    "labels": Object {
                      "fill": "var(--core-prominent)",
                      "fontFamily": "var(--core-sans)",
                      "fontSize": 14,
                      "letterSpacing": "normal",
                      "padding": 14,
                      "stroke": "transparent",
                    },
                  },
                },
                "dependentAxis": Object {
                  "style": Object {
                    "axis": Object {
                      "offsetInlineStart": 16,
                      "stroke": "var(--core-soft)",
                      "strokeWidth": 1,
                    },
                    "grid": Object {
                      "stroke": "none",
                    },
                    "tickLabels": Object {
                      "fill": "var(--core-main)",
                      "fontFamily": "var(--core-sans)",
                      "fontSize": 14,
                      "letterSpacing": "normal",
                      "padding": 10,
                      "stroke": "transparent",
                    },
                    "ticks": Object {
                      "size": 4,
                      "stroke": "var(--core-main)",
                      "strokeWidth": 1,
                    },
                  },
                },
                "independentAxis": Object {
                  "style": Object {
                    "axis": Object {
                      "offsetInlineStart": 16,
                      "stroke": "var(--core-soft)",
                      "strokeWidth": 1,
                    },
                    "grid": Object {
                      "stroke": "none",
                    },
                    "tickLabels": Object {
                      "fill": "var(--core-main)",
                      "fontFamily": "var(--core-sans)",
                      "fontSize": 14,
                      "letterSpacing": "normal",
                      "padding": 10,
                      "stroke": "transparent",
                    },
                    "ticks": Object {
                      "size": 4,
                      "stroke": "var(--core-main)",
                      "strokeWidth": 1,
                    },
                  },
                },
              }
            }
            width={100}
          >
            <VictorySharedEvents
              container={
                <VictoryZoomContainer
                  allowPan={false}
                  allowZoom={false}
                  className="VictoryContainer"
                  clipContainerComponent={
                    <VictoryClipContainer
                      circleComponent={<Circle />}
                      clipPathComponent={<ClipPath />}
                      groupComponent={<g />}
                      rectComponent={<Rect />}
                    />
                  }
                  domain={
                    Object {
                      "x": Array [
                        1.0000000009312502,
                        0.9999999990687499,
                      ],
                      "y": Array [
                        0,
                        11,
                      ],
                    }
                  }
                  height={-98}
                  portalComponent={<Portal />}
                  portalZIndex={99}
                  responsive={true}
                  scale={
                    Object {
                      "x": [Function],
                      "y": [Function],
                    }
                  }
                  standalone={true}
                  style={
                    Object {
                      "height": -98,
                      "userSelect": "none",
                      "width": "100%",
                    }
                  }
                  theme={
                    Object {
                      "axis": Object {
                        "style": Object {
                          "axis": Object {
                            "offset": 14,
                            "stroke": "var(--core-prominent)",
                            "strokeWidth": 1,
                          },
                          "grid": Object {
                            "fill": "none",
                            "pointerEvents": "painted",
                            "stroke": "none",
                          },
                        },
                      },
                      "bar": Object {
                        "style": Object {
                          "data": Object {
                            "padding": 8,
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "var(--core-prominent)",
                            "fontFamily": "var(--core-sans)",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 14,
                            "stroke": "transparent",
                          },
                        },
                      },
                      "dependentAxis": Object {
                        "style": Object {
                          "axis": Object {
                            "offsetInlineStart": 16,
                            "stroke": "var(--core-soft)",
                            "strokeWidth": 1,
                          },
                          "grid": Object {
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "var(--core-main)",
                            "fontFamily": "var(--core-sans)",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "size": 4,
                            "stroke": "var(--core-main)",
                            "strokeWidth": 1,
                          },
                        },
                      },
                      "independentAxis": Object {
                        "style": Object {
                          "axis": Object {
                            "offsetInlineStart": 16,
                            "stroke": "var(--core-soft)",
                            "strokeWidth": 1,
                          },
                          "grid": Object {
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "var(--core-main)",
                            "fontFamily": "var(--core-sans)",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "size": 4,
                            "stroke": "var(--core-main)",
                            "strokeWidth": 1,
                          },
                        },
                      },
                    }
                  }
                  width={100}
                  zoomActive={false}
                  zoomDomain={
                    Object {
                      "x": Array [
                        0,
                        -0.42857142857142855,
                      ],
                    }
                  }
                />
              }
              events={
                Array [
                  Object {
                    "eventHandlers": Object {
                      "onMouseDown": [Function],
                      "onMouseLeave": [Function],
                      "onMouseMove": [Function],
                      "onMouseUp": [Function],
                      "onTouchCancel": [Function],
                      "onTouchEnd": [Function],
                      "onTouchMove": [Function],
                      "onTouchStart": [Function],
                    },
                    "target": "parent",
                  },
                ]
              }
              groupComponent={<g />}
            >
              <VictoryZoomContainer
                allowPan={false}
                allowZoom={false}
                className="VictoryContainer"
                clipContainerComponent={
                  <VictoryClipContainer
                    circleComponent={<Circle />}
                    clipPathComponent={<ClipPath />}
                    groupComponent={<g />}
                    rectComponent={<Rect />}
                  />
                }
                domain={
                  Object {
                    "x": Array [
                      1.0000000009312502,
                      0.9999999990687499,
                    ],
                    "y": Array [
                      0,
                      11,
                    ],
                  }
                }
                events={
                  Object {
                    "onMouseDown": [Function],
                    "onMouseLeave": [Function],
                    "onMouseMove": [Function],
                    "onMouseUp": [Function],
                    "onTouchCancel": [Function],
                    "onTouchEnd": [Function],
                    "onTouchMove": [Function],
                    "onTouchStart": [Function],
                  }
                }
                height={-98}
                portalComponent={<Portal />}
                portalZIndex={99}
                responsive={true}
                scale={
                  Object {
                    "x": [Function],
                    "y": [Function],
                  }
                }
                standalone={true}
                style={
                  Object {
                    "height": -98,
                    "userSelect": "none",
                    "width": "100%",
                  }
                }
                theme={
                  Object {
                    "axis": Object {
                      "style": Object {
                        "axis": Object {
                          "offset": 14,
                          "stroke": "var(--core-prominent)",
                          "strokeWidth": 1,
                        },
                        "grid": Object {
                          "fill": "none",
                          "pointerEvents": "painted",
                          "stroke": "none",
                        },
                      },
                    },
                    "bar": Object {
                      "style": Object {
                        "data": Object {
                          "padding": 8,
                          "strokeWidth": 0,
                        },
                        "labels": Object {
                          "fill": "var(--core-prominent)",
                          "fontFamily": "var(--core-sans)",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "padding": 14,
                          "stroke": "transparent",
                        },
                      },
                    },
                    "dependentAxis": Object {
                      "style": Object {
                        "axis": Object {
                          "offsetInlineStart": 16,
                          "stroke": "var(--core-soft)",
                          "strokeWidth": 1,
                        },
                        "grid": Object {
                          "stroke": "none",
                        },
                        "tickLabels": Object {
                          "fill": "var(--core-main)",
                          "fontFamily": "var(--core-sans)",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "padding": 10,
                          "stroke": "transparent",
                        },
                        "ticks": Object {
                          "size": 4,
                          "stroke": "var(--core-main)",
                          "strokeWidth": 1,
                        },
                      },
                    },
                    "independentAxis": Object {
                      "style": Object {
                        "axis": Object {
                          "offsetInlineStart": 16,
                          "stroke": "var(--core-soft)",
                          "strokeWidth": 1,
                        },
                        "grid": Object {
                          "stroke": "none",
                        },
                        "tickLabels": Object {
                          "fill": "var(--core-main)",
                          "fontFamily": "var(--core-sans)",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "padding": 10,
                          "stroke": "transparent",
                        },
                        "ticks": Object {
                          "size": 4,
                          "stroke": "var(--core-main)",
                          "strokeWidth": 1,
                        },
                      },
                    },
                  }
                }
                width={100}
                zoomActive={false}
                zoomDomain={
                  Object {
                    "x": Array [
                      0,
                      -0.42857142857142855,
                    ],
                  }
                }
              >
                <div
                  className="VictoryContainer"
                  style={
                    Object {
                      "height": -98,
                      "pointerEvents": "none",
                      "position": "relative",
                      "touchAction": "none",
                      "userSelect": "none",
                      "width": "100%",
                    }
                  }
                >
                  <svg
                    height={-98}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseMove={[Function]}
                    onMouseUp={[Function]}
                    onTouchCancel={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    role="img"
                    style={
                      Object {
                        "height": "auto",
                        "pointerEvents": "all",
                        "width": "100%",
                      }
                    }
                    viewBox="0 0 100 -98"
                    width={100}
                  >
                    <VictoryAxis
                      axisComponent={
                        <LineSegment
                          lineComponent={<Line />}
                          role="presentation"
                          shapeRendering="auto"
                          type="axis"
                        />
                      }
                      axisLabelComponent={
                        <VictoryLabel
                          backgroundComponent={<Rect />}
                          capHeight={0.71}
                          direction="inherit"
                          groupComponent={<g />}
                          lineHeight={1}
                          textComponent={<Text />}
                          tspanComponent={<TSpan />}
                        />
                      }
                      categories={
                        Object {
                          "x": Array [
                            "channel name",
                          ],
                          "y": undefined,
                        }
                      }
                      containerComponent={
                        <VictoryContainer
                          className="VictoryContainer"
                          portalComponent={<Portal />}
                          portalZIndex={99}
                          responsive={true}
                        />
                      }
                      crossAxis={true}
                      domain={
                        Object {
                          "x": Array [
                            0,
                            -0.42857142857142855,
                          ],
                          "y": Array [
                            0,
                            11,
                          ],
                        }
                      }
                      fixLabelOverlap={false}
                      gridComponent={
                        <LineSegment
                          lineComponent={<Line />}
                          role="presentation"
                          shapeRendering="auto"
                          type="grid"
                        />
                      }
                      groupComponent={
                        <g
                          role="presentation"
                        />
                      }
                      height={-98}
                      key=".$.$events-chart-axis-0"
                      name="chart-axis-0"
                      offsetX={63}
                      offsetY={120}
                      orientation="bottom"
                      padding={
                        Object {
                          "bottom": 120,
                          "left": 63,
                          "right": 29,
                          "top": 16,
                        }
                      }
                      scale={
                        Object {
                          "x": [Function],
                          "y": [Function],
                        }
                      }
                      sharedEvents={
                        Object {
                          "events": Array [],
                          "getEventState": [Function],
                          "getEvents": [Function],
                        }
                      }
                      standalone={false}
                      stringMap={
                        Object {
                          "x": Object {
                            "channel name": 1,
                          },
                          "y": null,
                        }
                      }
                      style={
                        Object {
                          "axis": Object {
                            "stroke": "none",
                          },
                          "parent": Object {
                            "height": -98,
                            "userSelect": "none",
                            "width": "100%",
                          },
                          "tickLabels": Object {
                            "fill": "none",
                          },
                          "ticks": Object {
                            "stroke": "none",
                          },
                        }
                      }
                      theme={
                        Object {
                          "axis": Object {
                            "style": Object {
                              "axis": Object {
                                "offset": 14,
                                "stroke": "var(--core-prominent)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "fill": "none",
                                "pointerEvents": "painted",
                                "stroke": "none",
                              },
                            },
                          },
                          "bar": Object {
                            "style": Object {
                              "data": Object {
                                "padding": 8,
                                "strokeWidth": 0,
                              },
                              "labels": Object {
                                "fill": "var(--core-prominent)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 14,
                                "stroke": "transparent",
                              },
                            },
                          },
                          "dependentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "var(--core-main)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "var(--core-main)",
                                "strokeWidth": 1,
                              },
                            },
                          },
                          "independentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "var(--core-main)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "var(--core-main)",
                                "strokeWidth": 1,
                              },
                            },
                          },
                        }
                      }
                      tickComponent={
                        <LineSegment
                          lineComponent={<Line />}
                          role="presentation"
                          shapeRendering="auto"
                          type="tick"
                        />
                      }
                      tickLabelComponent={
                        <VictoryLabel
                          backgroundComponent={<Rect />}
                          capHeight={0.71}
                          direction="inherit"
                          groupComponent={<g />}
                          lineHeight={1}
                          textComponent={<Text />}
                          tspanComponent={<TSpan />}
                        />
                      }
                      width={100}
                    >
                      <g
                        role="presentation"
                      >
                        <LineSegment
                          events={Object {}}
                          id="chart-axis-0-axis-0"
                          index={0}
                          key="chart-axis-0-axis-0"
                          lineComponent={<Line />}
                          role="presentation"
                          shapeRendering="auto"
                          type="axis"
                        >
                          <Line
                            role="presentation"
                            shapeRendering="auto"
                            style={
                              Object {
                                "stroke": "black",
                              }
                            }
                          >
                            <line
                              role="presentation"
                              shapeRendering="auto"
                              style={
                                Object {
                                  "stroke": "black",
                                }
                              }
                              vectorEffect="non-scaling-stroke"
                            />
                          </Line>
                        </LineSegment>
                      </g>
                    </VictoryAxis>
                    <Axis
                      barDefs={
                        Array [
                          Object {
                            "color": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                            "id": "channel name",
                            "value": Object {
                              "x": "channel name",
                              "y": 6,
                            },
                          },
                        ]
                      }
                      categories={
                        Object {
                          "x": Array [
                            "channel name",
                          ],
                          "y": undefined,
                        }
                      }
                      classNames="table-display"
                      domain={
                        Object {
                          "x": Array [
                            0,
                            -0.42857142857142855,
                          ],
                          "y": Array [
                            0,
                            11,
                          ],
                        }
                      }
                      height={-98}
                      heightPx={12}
                      id="bar-chart-Test"
                      key=".$.$.$chart-undefined-1-key-1"
                      maxBarWidth={150}
                      minBarWidth={25}
                      name="chart-undefined-1"
                      padding={
                        Object {
                          "bottom": 120,
                          "left": 63,
                          "right": 29,
                          "top": 16,
                        }
                      }
                      range={
                        Object {
                          "x": Array [
                            63,
                            71,
                          ],
                          "y": Array [
                            -218,
                            16,
                          ],
                        }
                      }
                      rotateAxis={true}
                      scale={
                        Object {
                          "x": [Function],
                          "y": [Function],
                        }
                      }
                      scrollBrushColor="#fff"
                      standalone={false}
                      stringMap={
                        Object {
                          "x": Object {
                            "channel name": 1,
                          },
                          "y": null,
                        }
                      }
                      style={
                        Object {
                          "parent": Object {
                            "height": -98,
                            "userSelect": "none",
                            "width": "100%",
                          },
                        }
                      }
                      theme={
                        Object {
                          "axis": Object {
                            "style": Object {
                              "axis": Object {
                                "offset": 14,
                                "stroke": "var(--core-prominent)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "fill": "none",
                                "pointerEvents": "painted",
                                "stroke": "none",
                              },
                            },
                          },
                          "bar": Object {
                            "style": Object {
                              "data": Object {
                                "padding": 8,
                                "strokeWidth": 0,
                              },
                              "labels": Object {
                                "fill": "var(--core-prominent)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 14,
                                "stroke": "transparent",
                              },
                            },
                          },
                          "dependentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "var(--core-main)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "var(--core-main)",
                                "strokeWidth": 1,
                              },
                            },
                          },
                          "independentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "var(--core-main)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "var(--core-main)",
                                "strokeWidth": 1,
                              },
                            },
                          },
                        }
                      }
                      thresholdsBad={
                        Array [
                          10,
                        ]
                      }
                      thresholdsMarginal={
                        Array [
                          1,
                        ]
                      }
                      width={100}
                      widthPx={100}
                      xAxisLabel="Channel Name"
                      xTickFormat={[Function]}
                      xTickTooltips={
                        Array [
                          "6",
                        ]
                      }
                      yAxisLabel="Average Lag (s)"
                      yTickFormat={[Function]}
                    >
                      <VictoryAxis
                        axisComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="axis"
                          />
                        }
                        axisLabelComponent={
                          <VictoryLabel
                            backgroundComponent={<Rect />}
                            capHeight={0.71}
                            direction="inherit"
                            groupComponent={<g />}
                            lineHeight={1}
                            textComponent={<Text />}
                            tspanComponent={<TSpan />}
                          />
                        }
                        barDefs={
                          Array [
                            Object {
                              "color": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                              "id": "channel name",
                              "value": Object {
                                "x": "channel name",
                                "y": 6,
                              },
                            },
                          ]
                        }
                        categories={
                          Object {
                            "x": Array [
                              "channel name",
                            ],
                            "y": undefined,
                          }
                        }
                        classNames="table-display"
                        containerComponent={
                          <VictoryContainer
                            className="VictoryContainer"
                            portalComponent={<Portal />}
                            portalZIndex={99}
                            responsive={true}
                          />
                        }
                        dependentAxis={false}
                        domain={
                          Object {
                            "x": Array [
                              0,
                              -0.42857142857142855,
                            ],
                            "y": Array [
                              0,
                              11,
                            ],
                          }
                        }
                        fixLabelOverlap={false}
                        gridComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="grid"
                          />
                        }
                        groupComponent={
                          <g
                            role="presentation"
                          />
                        }
                        height={-98}
                        heightPx={12}
                        id="bar-chart-Test"
                        label="Channel Name"
                        maxBarWidth={150}
                        minBarWidth={25}
                        name="chart-undefined-1"
                        padding={
                          Object {
                            "bottom": 120,
                            "left": 63,
                            "right": 29,
                            "top": 16,
                          }
                        }
                        range={
                          Object {
                            "x": Array [
                              63,
                              71,
                            ],
                            "y": Array [
                              -218,
                              16,
                            ],
                          }
                        }
                        rotateAxis={true}
                        scale={
                          Object {
                            "x": [Function],
                            "y": [Function],
                          }
                        }
                        scrollBrushColor="#fff"
                        standalone={false}
                        stringMap={
                          Object {
                            "x": Object {
                              "channel name": 1,
                            },
                            "y": null,
                          }
                        }
                        style={
                          Object {
                            "axisLabel": Object {
                              "fill": "var(--core-prominent)",
                              "fontFamily": "var(--core-sans)",
                              "fontSize": 14,
                              "letterSpacing": "normal",
                              "padding": 82,
                              "stroke": "transparent",
                            },
                            "tickLabels": Object {
                              "angle": -65,
                              "fontSize": 10,
                            },
                          }
                        }
                        theme={
                          Object {
                            "axis": Object {
                              "style": Object {
                                "axis": Object {
                                  "offset": 14,
                                  "stroke": "var(--core-prominent)",
                                  "strokeWidth": 1,
                                },
                                "grid": Object {
                                  "fill": "none",
                                  "pointerEvents": "painted",
                                  "stroke": "none",
                                },
                              },
                            },
                            "bar": Object {
                              "style": Object {
                                "data": Object {
                                  "padding": 8,
                                  "strokeWidth": 0,
                                },
                                "labels": Object {
                                  "fill": "var(--core-prominent)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 14,
                                  "stroke": "transparent",
                                },
                              },
                            },
                            "dependentAxis": Object {
                              "style": Object {
                                "axis": Object {
                                  "offsetInlineStart": 16,
                                  "stroke": "var(--core-soft)",
                                  "strokeWidth": 1,
                                },
                                "grid": Object {
                                  "stroke": "none",
                                },
                                "tickLabels": Object {
                                  "fill": "var(--core-main)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "ticks": Object {
                                  "size": 4,
                                  "stroke": "var(--core-main)",
                                  "strokeWidth": 1,
                                },
                              },
                            },
                            "independentAxis": Object {
                              "style": Object {
                                "axis": Object {
                                  "offsetInlineStart": 16,
                                  "stroke": "var(--core-soft)",
                                  "strokeWidth": 1,
                                },
                                "grid": Object {
                                  "stroke": "none",
                                },
                                "tickLabels": Object {
                                  "fill": "var(--core-main)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "ticks": Object {
                                  "size": 4,
                                  "stroke": "var(--core-main)",
                                  "strokeWidth": 1,
                                },
                              },
                            },
                          }
                        }
                        thresholdsBad={
                          Array [
                            10,
                          ]
                        }
                        thresholdsMarginal={
                          Array [
                            1,
                          ]
                        }
                        tickComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="tick"
                          />
                        }
                        tickFormat={[Function]}
                        tickLabelComponent={
                          <Label
                            dx={-25}
                            dy={-10}
                            xLabelInfoMap={
                              Immutable.Map {
                                "channel name": Object {
                                  "index": 0,
                                  "isDisabled": false,
                                  "tooltip": "6",
                                },
                              }
                            }
                          />
                        }
                        width={100}
                        widthPx={100}
                        xAxisLabel="Channel Name"
                        xTickFormat={[Function]}
                        xTickTooltips={
                          Array [
                            "6",
                          ]
                        }
                        yAxisLabel="Average Lag (s)"
                        yTickFormat={[Function]}
                      >
                        <g
                          role="presentation"
                        >
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="axis"
                          >
                            <Line
                              role="presentation"
                              shapeRendering="auto"
                              style={
                                Object {
                                  "stroke": "black",
                                }
                              }
                            >
                              <line
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "stroke": "black",
                                  }
                                }
                                vectorEffect="non-scaling-stroke"
                              />
                            </Line>
                          </LineSegment>
                          <VictoryLabel
                            backgroundComponent={<Rect />}
                            capHeight={0.71}
                            direction="inherit"
                            groupComponent={<g />}
                            lineHeight={1}
                            textComponent={<Text />}
                            tspanComponent={<TSpan />}
                          />
                        </g>
                      </VictoryAxis>
                      <VictoryAxis
                        axisComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="axis"
                          />
                        }
                        axisLabelComponent={
                          <VictoryLabel
                            backgroundComponent={<Rect />}
                            capHeight={0.71}
                            direction="inherit"
                            groupComponent={<g />}
                            lineHeight={1}
                            textComponent={<Text />}
                            tspanComponent={<TSpan />}
                          />
                        }
                        barDefs={
                          Array [
                            Object {
                              "color": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                              "id": "channel name",
                              "value": Object {
                                "x": "channel name",
                                "y": 6,
                              },
                            },
                          ]
                        }
                        categories={
                          Object {
                            "x": Array [
                              "channel name",
                            ],
                            "y": undefined,
                          }
                        }
                        classNames="table-display"
                        containerComponent={
                          <VictoryContainer
                            className="VictoryContainer"
                            portalComponent={<Portal />}
                            portalZIndex={99}
                            responsive={true}
                          />
                        }
                        dependentAxis={true}
                        domain={
                          Object {
                            "x": Array [
                              0,
                              -0.42857142857142855,
                            ],
                            "y": Array [
                              0,
                              11,
                            ],
                          }
                        }
                        fixLabelOverlap={false}
                        gridComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="grid"
                          />
                        }
                        groupComponent={
                          <g
                            role="presentation"
                          />
                        }
                        height={-98}
                        heightPx={12}
                        id="bar-chart-Test"
                        label="Average Lag (s)"
                        maxBarWidth={150}
                        minBarWidth={25}
                        name="chart-undefined-1"
                        padding={
                          Object {
                            "bottom": 120,
                            "left": 63,
                            "right": 29,
                            "top": 16,
                          }
                        }
                        range={
                          Object {
                            "x": Array [
                              63,
                              71,
                            ],
                            "y": Array [
                              -218,
                              16,
                            ],
                          }
                        }
                        rotateAxis={true}
                        scale={
                          Object {
                            "x": [Function],
                            "y": [Function],
                          }
                        }
                        scrollBrushColor="#fff"
                        standalone={false}
                        stringMap={
                          Object {
                            "x": Object {
                              "channel name": 1,
                            },
                            "y": null,
                          }
                        }
                        style={
                          Object {
                            "axisLabel": Object {
                              "fill": "var(--core-prominent)",
                              "fontFamily": "var(--core-sans)",
                              "fontSize": 14,
                              "letterSpacing": "normal",
                              "padding": 40,
                              "stroke": "transparent",
                            },
                            "tickLabels": Object {
                              "fontSize": 10,
                            },
                          }
                        }
                        theme={
                          Object {
                            "axis": Object {
                              "style": Object {
                                "axis": Object {
                                  "offset": 14,
                                  "stroke": "var(--core-prominent)",
                                  "strokeWidth": 1,
                                },
                                "grid": Object {
                                  "fill": "none",
                                  "pointerEvents": "painted",
                                  "stroke": "none",
                                },
                              },
                            },
                            "bar": Object {
                              "style": Object {
                                "data": Object {
                                  "padding": 8,
                                  "strokeWidth": 0,
                                },
                                "labels": Object {
                                  "fill": "var(--core-prominent)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 14,
                                  "stroke": "transparent",
                                },
                              },
                            },
                            "dependentAxis": Object {
                              "style": Object {
                                "axis": Object {
                                  "offsetInlineStart": 16,
                                  "stroke": "var(--core-soft)",
                                  "strokeWidth": 1,
                                },
                                "grid": Object {
                                  "stroke": "none",
                                },
                                "tickLabels": Object {
                                  "fill": "var(--core-main)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "ticks": Object {
                                  "size": 4,
                                  "stroke": "var(--core-main)",
                                  "strokeWidth": 1,
                                },
                              },
                            },
                            "independentAxis": Object {
                              "style": Object {
                                "axis": Object {
                                  "offsetInlineStart": 16,
                                  "stroke": "var(--core-soft)",
                                  "strokeWidth": 1,
                                },
                                "grid": Object {
                                  "stroke": "none",
                                },
                                "tickLabels": Object {
                                  "fill": "var(--core-main)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "ticks": Object {
                                  "size": 4,
                                  "stroke": "var(--core-main)",
                                  "strokeWidth": 1,
                                },
                              },
                            },
                          }
                        }
                        thresholdsBad={
                          Array [
                            10,
                          ]
                        }
                        thresholdsMarginal={
                          Array [
                            1,
                          ]
                        }
                        tickComponent={
                          <LineSegment
                            lineComponent={<Line />}
                            role="presentation"
                            shapeRendering="auto"
                            type="tick"
                          />
                        }
                        tickFormat={[Function]}
                        tickLabelComponent={
                          <Label
                            dx={6}
                            dy={0}
                          />
                        }
                        width={100}
                        widthPx={100}
                        xAxisLabel="Channel Name"
                        xTickFormat={[Function]}
                        xTickTooltips={
                          Array [
                            "6",
                          ]
                        }
                        yAxisLabel="Average Lag (s)"
                        yTickFormat={[Function]}
                      >
                        <g
                          role="presentation"
                        >
                          <LineSegment
                            dimension="y"
                            id="chart-undefined-1-axis-0"
                            index={0}
                            key="chart-undefined-1-axis-0"
                            lineComponent={<Line />}
                            role="presentation"
                            scale={
                              Object {
                                "y": [Function],
                              }
                            }
                            shapeRendering="auto"
                            style={
                              Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              }
                            }
                            ticks={
                              Array [
                                0,
                                2,
                                4,
                                6,
                                8,
                                10,
                              ]
                            }
                            type="axis"
                            x1={63}
                            x2={63}
                            y1={16}
                            y2={-218}
                          >
                            <Line
                              role="presentation"
                              shapeRendering="auto"
                              style={
                                Object {
                                  "offsetInlineStart": 16,
                                  "stroke": "var(--core-soft)",
                                  "strokeWidth": 1,
                                }
                              }
                              x1={63}
                              x2={63}
                              y1={16}
                              y2={-218}
                            >
                              <line
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "offsetInlineStart": 16,
                                    "stroke": "var(--core-soft)",
                                    "strokeWidth": 1,
                                  }
                                }
                                vectorEffect="non-scaling-stroke"
                                x1={63}
                                x2={63}
                                y1={16}
                                y2={-218}
                              />
                            </Line>
                          </LineSegment>
                          <VictoryLabel
                            angle={-90}
                            backgroundComponent={<Rect />}
                            capHeight={0.71}
                            direction="inherit"
                            groupComponent={<g />}
                            id="chart-undefined-1-axisLabel-0"
                            index={0}
                            key="chart-undefined-1-axisLabel-0"
                            lineHeight={1}
                            scale={
                              Object {
                                "y": [Function],
                              }
                            }
                            style={
                              Object {
                                "fill": "var(--core-prominent)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 40,
                                "stroke": "transparent",
                              }
                            }
                            text="Average Lag (s)"
                            textAnchor="middle"
                            textComponent={<Text />}
                            ticks={
                              Array [
                                0,
                                2,
                                4,
                                6,
                                8,
                                10,
                              ]
                            }
                            tspanComponent={<TSpan />}
                            verticalAnchor="end"
                            x={23}
                            y={-101}
                          >
                            <Text
                              direction="inherit"
                              dx={0}
                              id="chart-undefined-1-axisLabel-0"
                              key="text"
                              transform="rotate(-90,23,-101)"
                              x={23}
                              y={-103.03}
                            >
                              <text
                                direction="inherit"
                                dx={0}
                                id="chart-undefined-1-axisLabel-0"
                                transform="rotate(-90,23,-101)"
                                x={23}
                                y={-103.03}
                              >
                                <TSpan
                                  dx={0}
                                  dy={0}
                                  key="chart-undefined-1-axisLabel-0-key-0"
                                  style={
                                    Object {
                                      "fill": "var(--core-prominent)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 40,
                                      "stroke": "transparent",
                                    }
                                  }
                                  textAnchor="middle"
                                  x={23}
                                >
                                  <tspan
                                    dx={0}
                                    dy={0}
                                    style={
                                      Object {
                                        "fill": "var(--core-prominent)",
                                        "fontFamily": "var(--core-sans)",
                                        "fontSize": 14,
                                        "letterSpacing": "normal",
                                        "padding": 40,
                                        "stroke": "transparent",
                                      }
                                    }
                                    textAnchor="middle"
                                    x={23}
                                  >
                                    Average Lag (s)
                                  </tspan>
                                </TSpan>
                              </text>
                            </Text>
                          </VictoryLabel>
                          <g
                            key="chart-undefined-1-tick-group-0"
                            role="presentation"
                          >
                            <LineSegment
                              datum={0}
                              id="chart-undefined-1-ticks-0"
                              index={0}
                              key="chart-undefined-1-ticks-0"
                              lineComponent={<Line />}
                              role="presentation"
                              scale={
                                Object {
                                  "y": [Function],
                                }
                              }
                              shapeRendering="auto"
                              style={
                                Object {
                                  "size": 4,
                                  "stroke": "var(--core-main)",
                                  "strokeWidth": 1,
                                }
                              }
                              ticks={
                                Array [
                                  0,
                                  2,
                                  4,
                                  6,
                                  8,
                                  10,
                                ]
                              }
                              type="tick"
                              x1={63}
                              x2={59}
                              y1={-218}
                              y2={-218}
                            >
                              <Line
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  }
                                }
                                x1={63}
                                x2={59}
                                y1={-218}
                                y2={-218}
                              >
                                <line
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  vectorEffect="non-scaling-stroke"
                                  x1={63}
                                  x2={59}
                                  y1={-218}
                                  y2={-218}
                                />
                              </Line>
                            </LineSegment>
                            <Label
                              datum={0}
                              dx={6}
                              dy={0}
                              id="chart-undefined-1-tickLabels-0"
                              index={0}
                              key="chart-undefined-1-tickLabels-0"
                              scale={
                                Object {
                                  "y": [Function],
                                }
                              }
                              style={
                                Object {
                                  "fill": "var(--core-main)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 10,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                }
                              }
                              text={0}
                              textAnchor="end"
                              ticks={
                                Array [
                                  0,
                                  2,
                                  4,
                                  6,
                                  8,
                                  10,
                                ]
                              }
                              verticalAnchor="middle"
                              x={49}
                              y={-218}
                            >
                              <VictoryLabel
                                backgroundComponent={<Rect />}
                                capHeight={0.71}
                                datum={0}
                                direction="inherit"
                                dx={6}
                                dy={0}
                                events={
                                  Object {
                                    "onContextMenu": [Function],
                                  }
                                }
                                groupComponent={<g />}
                                id="chart-undefined-1-tickLabels-0"
                                index={0}
                                lineHeight={1}
                                scale={
                                  Object {
                                    "y": [Function],
                                  }
                                }
                                style={
                                  Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 10,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  }
                                }
                                text={0}
                                textAnchor="end"
                                textComponent={<Text />}
                                ticks={
                                  Array [
                                    0,
                                    2,
                                    4,
                                    6,
                                    8,
                                    10,
                                  ]
                                }
                                title="0"
                                tspanComponent={<TSpan />}
                                verticalAnchor="middle"
                                x={49}
                                y={-218}
                              >
                                <Text
                                  direction="inherit"
                                  dx={6}
                                  id="chart-undefined-1-tickLabels-0"
                                  key="text"
                                  onContextMenu={[Function]}
                                  title="0"
                                  x={49}
                                  y={-214.45}
                                >
                                  <text
                                    direction="inherit"
                                    dx={6}
                                    id="chart-undefined-1-tickLabels-0"
                                    onContextMenu={[Function]}
                                    x={49}
                                    y={-214.45}
                                  >
                                    <title>
                                      0
                                    </title>
                                    <TSpan
                                      dx={6}
                                      dy={0}
                                      key="chart-undefined-1-tickLabels-0-key-0"
                                      style={
                                        Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 10,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        }
                                      }
                                      textAnchor="end"
                                      x={49}
                                    >
                                      <tspan
                                        dx={6}
                                        dy={0}
                                        style={
                                          Object {
                                            "fill": "var(--core-main)",
                                            "fontFamily": "var(--core-sans)",
                                            "fontSize": 10,
                                            "letterSpacing": "normal",
                                            "padding": 10,
                                            "stroke": "transparent",
                                          }
                                        }
                                        textAnchor="end"
                                        x={49}
                                      >
                                        0
                                      </tspan>
                                    </TSpan>
                                  </text>
                                </Text>
                              </VictoryLabel>
                            </Label>
                          </g>
                          <g
                            key="chart-undefined-1-tick-group-1"
                            role="presentation"
                          >
                            <LineSegment
                              datum={2}
                              id="chart-undefined-1-ticks-1"
                              index={1}
                              key="chart-undefined-1-ticks-1"
                              lineComponent={<Line />}
                              role="presentation"
                              scale={
                                Object {
                                  "y": [Function],
                                }
                              }
                              shapeRendering="auto"
                              style={
                                Object {
                                  "size": 4,
                                  "stroke": "var(--core-main)",
                                  "strokeWidth": 1,
                                }
                              }
                              ticks={
                                Array [
                                  0,
                                  2,
                                  4,
                                  6,
                                  8,
                                  10,
                                ]
                              }
                              type="tick"
                              x1={63}
                              x2={59}
                              y1={-175.45454545454544}
                              y2={-175.45454545454544}
                            >
                              <Line
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  }
                                }
                                x1={63}
                                x2={59}
                                y1={-175.45454545454544}
                                y2={-175.45454545454544}
                              >
                                <line
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  vectorEffect="non-scaling-stroke"
                                  x1={63}
                                  x2={59}
                                  y1={-175.45454545454544}
                                  y2={-175.45454545454544}
                                />
                              </Line>
                            </LineSegment>
                            <Label
                              datum={2}
                              dx={6}
                              dy={0}
                              id="chart-undefined-1-tickLabels-1"
                              index={1}
                              key="chart-undefined-1-tickLabels-1"
                              scale={
                                Object {
                                  "y": [Function],
                                }
                              }
                              style={
                                Object {
                                  "fill": "var(--core-main)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 10,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                }
                              }
                              text={2}
                              textAnchor="end"
                              ticks={
                                Array [
                                  0,
                                  2,
                                  4,
                                  6,
                                  8,
                                  10,
                                ]
                              }
                              verticalAnchor="middle"
                              x={49}
                              y={-175.45454545454544}
                            >
                              <VictoryLabel
                                backgroundComponent={<Rect />}
                                capHeight={0.71}
                                datum={2}
                                direction="inherit"
                                dx={6}
                                dy={0}
                                events={
                                  Object {
                                    "onContextMenu": [Function],
                                  }
                                }
                                groupComponent={<g />}
                                id="chart-undefined-1-tickLabels-1"
                                index={1}
                                lineHeight={1}
                                scale={
                                  Object {
                                    "y": [Function],
                                  }
                                }
                                style={
                                  Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 10,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  }
                                }
                                text={2}
                                textAnchor="end"
                                textComponent={<Text />}
                                ticks={
                                  Array [
                                    0,
                                    2,
                                    4,
                                    6,
                                    8,
                                    10,
                                  ]
                                }
                                title="2"
                                tspanComponent={<TSpan />}
                                verticalAnchor="middle"
                                x={49}
                                y={-175.45454545454544}
                              >
                                <Text
                                  direction="inherit"
                                  dx={6}
                                  id="chart-undefined-1-tickLabels-1"
                                  key="text"
                                  onContextMenu={[Function]}
                                  title="2"
                                  x={49}
                                  y={-171.90454545454543}
                                >
                                  <text
                                    direction="inherit"
                                    dx={6}
                                    id="chart-undefined-1-tickLabels-1"
                                    onContextMenu={[Function]}
                                    x={49}
                                    y={-171.90454545454543}
                                  >
                                    <title>
                                      2
                                    </title>
                                    <TSpan
                                      dx={6}
                                      dy={0}
                                      key="chart-undefined-1-tickLabels-1-key-0"
                                      style={
                                        Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 10,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        }
                                      }
                                      textAnchor="end"
                                      x={49}
                                    >
                                      <tspan
                                        dx={6}
                                        dy={0}
                                        style={
                                          Object {
                                            "fill": "var(--core-main)",
                                            "fontFamily": "var(--core-sans)",
                                            "fontSize": 10,
                                            "letterSpacing": "normal",
                                            "padding": 10,
                                            "stroke": "transparent",
                                          }
                                        }
                                        textAnchor="end"
                                        x={49}
                                      >
                                        2
                                      </tspan>
                                    </TSpan>
                                  </text>
                                </Text>
                              </VictoryLabel>
                            </Label>
                          </g>
                          <g
                            key="chart-undefined-1-tick-group-2"
                            role="presentation"
                          >
                            <LineSegment
                              datum={4}
                              id="chart-undefined-1-ticks-2"
                              index={2}
                              key="chart-undefined-1-ticks-2"
                              lineComponent={<Line />}
                              role="presentation"
                              scale={
                                Object {
                                  "y": [Function],
                                }
                              }
                              shapeRendering="auto"
                              style={
                                Object {
                                  "size": 4,
                                  "stroke": "var(--core-main)",
                                  "strokeWidth": 1,
                                }
                              }
                              ticks={
                                Array [
                                  0,
                                  2,
                                  4,
                                  6,
                                  8,
                                  10,
                                ]
                              }
                              type="tick"
                              x1={63}
                              x2={59}
                              y1={-132.9090909090909}
                              y2={-132.9090909090909}
                            >
                              <Line
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  }
                                }
                                x1={63}
                                x2={59}
                                y1={-132.9090909090909}
                                y2={-132.9090909090909}
                              >
                                <line
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  vectorEffect="non-scaling-stroke"
                                  x1={63}
                                  x2={59}
                                  y1={-132.9090909090909}
                                  y2={-132.9090909090909}
                                />
                              </Line>
                            </LineSegment>
                            <Label
                              datum={4}
                              dx={6}
                              dy={0}
                              id="chart-undefined-1-tickLabels-2"
                              index={2}
                              key="chart-undefined-1-tickLabels-2"
                              scale={
                                Object {
                                  "y": [Function],
                                }
                              }
                              style={
                                Object {
                                  "fill": "var(--core-main)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 10,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                }
                              }
                              text={4}
                              textAnchor="end"
                              ticks={
                                Array [
                                  0,
                                  2,
                                  4,
                                  6,
                                  8,
                                  10,
                                ]
                              }
                              verticalAnchor="middle"
                              x={49}
                              y={-132.9090909090909}
                            >
                              <VictoryLabel
                                backgroundComponent={<Rect />}
                                capHeight={0.71}
                                datum={4}
                                direction="inherit"
                                dx={6}
                                dy={0}
                                events={
                                  Object {
                                    "onContextMenu": [Function],
                                  }
                                }
                                groupComponent={<g />}
                                id="chart-undefined-1-tickLabels-2"
                                index={2}
                                lineHeight={1}
                                scale={
                                  Object {
                                    "y": [Function],
                                  }
                                }
                                style={
                                  Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 10,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  }
                                }
                                text={4}
                                textAnchor="end"
                                textComponent={<Text />}
                                ticks={
                                  Array [
                                    0,
                                    2,
                                    4,
                                    6,
                                    8,
                                    10,
                                  ]
                                }
                                title="4"
                                tspanComponent={<TSpan />}
                                verticalAnchor="middle"
                                x={49}
                                y={-132.9090909090909}
                              >
                                <Text
                                  direction="inherit"
                                  dx={6}
                                  id="chart-undefined-1-tickLabels-2"
                                  key="text"
                                  onContextMenu={[Function]}
                                  title="4"
                                  x={49}
                                  y={-129.3590909090909}
                                >
                                  <text
                                    direction="inherit"
                                    dx={6}
                                    id="chart-undefined-1-tickLabels-2"
                                    onContextMenu={[Function]}
                                    x={49}
                                    y={-129.3590909090909}
                                  >
                                    <title>
                                      4
                                    </title>
                                    <TSpan
                                      dx={6}
                                      dy={0}
                                      key="chart-undefined-1-tickLabels-2-key-0"
                                      style={
                                        Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 10,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        }
                                      }
                                      textAnchor="end"
                                      x={49}
                                    >
                                      <tspan
                                        dx={6}
                                        dy={0}
                                        style={
                                          Object {
                                            "fill": "var(--core-main)",
                                            "fontFamily": "var(--core-sans)",
                                            "fontSize": 10,
                                            "letterSpacing": "normal",
                                            "padding": 10,
                                            "stroke": "transparent",
                                          }
                                        }
                                        textAnchor="end"
                                        x={49}
                                      >
                                        4
                                      </tspan>
                                    </TSpan>
                                  </text>
                                </Text>
                              </VictoryLabel>
                            </Label>
                          </g>
                          <g
                            key="chart-undefined-1-tick-group-3"
                            role="presentation"
                          >
                            <LineSegment
                              datum={6}
                              id="chart-undefined-1-ticks-3"
                              index={3}
                              key="chart-undefined-1-ticks-3"
                              lineComponent={<Line />}
                              role="presentation"
                              scale={
                                Object {
                                  "y": [Function],
                                }
                              }
                              shapeRendering="auto"
                              style={
                                Object {
                                  "size": 4,
                                  "stroke": "var(--core-main)",
                                  "strokeWidth": 1,
                                }
                              }
                              ticks={
                                Array [
                                  0,
                                  2,
                                  4,
                                  6,
                                  8,
                                  10,
                                ]
                              }
                              type="tick"
                              x1={63}
                              x2={59}
                              y1={-90.36363636363637}
                              y2={-90.36363636363637}
                            >
                              <Line
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  }
                                }
                                x1={63}
                                x2={59}
                                y1={-90.36363636363637}
                                y2={-90.36363636363637}
                              >
                                <line
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  vectorEffect="non-scaling-stroke"
                                  x1={63}
                                  x2={59}
                                  y1={-90.36363636363637}
                                  y2={-90.36363636363637}
                                />
                              </Line>
                            </LineSegment>
                            <Label
                              datum={6}
                              dx={6}
                              dy={0}
                              id="chart-undefined-1-tickLabels-3"
                              index={3}
                              key="chart-undefined-1-tickLabels-3"
                              scale={
                                Object {
                                  "y": [Function],
                                }
                              }
                              style={
                                Object {
                                  "fill": "var(--core-main)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 10,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                }
                              }
                              text={6}
                              textAnchor="end"
                              ticks={
                                Array [
                                  0,
                                  2,
                                  4,
                                  6,
                                  8,
                                  10,
                                ]
                              }
                              verticalAnchor="middle"
                              x={49}
                              y={-90.36363636363637}
                            >
                              <VictoryLabel
                                backgroundComponent={<Rect />}
                                capHeight={0.71}
                                datum={6}
                                direction="inherit"
                                dx={6}
                                dy={0}
                                events={
                                  Object {
                                    "onContextMenu": [Function],
                                  }
                                }
                                groupComponent={<g />}
                                id="chart-undefined-1-tickLabels-3"
                                index={3}
                                lineHeight={1}
                                scale={
                                  Object {
                                    "y": [Function],
                                  }
                                }
                                style={
                                  Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 10,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  }
                                }
                                text={6}
                                textAnchor="end"
                                textComponent={<Text />}
                                ticks={
                                  Array [
                                    0,
                                    2,
                                    4,
                                    6,
                                    8,
                                    10,
                                  ]
                                }
                                title="6"
                                tspanComponent={<TSpan />}
                                verticalAnchor="middle"
                                x={49}
                                y={-90.36363636363637}
                              >
                                <Text
                                  direction="inherit"
                                  dx={6}
                                  id="chart-undefined-1-tickLabels-3"
                                  key="text"
                                  onContextMenu={[Function]}
                                  title="6"
                                  x={49}
                                  y={-86.81363636363638}
                                >
                                  <text
                                    direction="inherit"
                                    dx={6}
                                    id="chart-undefined-1-tickLabels-3"
                                    onContextMenu={[Function]}
                                    x={49}
                                    y={-86.81363636363638}
                                  >
                                    <title>
                                      6
                                    </title>
                                    <TSpan
                                      dx={6}
                                      dy={0}
                                      key="chart-undefined-1-tickLabels-3-key-0"
                                      style={
                                        Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 10,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        }
                                      }
                                      textAnchor="end"
                                      x={49}
                                    >
                                      <tspan
                                        dx={6}
                                        dy={0}
                                        style={
                                          Object {
                                            "fill": "var(--core-main)",
                                            "fontFamily": "var(--core-sans)",
                                            "fontSize": 10,
                                            "letterSpacing": "normal",
                                            "padding": 10,
                                            "stroke": "transparent",
                                          }
                                        }
                                        textAnchor="end"
                                        x={49}
                                      >
                                        6
                                      </tspan>
                                    </TSpan>
                                  </text>
                                </Text>
                              </VictoryLabel>
                            </Label>
                          </g>
                          <g
                            key="chart-undefined-1-tick-group-4"
                            role="presentation"
                          >
                            <LineSegment
                              datum={8}
                              id="chart-undefined-1-ticks-4"
                              index={4}
                              key="chart-undefined-1-ticks-4"
                              lineComponent={<Line />}
                              role="presentation"
                              scale={
                                Object {
                                  "y": [Function],
                                }
                              }
                              shapeRendering="auto"
                              style={
                                Object {
                                  "size": 4,
                                  "stroke": "var(--core-main)",
                                  "strokeWidth": 1,
                                }
                              }
                              ticks={
                                Array [
                                  0,
                                  2,
                                  4,
                                  6,
                                  8,
                                  10,
                                ]
                              }
                              type="tick"
                              x1={63}
                              x2={59}
                              y1={-47.81818181818181}
                              y2={-47.81818181818181}
                            >
                              <Line
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  }
                                }
                                x1={63}
                                x2={59}
                                y1={-47.81818181818181}
                                y2={-47.81818181818181}
                              >
                                <line
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  vectorEffect="non-scaling-stroke"
                                  x1={63}
                                  x2={59}
                                  y1={-47.81818181818181}
                                  y2={-47.81818181818181}
                                />
                              </Line>
                            </LineSegment>
                            <Label
                              datum={8}
                              dx={6}
                              dy={0}
                              id="chart-undefined-1-tickLabels-4"
                              index={4}
                              key="chart-undefined-1-tickLabels-4"
                              scale={
                                Object {
                                  "y": [Function],
                                }
                              }
                              style={
                                Object {
                                  "fill": "var(--core-main)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 10,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                }
                              }
                              text={8}
                              textAnchor="end"
                              ticks={
                                Array [
                                  0,
                                  2,
                                  4,
                                  6,
                                  8,
                                  10,
                                ]
                              }
                              verticalAnchor="middle"
                              x={49}
                              y={-47.81818181818181}
                            >
                              <VictoryLabel
                                backgroundComponent={<Rect />}
                                capHeight={0.71}
                                datum={8}
                                direction="inherit"
                                dx={6}
                                dy={0}
                                events={
                                  Object {
                                    "onContextMenu": [Function],
                                  }
                                }
                                groupComponent={<g />}
                                id="chart-undefined-1-tickLabels-4"
                                index={4}
                                lineHeight={1}
                                scale={
                                  Object {
                                    "y": [Function],
                                  }
                                }
                                style={
                                  Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 10,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  }
                                }
                                text={8}
                                textAnchor="end"
                                textComponent={<Text />}
                                ticks={
                                  Array [
                                    0,
                                    2,
                                    4,
                                    6,
                                    8,
                                    10,
                                  ]
                                }
                                title="8"
                                tspanComponent={<TSpan />}
                                verticalAnchor="middle"
                                x={49}
                                y={-47.81818181818181}
                              >
                                <Text
                                  direction="inherit"
                                  dx={6}
                                  id="chart-undefined-1-tickLabels-4"
                                  key="text"
                                  onContextMenu={[Function]}
                                  title="8"
                                  x={49}
                                  y={-44.268181818181816}
                                >
                                  <text
                                    direction="inherit"
                                    dx={6}
                                    id="chart-undefined-1-tickLabels-4"
                                    onContextMenu={[Function]}
                                    x={49}
                                    y={-44.268181818181816}
                                  >
                                    <title>
                                      8
                                    </title>
                                    <TSpan
                                      dx={6}
                                      dy={0}
                                      key="chart-undefined-1-tickLabels-4-key-0"
                                      style={
                                        Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 10,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        }
                                      }
                                      textAnchor="end"
                                      x={49}
                                    >
                                      <tspan
                                        dx={6}
                                        dy={0}
                                        style={
                                          Object {
                                            "fill": "var(--core-main)",
                                            "fontFamily": "var(--core-sans)",
                                            "fontSize": 10,
                                            "letterSpacing": "normal",
                                            "padding": 10,
                                            "stroke": "transparent",
                                          }
                                        }
                                        textAnchor="end"
                                        x={49}
                                      >
                                        8
                                      </tspan>
                                    </TSpan>
                                  </text>
                                </Text>
                              </VictoryLabel>
                            </Label>
                          </g>
                          <g
                            key="chart-undefined-1-tick-group-5"
                            role="presentation"
                          >
                            <LineSegment
                              datum={10}
                              id="chart-undefined-1-ticks-5"
                              index={5}
                              key="chart-undefined-1-ticks-5"
                              lineComponent={<Line />}
                              role="presentation"
                              scale={
                                Object {
                                  "y": [Function],
                                }
                              }
                              shapeRendering="auto"
                              style={
                                Object {
                                  "size": 4,
                                  "stroke": "var(--core-main)",
                                  "strokeWidth": 1,
                                }
                              }
                              ticks={
                                Array [
                                  0,
                                  2,
                                  4,
                                  6,
                                  8,
                                  10,
                                ]
                              }
                              type="tick"
                              x1={63}
                              x2={59}
                              y1={-5.2727272727272805}
                              y2={-5.2727272727272805}
                            >
                              <Line
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "size": 4,
                                    "stroke": "var(--core-main)",
                                    "strokeWidth": 1,
                                  }
                                }
                                x1={63}
                                x2={59}
                                y1={-5.2727272727272805}
                                y2={-5.2727272727272805}
                              >
                                <line
                                  role="presentation"
                                  shapeRendering="auto"
                                  style={
                                    Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    }
                                  }
                                  vectorEffect="non-scaling-stroke"
                                  x1={63}
                                  x2={59}
                                  y1={-5.2727272727272805}
                                  y2={-5.2727272727272805}
                                />
                              </Line>
                            </LineSegment>
                            <Label
                              datum={10}
                              dx={6}
                              dy={0}
                              id="chart-undefined-1-tickLabels-5"
                              index={5}
                              key="chart-undefined-1-tickLabels-5"
                              scale={
                                Object {
                                  "y": [Function],
                                }
                              }
                              style={
                                Object {
                                  "fill": "var(--core-main)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 10,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                }
                              }
                              text={10}
                              textAnchor="end"
                              ticks={
                                Array [
                                  0,
                                  2,
                                  4,
                                  6,
                                  8,
                                  10,
                                ]
                              }
                              verticalAnchor="middle"
                              x={49}
                              y={-5.2727272727272805}
                            >
                              <VictoryLabel
                                backgroundComponent={<Rect />}
                                capHeight={0.71}
                                datum={10}
                                direction="inherit"
                                dx={6}
                                dy={0}
                                events={
                                  Object {
                                    "onContextMenu": [Function],
                                  }
                                }
                                groupComponent={<g />}
                                id="chart-undefined-1-tickLabels-5"
                                index={5}
                                lineHeight={1}
                                scale={
                                  Object {
                                    "y": [Function],
                                  }
                                }
                                style={
                                  Object {
                                    "fill": "var(--core-main)",
                                    "fontFamily": "var(--core-sans)",
                                    "fontSize": 10,
                                    "letterSpacing": "normal",
                                    "padding": 10,
                                    "stroke": "transparent",
                                  }
                                }
                                text={10}
                                textAnchor="end"
                                textComponent={<Text />}
                                ticks={
                                  Array [
                                    0,
                                    2,
                                    4,
                                    6,
                                    8,
                                    10,
                                  ]
                                }
                                title="10"
                                tspanComponent={<TSpan />}
                                verticalAnchor="middle"
                                x={49}
                                y={-5.2727272727272805}
                              >
                                <Text
                                  direction="inherit"
                                  dx={6}
                                  id="chart-undefined-1-tickLabels-5"
                                  key="text"
                                  onContextMenu={[Function]}
                                  title="10"
                                  x={49}
                                  y={-1.7227272727272807}
                                >
                                  <text
                                    direction="inherit"
                                    dx={6}
                                    id="chart-undefined-1-tickLabels-5"
                                    onContextMenu={[Function]}
                                    x={49}
                                    y={-1.7227272727272807}
                                  >
                                    <title>
                                      10
                                    </title>
                                    <TSpan
                                      dx={6}
                                      dy={0}
                                      key="chart-undefined-1-tickLabels-5-key-0"
                                      style={
                                        Object {
                                          "fill": "var(--core-main)",
                                          "fontFamily": "var(--core-sans)",
                                          "fontSize": 10,
                                          "letterSpacing": "normal",
                                          "padding": 10,
                                          "stroke": "transparent",
                                        }
                                      }
                                      textAnchor="end"
                                      x={49}
                                    >
                                      <tspan
                                        dx={6}
                                        dy={0}
                                        style={
                                          Object {
                                            "fill": "var(--core-main)",
                                            "fontFamily": "var(--core-sans)",
                                            "fontSize": 10,
                                            "letterSpacing": "normal",
                                            "padding": 10,
                                            "stroke": "transparent",
                                          }
                                        }
                                        textAnchor="end"
                                        x={49}
                                      >
                                        10
                                      </tspan>
                                    </TSpan>
                                  </text>
                                </Text>
                              </VictoryLabel>
                            </Label>
                          </g>
                        </g>
                      </VictoryAxis>
                    </Axis>
                    <VictoryBar
                      alignment="middle"
                      barWidth={150}
                      categories={
                        Object {
                          "x": Array [
                            "channel name",
                          ],
                          "y": undefined,
                        }
                      }
                      containerComponent={
                        <VictoryContainer
                          className="VictoryContainer"
                          portalComponent={<Portal />}
                          portalZIndex={99}
                          responsive={true}
                        />
                      }
                      data={
                        Array [
                          Object {
                            "barWidth": 150,
                            "x": "channel name",
                            "y": 6,
                          },
                        ]
                      }
                      dataComponent={
                        <Bar
                          defaultBarWidth={8}
                          pathComponent={<Path />}
                          role="presentation"
                          shapeRendering="auto"
                        />
                      }
                      domain={
                        Object {
                          "x": Array [
                            0,
                            -0.42857142857142855,
                          ],
                          "y": Array [
                            0,
                            11,
                          ],
                        }
                      }
                      groupComponent={
                        <VictoryClipContainer
                          circleComponent={<Circle />}
                          clipHeight={234}
                          clipPathComponent={<ClipPath />}
                          clipWidth={8}
                          groupComponent={<g />}
                          rectComponent={<Rect />}
                          translateX={63}
                          translateY={-218}
                        />
                      }
                      height={-98}
                      key=".$.$events-chart-bar-2"
                      labelComponent={
                        <VictoryLabel
                          backgroundComponent={<Rect />}
                          capHeight={0.71}
                          direction="inherit"
                          groupComponent={<g />}
                          lineHeight={1}
                          textComponent={<Text />}
                          tspanComponent={<TSpan />}
                        />
                      }
                      name="chart-bar-2"
                      padding={
                        Object {
                          "bottom": 120,
                          "left": 63,
                          "right": 29,
                          "top": 16,
                        }
                      }
                      range={
                        Object {
                          "x": Array [
                            63,
                            71,
                          ],
                          "y": Array [
                            -218,
                            16,
                          ],
                        }
                      }
                      samples={50}
                      scale={
                        Object {
                          "x": [Function],
                          "y": [Function],
                        }
                      }
                      sharedEvents={
                        Object {
                          "events": Array [],
                          "getEventState": [Function],
                          "getEvents": [Function],
                        }
                      }
                      sortOrder="ascending"
                      standalone={false}
                      stringMap={
                        Object {
                          "x": Object {
                            "channel name": 1,
                          },
                          "y": null,
                        }
                      }
                      style={
                        Object {
                          "data": Object {
                            "fill": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                            "width": 150,
                          },
                          "parent": Object {
                            "border": "1px solid #ffffff",
                          },
                        }
                      }
                      theme={
                        Object {
                          "axis": Object {
                            "style": Object {
                              "axis": Object {
                                "offset": 14,
                                "stroke": "var(--core-prominent)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "fill": "none",
                                "pointerEvents": "painted",
                                "stroke": "none",
                              },
                            },
                          },
                          "bar": Object {
                            "style": Object {
                              "data": Object {
                                "padding": 8,
                                "strokeWidth": 0,
                              },
                              "labels": Object {
                                "fill": "var(--core-prominent)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 14,
                                "stroke": "transparent",
                              },
                            },
                          },
                          "dependentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "var(--core-main)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "var(--core-main)",
                                "strokeWidth": 1,
                              },
                            },
                          },
                          "independentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "var(--core-main)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "var(--core-main)",
                                "strokeWidth": 1,
                              },
                            },
                          },
                        }
                      }
                      width={100}
                    >
                      <VictoryClipContainer
                        circleComponent={<Circle />}
                        clipHeight={234}
                        clipPathComponent={<ClipPath />}
                        clipWidth={8}
                        data={
                          Array [
                            Object {
                              "_x": 1,
                              "_y": 6,
                              "barWidth": 150,
                              "x": "channel name",
                              "xName": "channel name",
                              "y": 6,
                            },
                          ]
                        }
                        domain={
                          Object {
                            "x": Array [
                              0,
                              -0.42857142857142855,
                            ],
                            "y": Array [
                              0,
                              11,
                            ],
                          }
                        }
                        events={Object {}}
                        groupComponent={<g />}
                        height={-98}
                        id="chart-bar-2-parent-parent"
                        index="parent"
                        key="chart-bar-2-parent-parent"
                        name="chart-bar-2"
                        padding={
                          Object {
                            "bottom": 120,
                            "left": 63,
                            "right": 29,
                            "top": 16,
                          }
                        }
                        rectComponent={<Rect />}
                        scale={
                          Object {
                            "x": [Function],
                            "y": [Function],
                          }
                        }
                        standalone={false}
                        style={
                          Object {
                            "border": "1px solid #ffffff",
                            "height": "100%",
                            "width": "100%",
                          }
                        }
                        theme={
                          Object {
                            "axis": Object {
                              "style": Object {
                                "axis": Object {
                                  "offset": 14,
                                  "stroke": "var(--core-prominent)",
                                  "strokeWidth": 1,
                                },
                                "grid": Object {
                                  "fill": "none",
                                  "pointerEvents": "painted",
                                  "stroke": "none",
                                },
                              },
                            },
                            "bar": Object {
                              "style": Object {
                                "data": Object {
                                  "padding": 8,
                                  "strokeWidth": 0,
                                },
                                "labels": Object {
                                  "fill": "var(--core-prominent)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 14,
                                  "stroke": "transparent",
                                },
                              },
                            },
                            "dependentAxis": Object {
                              "style": Object {
                                "axis": Object {
                                  "offsetInlineStart": 16,
                                  "stroke": "var(--core-soft)",
                                  "strokeWidth": 1,
                                },
                                "grid": Object {
                                  "stroke": "none",
                                },
                                "tickLabels": Object {
                                  "fill": "var(--core-main)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "ticks": Object {
                                  "size": 4,
                                  "stroke": "var(--core-main)",
                                  "strokeWidth": 1,
                                },
                              },
                            },
                            "independentAxis": Object {
                              "style": Object {
                                "axis": Object {
                                  "offsetInlineStart": 16,
                                  "stroke": "var(--core-soft)",
                                  "strokeWidth": 1,
                                },
                                "grid": Object {
                                  "stroke": "none",
                                },
                                "tickLabels": Object {
                                  "fill": "var(--core-main)",
                                  "fontFamily": "var(--core-sans)",
                                  "fontSize": 14,
                                  "letterSpacing": "normal",
                                  "padding": 10,
                                  "stroke": "transparent",
                                },
                                "ticks": Object {
                                  "size": 4,
                                  "stroke": "var(--core-main)",
                                  "strokeWidth": 1,
                                },
                              },
                            },
                          }
                        }
                        translateX={63}
                        translateY={-218}
                        width={100}
                      >
                        <g
                          clipPath="url(#victory-clip-4)"
                          key="clipped-group-victory-clip-4"
                          style={
                            Object {
                              "border": "1px solid #ffffff",
                              "height": "100%",
                              "width": "100%",
                            }
                          }
                        >
                          <ClipPath
                            circleComponent={<Circle />}
                            clipHeight={234}
                            clipId="victory-clip-4"
                            clipPathComponent={<ClipPath />}
                            clipWidth={8}
                            data={
                              Array [
                                Object {
                                  "_x": 1,
                                  "_y": 6,
                                  "barWidth": 150,
                                  "x": "channel name",
                                  "xName": "channel name",
                                  "y": 6,
                                },
                              ]
                            }
                            domain={
                              Object {
                                "x": Array [
                                  0,
                                  -0.42857142857142855,
                                ],
                                "y": Array [
                                  0,
                                  11,
                                ],
                              }
                            }
                            events={Object {}}
                            groupComponent={<g />}
                            height={-98}
                            id="chart-bar-2-parent-parent"
                            index="parent"
                            key="clip-path-victory-clip-4"
                            name="chart-bar-2"
                            padding={
                              Object {
                                "bottom": 120,
                                "left": 63,
                                "right": 29,
                                "top": 16,
                              }
                            }
                            rectComponent={<Rect />}
                            scale={
                              Object {
                                "x": [Function],
                                "y": [Function],
                              }
                            }
                            standalone={false}
                            style={
                              Object {
                                "border": "1px solid #ffffff",
                                "height": "100%",
                                "width": "100%",
                              }
                            }
                            theme={
                              Object {
                                "axis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offset": 14,
                                      "stroke": "var(--core-prominent)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "fill": "none",
                                      "pointerEvents": "painted",
                                      "stroke": "none",
                                    },
                                  },
                                },
                                "bar": Object {
                                  "style": Object {
                                    "data": Object {
                                      "padding": 8,
                                      "strokeWidth": 0,
                                    },
                                    "labels": Object {
                                      "fill": "var(--core-prominent)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 14,
                                      "stroke": "transparent",
                                    },
                                  },
                                },
                                "dependentAxis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offsetInlineStart": 16,
                                      "stroke": "var(--core-soft)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "stroke": "none",
                                    },
                                    "tickLabels": Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    },
                                    "ticks": Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    },
                                  },
                                },
                                "independentAxis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offsetInlineStart": 16,
                                      "stroke": "var(--core-soft)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "stroke": "none",
                                    },
                                    "tickLabels": Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    },
                                    "ticks": Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    },
                                  },
                                },
                              }
                            }
                            translateX={63}
                            translateY={-218}
                            width={100}
                          >
                            <defs>
                              <clipPath
                                id="victory-clip-4"
                              >
                                <Rect
                                  height={234}
                                  width={8}
                                  x={63}
                                  y={-218}
                                >
                                  <rect
                                    height={234}
                                    vectorEffect="non-scaling-stroke"
                                    width={8}
                                    x={63}
                                    y={-218}
                                  />
                                </Rect>
                              </clipPath>
                            </defs>
                          </ClipPath>
                          <Bar
                            alignment="middle"
                            barWidth={150}
                            data={
                              Array [
                                Object {
                                  "_x": 1,
                                  "_y": 6,
                                  "barWidth": 150,
                                  "x": "channel name",
                                  "xName": "channel name",
                                  "y": 6,
                                },
                              ]
                            }
                            datum={
                              Object {
                                "_x": 1,
                                "_y": 6,
                                "barWidth": 150,
                                "x": "channel name",
                                "xName": "channel name",
                                "y": 6,
                              }
                            }
                            defaultBarWidth={8}
                            events={Object {}}
                            height={-98}
                            id="chart-bar-2-data-0"
                            index={0}
                            key=".$chart-bar-2-data-0"
                            pathComponent={<Path />}
                            role="presentation"
                            scale={
                              Object {
                                "x": [Function],
                                "y": [Function],
                              }
                            }
                            shapeRendering="auto"
                            style={
                              Object {
                                "fill": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                                "padding": 8,
                                "strokeWidth": 0,
                                "width": 150,
                              }
                            }
                            width={100}
                            x={44.33333333333333}
                            x0={63}
                            y={-90.36363636363637}
                            y0={-218}
                          >
                            <Path
                              d="M -30.66666666666667, -218 
A 0 0 0 0 0, -30.66666666666667, -218 
L -30.66666666666667, -90.36363636363637 
A 0 0 0 0 0, -30.66666666666667, -90.36363636363637 
L 119.33333333333333, -90.36363636363637 
A 0 0 0 0 0, 119.33333333333333, -90.36363636363637 
L 119.33333333333333, -218 
A 0 0 0 0 0, 119.33333333333333, -218 
 z"
                              role="presentation"
                              shapeRendering="auto"
                              style={
                                Object {
                                  "fill": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                                  "padding": 8,
                                  "stroke": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                                  "strokeWidth": 0,
                                  "width": 150,
                                }
                              }
                            >
                              <path
                                d="M -30.66666666666667, -218 
A 0 0 0 0 0, -30.66666666666667, -218 
L -30.66666666666667, -90.36363636363637 
A 0 0 0 0 0, -30.66666666666667, -90.36363636363637 
L 119.33333333333333, -90.36363636363637 
A 0 0 0 0 0, 119.33333333333333, -90.36363636363637 
L 119.33333333333333, -218 
A 0 0 0 0 0, 119.33333333333333, -218 
 z"
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "fill": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                                    "padding": 8,
                                    "stroke": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                                    "strokeWidth": 0,
                                    "width": 150,
                                  }
                                }
                              />
                            </Path>
                          </Bar>
                        </g>
                      </VictoryClipContainer>
                    </VictoryBar>
                    <VictoryLine
                      categories={
                        Object {
                          "x": Array [
                            "channel name",
                          ],
                          "y": undefined,
                        }
                      }
                      containerComponent={
                        <VictoryContainer
                          className="VictoryContainer"
                          portalComponent={<Portal />}
                          portalZIndex={99}
                          responsive={true}
                        />
                      }
                      data={
                        Array [
                          Object {
                            "x": 0.5,
                            "y": 1,
                          },
                          Object {
                            "x": 1.5,
                            "y": 1,
                          },
                        ]
                      }
                      dataComponent={
                        <Curve
                          pathComponent={<Path />}
                          role="presentation"
                          shapeRendering="auto"
                        />
                      }
                      domain={
                        Object {
                          "x": Array [
                            0,
                            -0.42857142857142855,
                          ],
                          "y": Array [
                            0,
                            11,
                          ],
                        }
                      }
                      groupComponent={
                        <VictoryClipContainer
                          circleComponent={<Circle />}
                          clipHeight={234}
                          clipPathComponent={<ClipPath />}
                          clipWidth={8}
                          groupComponent={<g />}
                          rectComponent={<Rect />}
                          translateX={63}
                          translateY={-218}
                        />
                      }
                      height={-98}
                      key=".$.$events-chart-line-3"
                      labelComponent={
                        <VictoryLabel
                          backgroundComponent={<Rect />}
                          capHeight={0.71}
                          direction="inherit"
                          groupComponent={<g />}
                          lineHeight={1}
                          renderInPortal={true}
                          textComponent={<Text />}
                          tspanComponent={<TSpan />}
                        />
                      }
                      name="chart-line-3"
                      padding={
                        Object {
                          "bottom": 120,
                          "left": 63,
                          "right": 29,
                          "top": 16,
                        }
                      }
                      range={
                        Object {
                          "x": Array [
                            63,
                            71,
                          ],
                          "y": Array [
                            -218,
                            16,
                          ],
                        }
                      }
                      samples={50}
                      scale={
                        Object {
                          "x": [Function],
                          "y": [Function],
                        }
                      }
                      sharedEvents={
                        Object {
                          "events": Array [],
                          "getEventState": [Function],
                          "getEvents": [Function],
                        }
                      }
                      sortKey="x"
                      sortOrder="ascending"
                      standalone={false}
                      stringMap={
                        Object {
                          "x": Object {
                            "channel name": 1,
                          },
                          "y": null,
                        }
                      }
                      style={
                        Object {
                          "data": Object {
                            "stroke": "#be8c0b",
                            "strokeWidth": 2,
                          },
                          "parent": Object {
                            "height": -98,
                            "userSelect": "none",
                            "width": "100%",
                          },
                        }
                      }
                      theme={
                        Object {
                          "axis": Object {
                            "style": Object {
                              "axis": Object {
                                "offset": 14,
                                "stroke": "var(--core-prominent)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "fill": "none",
                                "pointerEvents": "painted",
                                "stroke": "none",
                              },
                            },
                          },
                          "bar": Object {
                            "style": Object {
                              "data": Object {
                                "padding": 8,
                                "strokeWidth": 0,
                              },
                              "labels": Object {
                                "fill": "var(--core-prominent)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 14,
                                "stroke": "transparent",
                              },
                            },
                          },
                          "dependentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "var(--core-main)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "var(--core-main)",
                                "strokeWidth": 1,
                              },
                            },
                          },
                          "independentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "var(--core-main)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "var(--core-main)",
                                "strokeWidth": 1,
                              },
                            },
                          },
                        }
                      }
                      width={100}
                    >
                      <VictoryClipContainer
                        circleComponent={<Circle />}
                        clipHeight={234}
                        clipPathComponent={<ClipPath />}
                        clipWidth={8}
                        data={
                          Array [
                            Object {
                              "_x": 0.5,
                              "_y": 1,
                              "x": 0.5,
                              "y": 1,
                            },
                            Object {
                              "_x": 1.5,
                              "_y": 1,
                              "x": 1.5,
                              "y": 1,
                            },
                          ]
                        }
                        domain={
                          Object {
                            "x": Array [
                              0,
                              -0.42857142857142855,
                            ],
                            "y": Array [
                              0,
                              11,
                            ],
                          }
                        }
                        events={Object {}}
                        groupComponent={<g />}
                        height={-98}
                        id="chart-line-3-parent-parent"
                        index="parent"
                        key="chart-line-3-parent-parent"
                        name="chart-line-3"
                        padding={
                          Object {
                            "bottom": 120,
                            "left": 63,
                            "right": 29,
                            "top": 16,
                          }
                        }
                        rectComponent={<Rect />}
                        scale={
                          Object {
                            "x": [Function],
                            "y": [Function],
                          }
                        }
                        standalone={false}
                        style={
                          Object {
                            "height": -98,
                            "userSelect": "none",
                            "width": "100%",
                          }
                        }
                        translateX={63}
                        translateY={-218}
                        width={100}
                      >
                        <g
                          clipPath="url(#victory-clip-5)"
                          key="clipped-group-victory-clip-5"
                          style={
                            Object {
                              "height": -98,
                              "userSelect": "none",
                              "width": "100%",
                            }
                          }
                        >
                          <ClipPath
                            circleComponent={<Circle />}
                            clipHeight={234}
                            clipId="victory-clip-5"
                            clipPathComponent={<ClipPath />}
                            clipWidth={8}
                            data={
                              Array [
                                Object {
                                  "_x": 0.5,
                                  "_y": 1,
                                  "x": 0.5,
                                  "y": 1,
                                },
                                Object {
                                  "_x": 1.5,
                                  "_y": 1,
                                  "x": 1.5,
                                  "y": 1,
                                },
                              ]
                            }
                            domain={
                              Object {
                                "x": Array [
                                  0,
                                  -0.42857142857142855,
                                ],
                                "y": Array [
                                  0,
                                  11,
                                ],
                              }
                            }
                            events={Object {}}
                            groupComponent={<g />}
                            height={-98}
                            id="chart-line-3-parent-parent"
                            index="parent"
                            key="clip-path-victory-clip-5"
                            name="chart-line-3"
                            padding={
                              Object {
                                "bottom": 120,
                                "left": 63,
                                "right": 29,
                                "top": 16,
                              }
                            }
                            rectComponent={<Rect />}
                            scale={
                              Object {
                                "x": [Function],
                                "y": [Function],
                              }
                            }
                            standalone={false}
                            style={
                              Object {
                                "height": -98,
                                "userSelect": "none",
                                "width": "100%",
                              }
                            }
                            translateX={63}
                            translateY={-218}
                            width={100}
                          >
                            <defs>
                              <clipPath
                                id="victory-clip-5"
                              >
                                <Rect
                                  height={234}
                                  width={8}
                                  x={63}
                                  y={-218}
                                >
                                  <rect
                                    height={234}
                                    vectorEffect="non-scaling-stroke"
                                    width={8}
                                    x={63}
                                    y={-218}
                                  />
                                </Rect>
                              </clipPath>
                            </defs>
                          </ClipPath>
                          <Curve
                            data={
                              Array [
                                Object {
                                  "_x": 0.5,
                                  "_y": 1,
                                  "x": 0.5,
                                  "y": 1,
                                },
                                Object {
                                  "_x": 1.5,
                                  "_y": 1,
                                  "x": 1.5,
                                  "y": 1,
                                },
                              ]
                            }
                            events={Object {}}
                            groupComponent={
                              <VictoryClipContainer
                                circleComponent={<Circle />}
                                clipHeight={234}
                                clipPathComponent={<ClipPath />}
                                clipWidth={8}
                                groupComponent={<g />}
                                rectComponent={<Rect />}
                                translateX={63}
                                translateY={-218}
                              />
                            }
                            id="chart-line-3-data-all"
                            index="all"
                            interpolation="linear"
                            key=".$chart-line-3-data-all"
                            pathComponent={<Path />}
                            role="presentation"
                            scale={
                              Object {
                                "x": [Function],
                                "y": [Function],
                              }
                            }
                            shapeRendering="auto"
                            style={
                              Object {
                                "stroke": "#be8c0b",
                                "strokeWidth": 2,
                              }
                            }
                            theme={
                              Object {
                                "axis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offset": 14,
                                      "stroke": "var(--core-prominent)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "fill": "none",
                                      "pointerEvents": "painted",
                                      "stroke": "none",
                                    },
                                  },
                                },
                                "bar": Object {
                                  "style": Object {
                                    "data": Object {
                                      "padding": 8,
                                      "strokeWidth": 0,
                                    },
                                    "labels": Object {
                                      "fill": "var(--core-prominent)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 14,
                                      "stroke": "transparent",
                                    },
                                  },
                                },
                                "dependentAxis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offsetInlineStart": 16,
                                      "stroke": "var(--core-soft)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "stroke": "none",
                                    },
                                    "tickLabels": Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    },
                                    "ticks": Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    },
                                  },
                                },
                                "independentAxis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offsetInlineStart": 16,
                                      "stroke": "var(--core-soft)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "stroke": "none",
                                    },
                                    "tickLabels": Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    },
                                    "ticks": Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    },
                                  },
                                },
                              }
                            }
                          >
                            <Path
                              d="M53.666666666666664,-196.72727272727272L35,-196.72727272727272"
                              role="presentation"
                              shapeRendering="auto"
                              style={
                                Object {
                                  "fill": "none",
                                  "stroke": "#be8c0b",
                                  "strokeWidth": 2,
                                }
                              }
                            >
                              <path
                                d="M53.666666666666664,-196.72727272727272L35,-196.72727272727272"
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "fill": "none",
                                    "stroke": "#be8c0b",
                                    "strokeWidth": 2,
                                  }
                                }
                              />
                            </Path>
                          </Curve>
                        </g>
                      </VictoryClipContainer>
                    </VictoryLine>
                    <VictoryLine
                      categories={
                        Object {
                          "x": Array [
                            "channel name",
                          ],
                          "y": undefined,
                        }
                      }
                      containerComponent={
                        <VictoryContainer
                          className="VictoryContainer"
                          portalComponent={<Portal />}
                          portalZIndex={99}
                          responsive={true}
                        />
                      }
                      data={
                        Array [
                          Object {
                            "x": 0.5,
                            "y": 10,
                          },
                          Object {
                            "x": 1.5,
                            "y": 10,
                          },
                        ]
                      }
                      dataComponent={
                        <Curve
                          pathComponent={<Path />}
                          role="presentation"
                          shapeRendering="auto"
                        />
                      }
                      domain={
                        Object {
                          "x": Array [
                            0,
                            -0.42857142857142855,
                          ],
                          "y": Array [
                            0,
                            11,
                          ],
                        }
                      }
                      groupComponent={
                        <VictoryClipContainer
                          circleComponent={<Circle />}
                          clipHeight={234}
                          clipPathComponent={<ClipPath />}
                          clipWidth={8}
                          groupComponent={<g />}
                          rectComponent={<Rect />}
                          translateX={63}
                          translateY={-218}
                        />
                      }
                      height={-98}
                      key=".$.$events-chart-line-4"
                      labelComponent={
                        <VictoryLabel
                          backgroundComponent={<Rect />}
                          capHeight={0.71}
                          direction="inherit"
                          groupComponent={<g />}
                          lineHeight={1}
                          renderInPortal={true}
                          textComponent={<Text />}
                          tspanComponent={<TSpan />}
                        />
                      }
                      name="chart-line-4"
                      padding={
                        Object {
                          "bottom": 120,
                          "left": 63,
                          "right": 29,
                          "top": 16,
                        }
                      }
                      range={
                        Object {
                          "x": Array [
                            63,
                            71,
                          ],
                          "y": Array [
                            -218,
                            16,
                          ],
                        }
                      }
                      samples={50}
                      scale={
                        Object {
                          "x": [Function],
                          "y": [Function],
                        }
                      }
                      sharedEvents={
                        Object {
                          "events": Array [],
                          "getEventState": [Function],
                          "getEvents": [Function],
                        }
                      }
                      sortKey="x"
                      sortOrder="ascending"
                      standalone={false}
                      stringMap={
                        Object {
                          "x": Object {
                            "channel name": 1,
                          },
                          "y": null,
                        }
                      }
                      style={
                        Object {
                          "data": Object {
                            "stroke": "#d24c4c",
                            "strokeWidth": 2,
                          },
                          "parent": Object {
                            "height": -98,
                            "userSelect": "none",
                            "width": "100%",
                          },
                        }
                      }
                      theme={
                        Object {
                          "axis": Object {
                            "style": Object {
                              "axis": Object {
                                "offset": 14,
                                "stroke": "var(--core-prominent)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "fill": "none",
                                "pointerEvents": "painted",
                                "stroke": "none",
                              },
                            },
                          },
                          "bar": Object {
                            "style": Object {
                              "data": Object {
                                "padding": 8,
                                "strokeWidth": 0,
                              },
                              "labels": Object {
                                "fill": "var(--core-prominent)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 14,
                                "stroke": "transparent",
                              },
                            },
                          },
                          "dependentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "var(--core-main)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "var(--core-main)",
                                "strokeWidth": 1,
                              },
                            },
                          },
                          "independentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "var(--core-main)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "var(--core-main)",
                                "strokeWidth": 1,
                              },
                            },
                          },
                        }
                      }
                      width={100}
                    >
                      <VictoryClipContainer
                        circleComponent={<Circle />}
                        clipHeight={234}
                        clipPathComponent={<ClipPath />}
                        clipWidth={8}
                        data={
                          Array [
                            Object {
                              "_x": 0.5,
                              "_y": 10,
                              "x": 0.5,
                              "y": 10,
                            },
                            Object {
                              "_x": 1.5,
                              "_y": 10,
                              "x": 1.5,
                              "y": 10,
                            },
                          ]
                        }
                        domain={
                          Object {
                            "x": Array [
                              0,
                              -0.42857142857142855,
                            ],
                            "y": Array [
                              0,
                              11,
                            ],
                          }
                        }
                        events={Object {}}
                        groupComponent={<g />}
                        height={-98}
                        id="chart-line-4-parent-parent"
                        index="parent"
                        key="chart-line-4-parent-parent"
                        name="chart-line-4"
                        padding={
                          Object {
                            "bottom": 120,
                            "left": 63,
                            "right": 29,
                            "top": 16,
                          }
                        }
                        rectComponent={<Rect />}
                        scale={
                          Object {
                            "x": [Function],
                            "y": [Function],
                          }
                        }
                        standalone={false}
                        style={
                          Object {
                            "height": -98,
                            "userSelect": "none",
                            "width": "100%",
                          }
                        }
                        translateX={63}
                        translateY={-218}
                        width={100}
                      >
                        <g
                          clipPath="url(#victory-clip-6)"
                          key="clipped-group-victory-clip-6"
                          style={
                            Object {
                              "height": -98,
                              "userSelect": "none",
                              "width": "100%",
                            }
                          }
                        >
                          <ClipPath
                            circleComponent={<Circle />}
                            clipHeight={234}
                            clipId="victory-clip-6"
                            clipPathComponent={<ClipPath />}
                            clipWidth={8}
                            data={
                              Array [
                                Object {
                                  "_x": 0.5,
                                  "_y": 10,
                                  "x": 0.5,
                                  "y": 10,
                                },
                                Object {
                                  "_x": 1.5,
                                  "_y": 10,
                                  "x": 1.5,
                                  "y": 10,
                                },
                              ]
                            }
                            domain={
                              Object {
                                "x": Array [
                                  0,
                                  -0.42857142857142855,
                                ],
                                "y": Array [
                                  0,
                                  11,
                                ],
                              }
                            }
                            events={Object {}}
                            groupComponent={<g />}
                            height={-98}
                            id="chart-line-4-parent-parent"
                            index="parent"
                            key="clip-path-victory-clip-6"
                            name="chart-line-4"
                            padding={
                              Object {
                                "bottom": 120,
                                "left": 63,
                                "right": 29,
                                "top": 16,
                              }
                            }
                            rectComponent={<Rect />}
                            scale={
                              Object {
                                "x": [Function],
                                "y": [Function],
                              }
                            }
                            standalone={false}
                            style={
                              Object {
                                "height": -98,
                                "userSelect": "none",
                                "width": "100%",
                              }
                            }
                            translateX={63}
                            translateY={-218}
                            width={100}
                          >
                            <defs>
                              <clipPath
                                id="victory-clip-6"
                              >
                                <Rect
                                  height={234}
                                  width={8}
                                  x={63}
                                  y={-218}
                                >
                                  <rect
                                    height={234}
                                    vectorEffect="non-scaling-stroke"
                                    width={8}
                                    x={63}
                                    y={-218}
                                  />
                                </Rect>
                              </clipPath>
                            </defs>
                          </ClipPath>
                          <Curve
                            data={
                              Array [
                                Object {
                                  "_x": 0.5,
                                  "_y": 10,
                                  "x": 0.5,
                                  "y": 10,
                                },
                                Object {
                                  "_x": 1.5,
                                  "_y": 10,
                                  "x": 1.5,
                                  "y": 10,
                                },
                              ]
                            }
                            events={Object {}}
                            groupComponent={
                              <VictoryClipContainer
                                circleComponent={<Circle />}
                                clipHeight={234}
                                clipPathComponent={<ClipPath />}
                                clipWidth={8}
                                groupComponent={<g />}
                                rectComponent={<Rect />}
                                translateX={63}
                                translateY={-218}
                              />
                            }
                            id="chart-line-4-data-all"
                            index="all"
                            interpolation="linear"
                            key=".$chart-line-4-data-all"
                            pathComponent={<Path />}
                            role="presentation"
                            scale={
                              Object {
                                "x": [Function],
                                "y": [Function],
                              }
                            }
                            shapeRendering="auto"
                            style={
                              Object {
                                "stroke": "#d24c4c",
                                "strokeWidth": 2,
                              }
                            }
                            theme={
                              Object {
                                "axis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offset": 14,
                                      "stroke": "var(--core-prominent)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "fill": "none",
                                      "pointerEvents": "painted",
                                      "stroke": "none",
                                    },
                                  },
                                },
                                "bar": Object {
                                  "style": Object {
                                    "data": Object {
                                      "padding": 8,
                                      "strokeWidth": 0,
                                    },
                                    "labels": Object {
                                      "fill": "var(--core-prominent)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 14,
                                      "stroke": "transparent",
                                    },
                                  },
                                },
                                "dependentAxis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offsetInlineStart": 16,
                                      "stroke": "var(--core-soft)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "stroke": "none",
                                    },
                                    "tickLabels": Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    },
                                    "ticks": Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    },
                                  },
                                },
                                "independentAxis": Object {
                                  "style": Object {
                                    "axis": Object {
                                      "offsetInlineStart": 16,
                                      "stroke": "var(--core-soft)",
                                      "strokeWidth": 1,
                                    },
                                    "grid": Object {
                                      "stroke": "none",
                                    },
                                    "tickLabels": Object {
                                      "fill": "var(--core-main)",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "padding": 10,
                                      "stroke": "transparent",
                                    },
                                    "ticks": Object {
                                      "size": 4,
                                      "stroke": "var(--core-main)",
                                      "strokeWidth": 1,
                                    },
                                  },
                                },
                              }
                            }
                          >
                            <Path
                              d="M53.666666666666664,-5.2727272727272805L35,-5.2727272727272805"
                              role="presentation"
                              shapeRendering="auto"
                              style={
                                Object {
                                  "fill": "none",
                                  "stroke": "#d24c4c",
                                  "strokeWidth": 2,
                                }
                              }
                            >
                              <path
                                d="M53.666666666666664,-5.2727272727272805L35,-5.2727272727272805"
                                role="presentation"
                                shapeRendering="auto"
                                style={
                                  Object {
                                    "fill": "none",
                                    "stroke": "#d24c4c",
                                    "strokeWidth": 2,
                                  }
                                }
                              />
                            </Path>
                          </Curve>
                        </g>
                      </VictoryClipContainer>
                    </VictoryLine>
                  </svg>
                  <div
                    style={
                      Object {
                        "height": "auto",
                        "left": 0,
                        "position": "absolute",
                        "top": 0,
                        "width": "100%",
                        "zIndex": 99,
                      }
                    }
                  >
                    <Portal
                      height={-98}
                      style={
                        Object {
                          "height": "auto",
                          "overflow": "visible",
                          "width": "100%",
                        }
                      }
                      viewBox="0 0 100 -98"
                      width={100}
                    >
                      <svg
                        height={-98}
                        style={
                          Object {
                            "height": "auto",
                            "overflow": "visible",
                            "width": "100%",
                          }
                        }
                        viewBox="0 0 100 -98"
                        width={100}
                      />
                    </Portal>
                  </div>
                </div>
              </VictoryZoomContainer>
            </VictorySharedEvents>
          </VictoryChart>
          <VictoryChart
            backgroundComponent={
              <Background
                circleComponent={<Circle />}
                rectComponent={<Rect />}
                role="presentation"
                shapeRendering="auto"
              />
            }
            containerComponent={
              <VictoryBrushContainer
                allowDrag={true}
                allowDraw={true}
                allowResize={true}
                brushComponent={<Rect />}
                brushDimension="x"
                brushDomain={
                  Object {
                    "x": Array [
                      0,
                      -0.42857142857142855,
                    ],
                  }
                }
                brushStyle={
                  Object {
                    "fill": "#fff",
                    "opacity": 0.3,
                  }
                }
                className="VictoryContainer"
                defaultBrushArea="move"
                handleComponent={<Rect />}
                handleStyle={
                  Object {
                    "fill": "transparent",
                    "stroke": "transparent",
                  }
                }
                handleWidth={8}
                mouseMoveThreshold={0}
                onBrushDomainChange={[Function]}
                portalComponent={<Portal />}
                portalZIndex={99}
                responsive={false}
              />
            }
            defaultAxes={
              Object {
                "dependent": <VictoryAxis
                  axisComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="axis"
                    />
                  }
                  axisLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                  containerComponent={
                    <VictoryContainer
                      className="VictoryContainer"
                      portalComponent={<Portal />}
                      portalZIndex={99}
                      responsive={true}
                    />
                  }
                  dependentAxis={true}
                  fixLabelOverlap={false}
                  gridComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="grid"
                    />
                  }
                  groupComponent={
                    <g
                      role="presentation"
                    />
                  }
                  standalone={true}
                  theme={
                    Object {
                      "area": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "axis": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "axis": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeLinecap": "round",
                            "strokeLinejoin": "round",
                            "strokeWidth": 1,
                          },
                          "axisLabel": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 25,
                            "stroke": "transparent",
                            "textAnchor": "middle",
                          },
                          "grid": Object {
                            "fill": "none",
                            "pointerEvents": "painted",
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "fill": "transparent",
                            "size": 1,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "bar": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "padding": 8,
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "boxplot": Object {
                        "boxWidth": 20,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "max": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "maxLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "median": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "medianLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "min": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "minLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q1": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q1Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q3": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q3Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "candlestick": Object {
                        "candleColors": Object {
                          "negative": "#252525",
                          "positive": "#ffffff",
                        },
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "chart": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "errorbar": Object {
                        "borderWidth": 8,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "group": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "histogram": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#969696",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "legend": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "gutter": 10,
                        "orientation": "vertical",
                        "style": Object {
                          "data": Object {
                            "type": "circle",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "title": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "titleOrientation": "top",
                      },
                      "line": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "pie": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 400,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "padding": 10,
                            "stroke": "transparent",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 20,
                            "stroke": "transparent",
                          },
                        },
                        "width": 400,
                      },
                      "scatter": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "stack": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "tooltip": Object {
                        "cornerRadius": 5,
                        "flyoutPadding": 5,
                        "flyoutStyle": Object {
                          "fill": "#f0f0f0",
                          "pointerEvents": "none",
                          "stroke": "#252525",
                          "strokeWidth": 1,
                        },
                        "pointerLength": 10,
                        "style": Object {
                          "fill": "#252525",
                          "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "padding": 0,
                          "pointerEvents": "none",
                          "stroke": "transparent",
                        },
                      },
                      "voronoi": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "flyout": Object {
                            "fill": "#f0f0f0",
                            "pointerEvents": "none",
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "pointerEvents": "none",
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                    }
                  }
                  tickComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="tick"
                    />
                  }
                  tickLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                />,
                "independent": <VictoryAxis
                  axisComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="axis"
                    />
                  }
                  axisLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                  containerComponent={
                    <VictoryContainer
                      className="VictoryContainer"
                      portalComponent={<Portal />}
                      portalZIndex={99}
                      responsive={true}
                    />
                  }
                  fixLabelOverlap={false}
                  gridComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="grid"
                    />
                  }
                  groupComponent={
                    <g
                      role="presentation"
                    />
                  }
                  standalone={true}
                  theme={
                    Object {
                      "area": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "axis": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "axis": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeLinecap": "round",
                            "strokeLinejoin": "round",
                            "strokeWidth": 1,
                          },
                          "axisLabel": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 25,
                            "stroke": "transparent",
                            "textAnchor": "middle",
                          },
                          "grid": Object {
                            "fill": "none",
                            "pointerEvents": "painted",
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "fill": "transparent",
                            "size": 1,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "bar": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "padding": 8,
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "boxplot": Object {
                        "boxWidth": 20,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "max": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "maxLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "median": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "medianLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "min": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "minLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q1": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q1Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q3": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q3Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "candlestick": Object {
                        "candleColors": Object {
                          "negative": "#252525",
                          "positive": "#ffffff",
                        },
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "chart": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "errorbar": Object {
                        "borderWidth": 8,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "group": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "histogram": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#969696",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "legend": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "gutter": 10,
                        "orientation": "vertical",
                        "style": Object {
                          "data": Object {
                            "type": "circle",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "title": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "titleOrientation": "top",
                      },
                      "line": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "pie": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 400,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "padding": 10,
                            "stroke": "transparent",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 20,
                            "stroke": "transparent",
                          },
                        },
                        "width": 400,
                      },
                      "scatter": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "stack": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "tooltip": Object {
                        "cornerRadius": 5,
                        "flyoutPadding": 5,
                        "flyoutStyle": Object {
                          "fill": "#f0f0f0",
                          "pointerEvents": "none",
                          "stroke": "#252525",
                          "strokeWidth": 1,
                        },
                        "pointerLength": 10,
                        "style": Object {
                          "fill": "#252525",
                          "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "padding": 0,
                          "pointerEvents": "none",
                          "stroke": "transparent",
                        },
                      },
                      "voronoi": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "flyout": Object {
                            "fill": "#f0f0f0",
                            "pointerEvents": "none",
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "pointerEvents": "none",
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                    }
                  }
                  tickComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="tick"
                    />
                  }
                  tickLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                />,
              }
            }
            defaultPolarAxes={
              Object {
                "dependent": <VictoryAxis
                  axisComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="axis"
                    />
                  }
                  axisLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                  circularAxisComponent={
                    <Arc
                      pathComponent={<Path />}
                      role="presentation"
                      shapeRendering="auto"
                      type="axis"
                    />
                  }
                  circularGridComponent={
                    <Arc
                      pathComponent={<Path />}
                      role="presentation"
                      shapeRendering="auto"
                      type="grid"
                    />
                  }
                  containerComponent={
                    <VictoryContainer
                      className="VictoryContainer"
                      portalComponent={<Portal />}
                      portalZIndex={99}
                      responsive={true}
                    />
                  }
                  dependentAxis={true}
                  endAngle={360}
                  gridComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="grid"
                    />
                  }
                  groupComponent={
                    <g
                      role="presentation"
                    />
                  }
                  labelPlacement="parallel"
                  standalone={true}
                  startAngle={0}
                  theme={
                    Object {
                      "area": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "axis": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "axis": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeLinecap": "round",
                            "strokeLinejoin": "round",
                            "strokeWidth": 1,
                          },
                          "axisLabel": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 25,
                            "stroke": "transparent",
                            "textAnchor": "middle",
                          },
                          "grid": Object {
                            "fill": "none",
                            "pointerEvents": "painted",
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "fill": "transparent",
                            "size": 1,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "bar": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "padding": 8,
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "boxplot": Object {
                        "boxWidth": 20,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "max": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "maxLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "median": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "medianLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "min": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "minLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q1": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q1Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q3": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q3Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "candlestick": Object {
                        "candleColors": Object {
                          "negative": "#252525",
                          "positive": "#ffffff",
                        },
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "chart": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "errorbar": Object {
                        "borderWidth": 8,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "group": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "histogram": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#969696",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "legend": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "gutter": 10,
                        "orientation": "vertical",
                        "style": Object {
                          "data": Object {
                            "type": "circle",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "title": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "titleOrientation": "top",
                      },
                      "line": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "pie": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 400,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "padding": 10,
                            "stroke": "transparent",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 20,
                            "stroke": "transparent",
                          },
                        },
                        "width": 400,
                      },
                      "scatter": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "stack": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "tooltip": Object {
                        "cornerRadius": 5,
                        "flyoutPadding": 5,
                        "flyoutStyle": Object {
                          "fill": "#f0f0f0",
                          "pointerEvents": "none",
                          "stroke": "#252525",
                          "strokeWidth": 1,
                        },
                        "pointerLength": 10,
                        "style": Object {
                          "fill": "#252525",
                          "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "padding": 0,
                          "pointerEvents": "none",
                          "stroke": "transparent",
                        },
                      },
                      "voronoi": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "flyout": Object {
                            "fill": "#f0f0f0",
                            "pointerEvents": "none",
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "pointerEvents": "none",
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                    }
                  }
                  tickComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="tick"
                    />
                  }
                  tickLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                />,
                "independent": <VictoryAxis
                  axisComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="axis"
                    />
                  }
                  axisLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                  circularAxisComponent={
                    <Arc
                      pathComponent={<Path />}
                      role="presentation"
                      shapeRendering="auto"
                      type="axis"
                    />
                  }
                  circularGridComponent={
                    <Arc
                      pathComponent={<Path />}
                      role="presentation"
                      shapeRendering="auto"
                      type="grid"
                    />
                  }
                  containerComponent={
                    <VictoryContainer
                      className="VictoryContainer"
                      portalComponent={<Portal />}
                      portalZIndex={99}
                      responsive={true}
                    />
                  }
                  endAngle={360}
                  gridComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="grid"
                    />
                  }
                  groupComponent={
                    <g
                      role="presentation"
                    />
                  }
                  labelPlacement="parallel"
                  standalone={true}
                  startAngle={0}
                  theme={
                    Object {
                      "area": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "axis": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "axis": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeLinecap": "round",
                            "strokeLinejoin": "round",
                            "strokeWidth": 1,
                          },
                          "axisLabel": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 25,
                            "stroke": "transparent",
                            "textAnchor": "middle",
                          },
                          "grid": Object {
                            "fill": "none",
                            "pointerEvents": "painted",
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "fill": "transparent",
                            "size": 1,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "bar": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "padding": 8,
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "boxplot": Object {
                        "boxWidth": 20,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "max": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "maxLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "median": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "medianLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "min": Object {
                            "padding": 8,
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "minLabels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q1": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q1Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                          "q3": Object {
                            "fill": "#969696",
                            "padding": 8,
                          },
                          "q3Labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 3,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "candlestick": Object {
                        "candleColors": Object {
                          "negative": "#252525",
                          "positive": "#ffffff",
                        },
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "chart": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "errorbar": Object {
                        "borderWidth": 8,
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "group": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "histogram": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#969696",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "legend": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "gutter": 10,
                        "orientation": "vertical",
                        "style": Object {
                          "data": Object {
                            "type": "circle",
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "title": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "stroke": "transparent",
                          },
                        },
                        "titleOrientation": "top",
                      },
                      "line": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "#252525",
                            "strokeWidth": 2,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "pie": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 400,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "padding": 10,
                            "stroke": "transparent",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 20,
                            "stroke": "transparent",
                          },
                        },
                        "width": 400,
                      },
                      "scatter": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "#252525",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 10,
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                      "stack": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "width": 450,
                      },
                      "tooltip": Object {
                        "cornerRadius": 5,
                        "flyoutPadding": 5,
                        "flyoutStyle": Object {
                          "fill": "#f0f0f0",
                          "pointerEvents": "none",
                          "stroke": "#252525",
                          "strokeWidth": 1,
                        },
                        "pointerLength": 10,
                        "style": Object {
                          "fill": "#252525",
                          "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "padding": 0,
                          "pointerEvents": "none",
                          "stroke": "transparent",
                        },
                      },
                      "voronoi": Object {
                        "colorScale": Array [
                          "#252525",
                          "#525252",
                          "#737373",
                          "#969696",
                          "#bdbdbd",
                          "#d9d9d9",
                          "#f0f0f0",
                        ],
                        "height": 300,
                        "padding": 50,
                        "style": Object {
                          "data": Object {
                            "fill": "transparent",
                            "stroke": "transparent",
                            "strokeWidth": 0,
                          },
                          "flyout": Object {
                            "fill": "#f0f0f0",
                            "pointerEvents": "none",
                            "stroke": "#252525",
                            "strokeWidth": 1,
                          },
                          "labels": Object {
                            "fill": "#252525",
                            "fontFamily": "'Gill Sans', 'Seravek', 'Trebuchet MS', sans-serif",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 5,
                            "pointerEvents": "none",
                            "stroke": "transparent",
                          },
                        },
                        "width": 450,
                      },
                    }
                  }
                  tickComponent={
                    <LineSegment
                      lineComponent={<Line />}
                      role="presentation"
                      shapeRendering="auto"
                      type="tick"
                    />
                  }
                  tickLabelComponent={
                    <VictoryLabel
                      backgroundComponent={<Rect />}
                      capHeight={0.71}
                      direction="inherit"
                      groupComponent={<g />}
                      lineHeight={1}
                      textComponent={<Text />}
                      tspanComponent={<TSpan />}
                    />
                  }
                />,
              }
            }
            groupComponent={<g />}
            height={110}
            padding={
              Object {
                "bottom": 30,
                "left": 14,
                "right": 20,
                "top": 0,
              }
            }
            scale={
              Object {
                "x": "linear",
              }
            }
            standalone={true}
            theme={
              Object {
                "axis": Object {
                  "style": Object {
                    "axis": Object {
                      "offset": 14,
                      "stroke": "var(--core-prominent)",
                      "strokeWidth": 1,
                    },
                    "grid": Object {
                      "fill": "none",
                      "pointerEvents": "painted",
                      "stroke": "none",
                    },
                  },
                },
                "bar": Object {
                  "style": Object {
                    "data": Object {
                      "padding": 8,
                      "strokeWidth": 0,
                    },
                    "labels": Object {
                      "fill": "var(--core-prominent)",
                      "fontFamily": "var(--core-sans)",
                      "fontSize": 14,
                      "letterSpacing": "normal",
                      "padding": 14,
                      "stroke": "transparent",
                    },
                  },
                },
                "dependentAxis": Object {
                  "style": Object {
                    "axis": Object {
                      "offsetInlineStart": 16,
                      "stroke": "var(--core-soft)",
                      "strokeWidth": 1,
                    },
                    "grid": Object {
                      "stroke": "none",
                    },
                    "tickLabels": Object {
                      "fill": "none",
                      "fontFamily": "var(--core-sans)",
                      "fontSize": 14,
                      "letterSpacing": "normal",
                      "opacity": 0,
                      "padding": 10,
                      "stroke": "transparent",
                    },
                    "ticks": Object {
                      "size": 4,
                      "stroke": "none",
                      "strokeWidth": 1,
                    },
                  },
                },
                "independentAxis": Object {
                  "style": Object {
                    "axis": Object {
                      "offsetInlineStart": 16,
                      "stroke": "var(--core-soft)",
                      "strokeWidth": 1,
                    },
                    "grid": Object {
                      "stroke": "none",
                    },
                    "tickLabels": Object {
                      "fill": "none",
                      "fontFamily": "var(--core-sans)",
                      "fontSize": 14,
                      "letterSpacing": "normal",
                      "opacity": 0,
                      "padding": 10,
                      "stroke": "transparent",
                    },
                    "ticks": Object {
                      "size": 4,
                      "stroke": "none",
                      "strokeWidth": 1,
                    },
                  },
                },
              }
            }
            width={100}
          >
            <VictorySharedEvents
              container={
                <VictoryBrushContainer
                  allowDrag={true}
                  allowDraw={true}
                  allowResize={true}
                  brushComponent={<Rect />}
                  brushDimension="x"
                  brushDomain={
                    Object {
                      "x": Array [
                        0,
                        -0.42857142857142855,
                      ],
                    }
                  }
                  brushStyle={
                    Object {
                      "fill": "#fff",
                      "opacity": 0.3,
                    }
                  }
                  className="VictoryContainer"
                  defaultBrushArea="move"
                  domain={
                    Object {
                      "x": Array [
                        0.9999999999,
                        1.0000000001,
                      ],
                      "y": Array [
                        0,
                        6.0000000001,
                      ],
                    }
                  }
                  handleComponent={<Rect />}
                  handleStyle={
                    Object {
                      "fill": "transparent",
                      "stroke": "transparent",
                    }
                  }
                  handleWidth={8}
                  height={110}
                  mouseMoveThreshold={0}
                  onBrushDomainChange={[Function]}
                  portalComponent={<Portal />}
                  portalZIndex={99}
                  responsive={false}
                  scale={
                    Object {
                      "x": [Function],
                      "y": [Function],
                    }
                  }
                  standalone={true}
                  style={
                    Object {
                      "height": "100%",
                      "userSelect": "none",
                      "width": "100%",
                    }
                  }
                  theme={
                    Object {
                      "axis": Object {
                        "style": Object {
                          "axis": Object {
                            "offset": 14,
                            "stroke": "var(--core-prominent)",
                            "strokeWidth": 1,
                          },
                          "grid": Object {
                            "fill": "none",
                            "pointerEvents": "painted",
                            "stroke": "none",
                          },
                        },
                      },
                      "bar": Object {
                        "style": Object {
                          "data": Object {
                            "padding": 8,
                            "strokeWidth": 0,
                          },
                          "labels": Object {
                            "fill": "var(--core-prominent)",
                            "fontFamily": "var(--core-sans)",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "padding": 14,
                            "stroke": "transparent",
                          },
                        },
                      },
                      "dependentAxis": Object {
                        "style": Object {
                          "axis": Object {
                            "offsetInlineStart": 16,
                            "stroke": "var(--core-soft)",
                            "strokeWidth": 1,
                          },
                          "grid": Object {
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "none",
                            "fontFamily": "var(--core-sans)",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "opacity": 0,
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "size": 4,
                            "stroke": "none",
                            "strokeWidth": 1,
                          },
                        },
                      },
                      "independentAxis": Object {
                        "style": Object {
                          "axis": Object {
                            "offsetInlineStart": 16,
                            "stroke": "var(--core-soft)",
                            "strokeWidth": 1,
                          },
                          "grid": Object {
                            "stroke": "none",
                          },
                          "tickLabels": Object {
                            "fill": "none",
                            "fontFamily": "var(--core-sans)",
                            "fontSize": 14,
                            "letterSpacing": "normal",
                            "opacity": 0,
                            "padding": 10,
                            "stroke": "transparent",
                          },
                          "ticks": Object {
                            "size": 4,
                            "stroke": "none",
                            "strokeWidth": 1,
                          },
                        },
                      },
                    }
                  }
                  width={100}
                />
              }
              events={
                Array [
                  Object {
                    "eventHandlers": Object {
                      "onMouseDown": [Function],
                      "onMouseLeave": [Function],
                      "onMouseMove": [Function],
                      "onMouseUp": [Function],
                      "onTouchCancel": [Function],
                      "onTouchEnd": [Function],
                      "onTouchMove": [Function],
                      "onTouchStart": [Function],
                    },
                    "target": "parent",
                  },
                ]
              }
              groupComponent={<g />}
            >
              <VictoryBrushContainer
                allowDrag={true}
                allowDraw={true}
                allowResize={true}
                brushComponent={<Rect />}
                brushDimension="x"
                brushDomain={
                  Object {
                    "x": Array [
                      0,
                      -0.42857142857142855,
                    ],
                  }
                }
                brushStyle={
                  Object {
                    "fill": "#fff",
                    "opacity": 0.3,
                  }
                }
                className="VictoryContainer"
                defaultBrushArea="move"
                domain={
                  Object {
                    "x": Array [
                      0.9999999999,
                      1.0000000001,
                    ],
                    "y": Array [
                      0,
                      6.0000000001,
                    ],
                  }
                }
                events={
                  Object {
                    "onMouseDown": [Function],
                    "onMouseLeave": [Function],
                    "onMouseMove": [Function],
                    "onMouseUp": [Function],
                    "onTouchCancel": [Function],
                    "onTouchEnd": [Function],
                    "onTouchMove": [Function],
                    "onTouchStart": [Function],
                  }
                }
                handleComponent={<Rect />}
                handleStyle={
                  Object {
                    "fill": "transparent",
                    "stroke": "transparent",
                  }
                }
                handleWidth={8}
                height={110}
                mouseMoveThreshold={0}
                onBrushDomainChange={[Function]}
                portalComponent={<Portal />}
                portalZIndex={99}
                responsive={false}
                scale={
                  Object {
                    "x": [Function],
                    "y": [Function],
                  }
                }
                standalone={true}
                style={
                  Object {
                    "height": "100%",
                    "userSelect": "none",
                    "width": "100%",
                  }
                }
                theme={
                  Object {
                    "axis": Object {
                      "style": Object {
                        "axis": Object {
                          "offset": 14,
                          "stroke": "var(--core-prominent)",
                          "strokeWidth": 1,
                        },
                        "grid": Object {
                          "fill": "none",
                          "pointerEvents": "painted",
                          "stroke": "none",
                        },
                      },
                    },
                    "bar": Object {
                      "style": Object {
                        "data": Object {
                          "padding": 8,
                          "strokeWidth": 0,
                        },
                        "labels": Object {
                          "fill": "var(--core-prominent)",
                          "fontFamily": "var(--core-sans)",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "padding": 14,
                          "stroke": "transparent",
                        },
                      },
                    },
                    "dependentAxis": Object {
                      "style": Object {
                        "axis": Object {
                          "offsetInlineStart": 16,
                          "stroke": "var(--core-soft)",
                          "strokeWidth": 1,
                        },
                        "grid": Object {
                          "stroke": "none",
                        },
                        "tickLabels": Object {
                          "fill": "none",
                          "fontFamily": "var(--core-sans)",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "opacity": 0,
                          "padding": 10,
                          "stroke": "transparent",
                        },
                        "ticks": Object {
                          "size": 4,
                          "stroke": "none",
                          "strokeWidth": 1,
                        },
                      },
                    },
                    "independentAxis": Object {
                      "style": Object {
                        "axis": Object {
                          "offsetInlineStart": 16,
                          "stroke": "var(--core-soft)",
                          "strokeWidth": 1,
                        },
                        "grid": Object {
                          "stroke": "none",
                        },
                        "tickLabels": Object {
                          "fill": "none",
                          "fontFamily": "var(--core-sans)",
                          "fontSize": 14,
                          "letterSpacing": "normal",
                          "opacity": 0,
                          "padding": 10,
                          "stroke": "transparent",
                        },
                        "ticks": Object {
                          "size": 4,
                          "stroke": "none",
                          "strokeWidth": 1,
                        },
                      },
                    },
                  }
                }
                width={100}
              >
                <div
                  className="VictoryContainer"
                  style={
                    Object {
                      "height": 110,
                      "pointerEvents": "none",
                      "position": "relative",
                      "touchAction": "none",
                      "userSelect": "none",
                      "width": 100,
                    }
                  }
                >
                  <svg
                    height={110}
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseMove={[Function]}
                    onMouseUp={[Function]}
                    onTouchCancel={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    role="img"
                    style={
                      Object {
                        "height": 110,
                        "pointerEvents": "all",
                        "width": 100,
                      }
                    }
                    width={100}
                  >
                    <VictoryAxis
                      axisComponent={
                        <LineSegment
                          lineComponent={<Line />}
                          role="presentation"
                          shapeRendering="auto"
                          type="axis"
                        />
                      }
                      axisLabelComponent={
                        <VictoryLabel
                          backgroundComponent={<Rect />}
                          capHeight={0.71}
                          direction="inherit"
                          groupComponent={<g />}
                          lineHeight={1}
                          textComponent={<Text />}
                          tspanComponent={<TSpan />}
                        />
                      }
                      categories={
                        Object {
                          "x": Array [
                            "channel name",
                          ],
                          "y": undefined,
                        }
                      }
                      containerComponent={
                        <VictoryContainer
                          className="VictoryContainer"
                          portalComponent={<Portal />}
                          portalZIndex={99}
                          responsive={true}
                        />
                      }
                      crossAxis={true}
                      domain={
                        Object {
                          "x": Array [
                            0.9999999999,
                            1.0000000001,
                          ],
                          "y": Array [
                            0,
                            6.0000000001,
                          ],
                        }
                      }
                      fixLabelOverlap={false}
                      gridComponent={
                        <LineSegment
                          lineComponent={<Line />}
                          role="presentation"
                          shapeRendering="auto"
                          type="grid"
                        />
                      }
                      groupComponent={
                        <g
                          role="presentation"
                        />
                      }
                      height={110}
                      key=".$events-chart-axis-0"
                      name="chart-axis-0"
                      offsetX={14}
                      offsetY={30}
                      orientation="bottom"
                      padding={
                        Object {
                          "bottom": 30,
                          "left": 14,
                          "right": 20,
                          "top": 0,
                        }
                      }
                      scale={
                        Object {
                          "x": [Function],
                          "y": [Function],
                        }
                      }
                      sharedEvents={
                        Object {
                          "events": Array [],
                          "getEventState": [Function],
                          "getEvents": [Function],
                        }
                      }
                      standalone={false}
                      stringMap={
                        Object {
                          "x": Object {
                            "channel name": 1,
                          },
                          "y": null,
                        }
                      }
                      style={
                        Object {
                          "parent": Object {
                            "height": "100%",
                            "userSelect": "none",
                            "width": "100%",
                          },
                        }
                      }
                      theme={
                        Object {
                          "axis": Object {
                            "style": Object {
                              "axis": Object {
                                "offset": 14,
                                "stroke": "var(--core-prominent)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "fill": "none",
                                "pointerEvents": "painted",
                                "stroke": "none",
                              },
                            },
                          },
                          "bar": Object {
                            "style": Object {
                              "data": Object {
                                "padding": 8,
                                "strokeWidth": 0,
                              },
                              "labels": Object {
                                "fill": "var(--core-prominent)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 14,
                                "stroke": "transparent",
                              },
                            },
                          },
                          "dependentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "none",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "opacity": 0,
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "none",
                                "strokeWidth": 1,
                              },
                            },
                          },
                          "independentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "none",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "opacity": 0,
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "none",
                                "strokeWidth": 1,
                              },
                            },
                          },
                        }
                      }
                      tickComponent={
                        <LineSegment
                          lineComponent={<Line />}
                          role="presentation"
                          shapeRendering="auto"
                          type="tick"
                        />
                      }
                      tickLabelComponent={
                        <VictoryLabel
                          backgroundComponent={<Rect />}
                          capHeight={0.71}
                          direction="inherit"
                          groupComponent={<g />}
                          lineHeight={1}
                          textComponent={<Text />}
                          tspanComponent={<TSpan />}
                        />
                      }
                      width={100}
                    >
                      <g
                        role="presentation"
                      >
                        <LineSegment
                          dimension="x"
                          events={Object {}}
                          id="chart-axis-0-axis-0"
                          index={0}
                          key="chart-axis-0-axis-0"
                          lineComponent={<Line />}
                          role="presentation"
                          scale={
                            Object {
                              "x": [Function],
                            }
                          }
                          shapeRendering="auto"
                          style={
                            Object {
                              "offsetInlineStart": 16,
                              "stroke": "var(--core-soft)",
                              "strokeWidth": 1,
                            }
                          }
                          ticks={
                            Array [
                              1,
                            ]
                          }
                          type="axis"
                          x1={14}
                          x2={80}
                          y1={80}
                          y2={80}
                        >
                          <Line
                            role="presentation"
                            shapeRendering="auto"
                            style={
                              Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              }
                            }
                            x1={14}
                            x2={80}
                            y1={80}
                            y2={80}
                          >
                            <line
                              role="presentation"
                              shapeRendering="auto"
                              style={
                                Object {
                                  "offsetInlineStart": 16,
                                  "stroke": "var(--core-soft)",
                                  "strokeWidth": 1,
                                }
                              }
                              vectorEffect="non-scaling-stroke"
                              x1={14}
                              x2={80}
                              y1={80}
                              y2={80}
                            />
                          </Line>
                        </LineSegment>
                        <g
                          key="chart-axis-0-tick-group-0"
                          role="presentation"
                        >
                          <VictoryLabel
                            backgroundComponent={<Rect />}
                            capHeight={0.71}
                            datum={1}
                            direction="inherit"
                            events={Object {}}
                            groupComponent={<g />}
                            id="chart-axis-0-tickLabels-0"
                            index={0}
                            key="chart-axis-0-tickLabels-0"
                            lineHeight={1}
                            scale={
                              Object {
                                "x": [Function],
                              }
                            }
                            style={
                              Object {
                                "fill": "none",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "opacity": 0,
                                "padding": 10,
                                "stroke": "transparent",
                              }
                            }
                            text="channel name"
                            textAnchor="middle"
                            textComponent={<Text />}
                            ticks={
                              Array [
                                1,
                              ]
                            }
                            tspanComponent={<TSpan />}
                            verticalAnchor="start"
                            x={47}
                            y={94}
                          >
                            <Text
                              direction="inherit"
                              dx={0}
                              id="chart-axis-0-tickLabels-0"
                              key="text"
                              x={47}
                              y={105.97}
                            >
                              <text
                                direction="inherit"
                                dx={0}
                                id="chart-axis-0-tickLabels-0"
                                x={47}
                                y={105.97}
                              >
                                <TSpan
                                  dx={0}
                                  dy={0}
                                  key="chart-axis-0-tickLabels-0-key-0"
                                  style={
                                    Object {
                                      "fill": "none",
                                      "fontFamily": "var(--core-sans)",
                                      "fontSize": 14,
                                      "letterSpacing": "normal",
                                      "opacity": 0,
                                      "padding": 10,
                                      "stroke": "transparent",
                                    }
                                  }
                                  textAnchor="middle"
                                  x={47}
                                >
                                  <tspan
                                    dx={0}
                                    dy={0}
                                    style={
                                      Object {
                                        "fill": "none",
                                        "fontFamily": "var(--core-sans)",
                                        "fontSize": 14,
                                        "letterSpacing": "normal",
                                        "opacity": 0,
                                        "padding": 10,
                                        "stroke": "transparent",
                                      }
                                    }
                                    textAnchor="middle"
                                    x={47}
                                  >
                                    channel name
                                  </tspan>
                                </TSpan>
                              </text>
                            </Text>
                          </VictoryLabel>
                        </g>
                      </g>
                    </VictoryAxis>
                    <VictoryBar
                      alignment="start"
                      barWidth={10}
                      categories={
                        Object {
                          "x": Array [
                            "channel name",
                          ],
                          "y": undefined,
                        }
                      }
                      containerComponent={
                        <VictoryContainer
                          className="VictoryContainer"
                          portalComponent={<Portal />}
                          portalZIndex={99}
                          responsive={true}
                        />
                      }
                      data={
                        Array [
                          Object {
                            "brushBarsWidth": 10,
                            "x": "channel name",
                            "y": 6,
                          },
                        ]
                      }
                      dataComponent={
                        <Bar
                          defaultBarWidth={8}
                          pathComponent={<Path />}
                          role="presentation"
                          shapeRendering="auto"
                        />
                      }
                      domain={
                        Object {
                          "x": Array [
                            0.9999999999,
                            1.0000000001,
                          ],
                          "y": Array [
                            0,
                            6.0000000001,
                          ],
                        }
                      }
                      groupComponent={
                        <g
                          role="presentation"
                        />
                      }
                      height={110}
                      key=".$events-chart-bar-1"
                      labelComponent={
                        <VictoryLabel
                          backgroundComponent={<Rect />}
                          capHeight={0.71}
                          direction="inherit"
                          groupComponent={<g />}
                          lineHeight={1}
                          textComponent={<Text />}
                          tspanComponent={<TSpan />}
                        />
                      }
                      name="chart-bar-1"
                      padding={
                        Object {
                          "bottom": 30,
                          "left": 14,
                          "right": 20,
                          "top": 0,
                        }
                      }
                      range={
                        Object {
                          "x": Array [
                            14,
                            80,
                          ],
                          "y": Array [
                            80,
                            0,
                          ],
                        }
                      }
                      samples={50}
                      scale={
                        Object {
                          "x": [Function],
                          "y": [Function],
                        }
                      }
                      sharedEvents={
                        Object {
                          "events": Array [],
                          "getEventState": [Function],
                          "getEvents": [Function],
                        }
                      }
                      sortOrder="ascending"
                      standalone={false}
                      stringMap={
                        Object {
                          "x": Object {
                            "channel name": 1,
                          },
                          "y": null,
                        }
                      }
                      style={
                        Object {
                          "data": Object {
                            "fill": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                            "width": 10,
                          },
                          "parent": Object {
                            "border": "1px solid #ffffff",
                          },
                        }
                      }
                      theme={
                        Object {
                          "axis": Object {
                            "style": Object {
                              "axis": Object {
                                "offset": 14,
                                "stroke": "var(--core-prominent)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "fill": "none",
                                "pointerEvents": "painted",
                                "stroke": "none",
                              },
                            },
                          },
                          "bar": Object {
                            "style": Object {
                              "data": Object {
                                "padding": 8,
                                "strokeWidth": 0,
                              },
                              "labels": Object {
                                "fill": "var(--core-prominent)",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "padding": 14,
                                "stroke": "transparent",
                              },
                            },
                          },
                          "dependentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "none",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "opacity": 0,
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "none",
                                "strokeWidth": 1,
                              },
                            },
                          },
                          "independentAxis": Object {
                            "style": Object {
                              "axis": Object {
                                "offsetInlineStart": 16,
                                "stroke": "var(--core-soft)",
                                "strokeWidth": 1,
                              },
                              "grid": Object {
                                "stroke": "none",
                              },
                              "tickLabels": Object {
                                "fill": "none",
                                "fontFamily": "var(--core-sans)",
                                "fontSize": 14,
                                "letterSpacing": "normal",
                                "opacity": 0,
                                "padding": 10,
                                "stroke": "transparent",
                              },
                              "ticks": Object {
                                "size": 4,
                                "stroke": "none",
                                "strokeWidth": 1,
                              },
                            },
                          },
                        }
                      }
                      width={100}
                    >
                      <g
                        role="presentation"
                      >
                        <Bar
                          alignment="start"
                          barWidth={10}
                          data={
                            Array [
                              Object {
                                "_x": 1,
                                "_y": 6,
                                "brushBarsWidth": 10,
                                "x": "channel name",
                                "xName": "channel name",
                                "y": 6,
                              },
                            ]
                          }
                          datum={
                            Object {
                              "_x": 1,
                              "_y": 6,
                              "brushBarsWidth": 10,
                              "x": "channel name",
                              "xName": "channel name",
                              "y": 6,
                            }
                          }
                          defaultBarWidth={8}
                          events={Object {}}
                          height={110}
                          id="chart-bar-1-data-0"
                          index={0}
                          key="chart-bar-1-data-0"
                          pathComponent={<Path />}
                          role="presentation"
                          scale={
                            Object {
                              "x": [Function],
                              "y": [Function],
                            }
                          }
                          shapeRendering="auto"
                          style={
                            Object {
                              "fill": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                              "padding": 8,
                              "strokeWidth": 0,
                              "width": 10,
                            }
                          }
                          width={100}
                          x={47}
                          x0={14}
                          y={1.333333443653828e-9}
                          y0={80}
                        >
                          <Path
                            d="M 47, 80 
A 0 0 0 0 1, 47, 80 
L 47, 1.333333443653828e-9 
A 0 0 0 0 1, 47, 1.333333443653828e-9 
L 57, 1.333333443653828e-9 
A 0 0 0 0 1, 57, 1.333333443653828e-9 
L 57, 80 
A 0 0 0 0 1, 57, 80 
 z"
                            role="presentation"
                            shapeRendering="auto"
                            style={
                              Object {
                                "fill": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                                "padding": 8,
                                "stroke": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                                "strokeWidth": 0,
                                "width": 10,
                              }
                            }
                          >
                            <path
                              d="M 47, 80 
A 0 0 0 0 1, 47, 80 
L 47, 1.333333443653828e-9 
A 0 0 0 0 1, 47, 1.333333443653828e-9 
L 57, 1.333333443653828e-9 
A 0 0 0 0 1, 57, 1.333333443653828e-9 
L 57, 80 
A 0 0 0 0 1, 57, 80 
 z"
                              role="presentation"
                              shapeRendering="auto"
                              style={
                                Object {
                                  "fill": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                                  "padding": 8,
                                  "stroke": "hsl(222.4922359499622deg, 36.8421052631579%, 52.49999999999999%)",
                                  "strokeWidth": 0,
                                  "width": 10,
                                }
                              }
                            />
                          </Path>
                        </Bar>
                      </g>
                    </VictoryBar>
                    <Rect
                      cursor="move"
                      height={80}
                      key="undefined-brush"
                      style={
                        Object {
                          "fill": "#fff",
                          "opacity": 0.3,
                        }
                      }
                      width={141428559726.7199}
                      x={-471428532375.3998}
                      y={0}
                    >
                      <rect
                        cursor="move"
                        height={80}
                        style={
                          Object {
                            "fill": "#fff",
                            "opacity": 0.3,
                          }
                        }
                        vectorEffect="non-scaling-stroke"
                        width={141428559726.7199}
                        x={-471428532375.3998}
                        y={0}
                      />
                    </Rect>
                    <Rect
                      cursor="ew-resize"
                      height={80}
                      key="undefined-handle-left"
                      style={
                        Object {
                          "fill": "transparent",
                          "stroke": "transparent",
                        }
                      }
                      width={8}
                      x={-471428532379.3998}
                      y={0}
                    >
                      <rect
                        cursor="ew-resize"
                        height={80}
                        style={
                          Object {
                            "fill": "transparent",
                            "stroke": "transparent",
                          }
                        }
                        vectorEffect="non-scaling-stroke"
                        width={8}
                        x={-471428532379.3998}
                        y={0}
                      />
                    </Rect>
                    <Rect
                      cursor="ew-resize"
                      height={80}
                      key="undefined-handle-right"
                      style={
                        Object {
                          "fill": "transparent",
                          "stroke": "transparent",
                        }
                      }
                      width={8}
                      x={-329999972652.6799}
                      y={0}
                    >
                      <rect
                        cursor="ew-resize"
                        height={80}
                        style={
                          Object {
                            "fill": "transparent",
                            "stroke": "transparent",
                          }
                        }
                        vectorEffect="non-scaling-stroke"
                        width={8}
                        x={-329999972652.6799}
                        y={0}
                      />
                    </Rect>
                  </svg>
                  <div
                    style={
                      Object {
                        "height": 110,
                        "left": 0,
                        "position": "absolute",
                        "top": 0,
                        "width": 100,
                        "zIndex": 99,
                      }
                    }
                  >
                    <Portal
                      height={110}
                      style={
                        Object {
                          "height": 110,
                          "overflow": "visible",
                          "width": 100,
                        }
                      }
                      width={100}
                    >
                      <svg
                        height={110}
                        style={
                          Object {
                            "height": 110,
                            "overflow": "visible",
                            "width": 100,
                          }
                        }
                        width={100}
                      />
                    </Portal>
                  </div>
                </div>
              </VictoryBrushContainer>
            </VictorySharedEvents>
          </VictoryChart>
        </div>
      </BarChart>
      <LineChartWeavess
        classNames="table-display"
        endTimeMs={1606818300000}
        heightPx={12}
        id="line-chartTest"
        lineDefs={
          Array [
            Object {
              "average": 6,
              "color": "#5973b3",
              "id": "channel name",
              "values": Float32Array [
                0,
                5,
                50,
                6,
                100,
                9,
              ],
            },
          ]
        }
        minAndMax={
          Object {
            "xMax": 0.002,
            "xMin": 0,
            "yMax": 9,
            "yMin": 5,
          }
        }
        padding={
          Object {
            "bottom": 120,
            "left": 63,
            "right": 29,
            "top": 16,
          }
        }
        startTimeMs={1606818240000}
        widthPx={100}
        xAxisLabel="Time"
        yAxisLabel="Lag (s)"
      >
        <div
          className="core-chart table-display"
        >
          <div
            className="weavess-line-chart container"
            style={
              Object {
                "height": 12,
                "width": 100,
              }
            }
          >
            <div
              className="weavess-line-chart inner"
            >
              <div
                className="weavess-line-chart chart"
              >
                <WaveformDisplay
                  customLabel={[Function]}
                  endTimeSecs={1606818300}
                  events={
                    Object {
                      "onClickSelectionWindow": undefined,
                      "onMoveSelectionWindow": undefined,
                      "onUpdateMarker": undefined,
                      "onUpdateSelectionWindow": undefined,
                      "onZoomChange": undefined,
                      "stationEvents": Object {
                        "defaultChannelEvents": Object {
                          "events": Object {
                            "onChannelClick": undefined,
                            "onClickSelectionWindow": undefined,
                            "onContextMenu": undefined,
                            "onMeasureWindowUpdated": undefined,
                            "onMoveSelectionWindow": undefined,
                            "onPredictivePhaseClick": undefined,
                            "onPredictivePhaseContextMenu": undefined,
                            "onPredictivePhaseDragEnd": undefined,
                            "onSignalDetectionClick": undefined,
                            "onSignalDetectionContextMenu": undefined,
                            "onSignalDetectionDragEnd": undefined,
                            "onUpdateMarker": undefined,
                            "onUpdateSelectionWindow": undefined,
                          },
                          "labelEvents": Object {
                            "onChannelCollapsed": undefined,
                            "onChannelExpanded": undefined,
                            "onChannelLabelClick": undefined,
                          },
                          "onKeyPress": undefined,
                        },
                        "nonDefaultChannelEvents": Object {
                          "events": Object {
                            "onChannelClick": undefined,
                            "onClickSelectionWindow": undefined,
                            "onContextMenu": undefined,
                            "onMeasureWindowUpdated": undefined,
                            "onMoveSelectionWindow": undefined,
                            "onPredictivePhaseClick": undefined,
                            "onPredictivePhaseContextMenu": undefined,
                            "onPredictivePhaseDragEnd": undefined,
                            "onSignalDetectionClick": undefined,
                            "onSignalDetectionContextMenu": undefined,
                            "onSignalDetectionDragEnd": undefined,
                            "onUpdateMarker": undefined,
                            "onUpdateSelectionWindow": undefined,
                          },
                          "labelEvents": Object {
                            "onChannelCollapsed": undefined,
                            "onChannelExpanded": undefined,
                            "onChannelLabelClick": undefined,
                          },
                          "onKeyPress": undefined,
                        },
                      },
                    }
                  }
                  initialConfiguration={
                    Object {
                      "colorScale": undefined,
                      "defaultChannel": Object {
                        "disableMaskModification": false,
                        "disableMeasureWindow": true,
                        "disablePreditedPhaseModification": false,
                        "disableSignalDetectionModification": false,
                      },
                      "defaultChannelHeightPx": 50,
                      "hotKeys": Object {
                        "amplitudeScale": "KeyS",
                        "amplitudeScaleReset": "Alt+Shift+KeyS",
                        "amplitudeScaleSingleReset": "Alt+KeyS",
                        "drawMeasureWindow": "Alt",
                        "maskCreate": "KeyM",
                      },
                      "labelWidthPx": 65,
                      "nonDefaultChannel": Object {
                        "disableMaskModification": false,
                        "disableMeasureWindow": false,
                        "disablePreditedPhaseModification": false,
                        "disableSignalDetectionModification": false,
                      },
                      "shouldRenderSpectrograms": true,
                      "shouldRenderWaveforms": true,
                      "suppressLabelYAxis": false,
                      "xAxisLabel": "Time",
                    }
                  }
                  selections={
                    Object {
                      "channels": undefined,
                    }
                  }
                  startTimeSecs={1606818240}
                  stations={
                    Array [
                      Object {
                        "defaultChannel": Object {
                          "defaultRange": Object {
                            "max": 9.08,
                            "min": 4.92,
                          },
                          "height": -38,
                          "id": "id",
                          "name": "Lag (s)",
                          "waveform": Object {
                            "channelSegmentId": "data",
                            "channelSegments": Map {
                              "data" => Object {
                                "channelName": "LineChartChannel",
                                "channelSegmentBoundaries": Object {
                                  "bottomMax": 5,
                                  "channelAvg": 6,
                                  "channelSegmentId": "unfiltered",
                                  "offset": 9,
                                  "samplesCount": 3,
                                  "topMax": 9,
                                },
                                "dataSegments": Array [
                                  Object {
                                    "color": "#5973b3",
                                    "data": Object {
                                      "values": Float32Array [
                                        0,
                                        5,
                                        50,
                                        6,
                                        100,
                                        9,
                                      ],
                                    },
                                    "displayType": Array [
                                      "LINE",
                                    ],
                                    "pointSize": 4,
                                  },
                                ],
                                "wfFilterId": "unfiltered",
                              },
                            },
                          },
                          "yAxisTicks": Array [
                            5,
                            5.8,
                            6.6,
                            7.4,
                            8.2,
                            9,
                          ],
                        },
                        "id": "id",
                        "name": "name",
                        "nonDefaultChannels": Array [],
                      },
                    ]
                  }
                >
                  <div
                    className="weavess"
                  >
                    <HorizontalDivider
                      bottomClassName="weavess-waveform-display"
                      bottomComponent={[Function]}
                      onResizeEnd={[Function]}
                      showTop={false}
                      topClassName="weavess-measure-window"
                      topComponent={[Function]}
                    >
                      <div
                        className="horizontal-divider__bottom weavess-waveform-display"
                        style={
                          Object {
                            "height": "100%",
                          }
                        }
                      >
                        <WaveformPanel
                          convertTimeToGL={[Function]}
                          customLabel={[Function]}
                          endTimeSecs={1606818300}
                          events={
                            Object {
                              "onClickSelectionWindow": undefined,
                              "onMoveSelectionWindow": undefined,
                              "onUpdateMarker": undefined,
                              "onUpdateSelectionWindow": undefined,
                              "onZoomChange": undefined,
                              "stationEvents": Object {
                                "defaultChannelEvents": Object {
                                  "events": Object {
                                    "onChannelClick": undefined,
                                    "onClickSelectionWindow": undefined,
                                    "onContextMenu": undefined,
                                    "onMeasureWindowUpdated": undefined,
                                    "onMoveSelectionWindow": undefined,
                                    "onPredictivePhaseClick": undefined,
                                    "onPredictivePhaseContextMenu": undefined,
                                    "onPredictivePhaseDragEnd": undefined,
                                    "onSignalDetectionClick": undefined,
                                    "onSignalDetectionContextMenu": undefined,
                                    "onSignalDetectionDragEnd": undefined,
                                    "onUpdateMarker": undefined,
                                    "onUpdateSelectionWindow": undefined,
                                  },
                                  "labelEvents": Object {
                                    "onChannelCollapsed": undefined,
                                    "onChannelExpanded": undefined,
                                    "onChannelLabelClick": undefined,
                                  },
                                  "onKeyPress": undefined,
                                },
                                "nonDefaultChannelEvents": Object {
                                  "events": Object {
                                    "onChannelClick": undefined,
                                    "onClickSelectionWindow": undefined,
                                    "onContextMenu": undefined,
                                    "onMeasureWindowUpdated": undefined,
                                    "onMoveSelectionWindow": undefined,
                                    "onPredictivePhaseClick": undefined,
                                    "onPredictivePhaseContextMenu": undefined,
                                    "onPredictivePhaseDragEnd": undefined,
                                    "onSignalDetectionClick": undefined,
                                    "onSignalDetectionContextMenu": undefined,
                                    "onSignalDetectionDragEnd": undefined,
                                    "onUpdateMarker": undefined,
                                    "onUpdateSelectionWindow": undefined,
                                  },
                                  "labelEvents": Object {
                                    "onChannelCollapsed": undefined,
                                    "onChannelExpanded": undefined,
                                    "onChannelLabelClick": undefined,
                                  },
                                  "onKeyPress": undefined,
                                },
                              },
                            }
                          }
                          initialConfiguration={
                            Object {
                              "colorScale": undefined,
                              "defaultChannel": Object {
                                "disableMaskModification": false,
                                "disableMeasureWindow": true,
                                "disablePreditedPhaseModification": false,
                                "disableSignalDetectionModification": false,
                              },
                              "defaultChannelHeightPx": 50,
                              "hotKeys": Object {
                                "amplitudeScale": "KeyS",
                                "amplitudeScaleReset": "Alt+Shift+KeyS",
                                "amplitudeScaleSingleReset": "Alt+KeyS",
                                "drawMeasureWindow": "Alt",
                                "maskCreate": "KeyM",
                              },
                              "labelWidthPx": 65,
                              "nonDefaultChannel": Object {
                                "disableMaskModification": false,
                                "disableMeasureWindow": false,
                                "disablePreditedPhaseModification": false,
                                "disableSignalDetectionModification": false,
                              },
                              "shouldRenderSpectrograms": true,
                              "shouldRenderWaveforms": true,
                              "suppressLabelYAxis": false,
                              "xAxisLabel": "Time",
                            }
                          }
                          isMeasureWindow={false}
                          isResizing={false}
                          resetAmplitudes={[Function]}
                          selections={
                            Object {
                              "channels": undefined,
                            }
                          }
                          shouldRenderSpectrograms={true}
                          shouldRenderWaveforms={true}
                          startTimeSecs={1606818240}
                          stations={
                            Array [
                              Object {
                                "defaultChannel": Object {
                                  "defaultRange": Object {
                                    "max": 9.08,
                                    "min": 4.92,
                                  },
                                  "height": -38,
                                  "id": "id",
                                  "name": "Lag (s)",
                                  "waveform": Object {
                                    "channelSegmentId": "data",
                                    "channelSegments": Map {
                                      "data" => Object {
                                        "channelName": "LineChartChannel",
                                        "channelSegmentBoundaries": Object {
                                          "bottomMax": 5,
                                          "channelAvg": 6,
                                          "channelSegmentId": "unfiltered",
                                          "offset": 9,
                                          "samplesCount": 3,
                                          "topMax": 9,
                                        },
                                        "dataSegments": Array [
                                          Object {
                                            "color": "#5973b3",
                                            "data": Object {
                                              "values": Float32Array [
                                                0,
                                                5,
                                                50,
                                                6,
                                                100,
                                                9,
                                              ],
                                            },
                                            "displayType": Array [
                                              "LINE",
                                            ],
                                            "pointSize": 4,
                                          },
                                        ],
                                        "wfFilterId": "unfiltered",
                                      },
                                    },
                                  },
                                  "yAxisTicks": Array [
                                    5,
                                    5.8,
                                    6.6,
                                    7.4,
                                    8.2,
                                    9,
                                  ],
                                },
                                "id": "id",
                                "name": "name",
                                "nonDefaultChannels": Array [],
                              },
                            ]
                          }
                          toast={[Function]}
                          updateMeasureWindow={[Function]}
                        >
                          <div
                            className="weavess-wp"
                            onDoubleClick={[Function]}
                            onMouseLeave={[Function]}
                            style={
                              Object {
                                "--weavess-scrollbar-track-margin": "65px",
                                "boxSizing": "content-box",
                                "height": "100%",
                                "position": "relative",
                                "width": "100%",
                              }
                            }
                          >
                            <canvas
                              className="weavess-wp-canvas"
                              style={
                                Object {
                                  "height": "calc(100% - (35px))",
                                  "left": "65px",
                                  "width": "calc(100% - (65px + 10px))",
                                }
                              }
                            />
                            <div
                              className="weavess-wp-container"
                            >
                              <div
                                className="weavess-wp-container-1"
                              >
                                <div
                                  className="weavess-wp-container-2"
                                >
                                  <div
                                    className="weavess-wp-container-3"
                                  >
                                    <div
                                      className="weavess-wp-container-viewport"
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onScroll={[Function]}
                                      onWheel={[Function]}
                                    >
                                      <div
                                        className="weavess-wp-container-viewport-content"
                                      >
                                        <Station
                                          canvasRef={[Function]}
                                          converters={
                                            Object {
                                              "computeFractionOfCanvasFromMouseXPx": [Function],
                                              "computeTimeSecsForMouseXFractionalPosition": [Function],
                                              "computeTimeSecsFromMouseXPixels": [Function],
                                            }
                                          }
                                          customLabel={[Function]}
                                          displayEndTimeSecs={1606818300}
                                          displayStartTimeSecs={1606818240}
                                          events={
                                            Object {
                                              "defaultChannelEvents": Object {
                                                "events": Object {
                                                  "onChannelClick": undefined,
                                                  "onClickSelectionWindow": undefined,
                                                  "onContextMenu": undefined,
                                                  "onMeasureWindowUpdated": undefined,
                                                  "onMoveSelectionWindow": undefined,
                                                  "onPredictivePhaseClick": undefined,
                                                  "onPredictivePhaseContextMenu": undefined,
                                                  "onPredictivePhaseDragEnd": undefined,
                                                  "onSignalDetectionClick": undefined,
                                                  "onSignalDetectionContextMenu": undefined,
                                                  "onSignalDetectionDragEnd": undefined,
                                                  "onUpdateMarker": undefined,
                                                  "onUpdateSelectionWindow": undefined,
                                                },
                                                "labelEvents": Object {
                                                  "onChannelCollapsed": undefined,
                                                  "onChannelExpanded": undefined,
                                                  "onChannelLabelClick": undefined,
                                                },
                                                "onKeyPress": undefined,
                                              },
                                              "nonDefaultChannelEvents": Object {
                                                "events": Object {
                                                  "onChannelClick": undefined,
                                                  "onClickSelectionWindow": undefined,
                                                  "onContextMenu": undefined,
                                                  "onMeasureWindowUpdated": undefined,
                                                  "onMoveSelectionWindow": undefined,
                                                  "onPredictivePhaseClick": undefined,
                                                  "onPredictivePhaseContextMenu": undefined,
                                                  "onPredictivePhaseDragEnd": undefined,
                                                  "onSignalDetectionClick": undefined,
                                                  "onSignalDetectionContextMenu": undefined,
                                                  "onSignalDetectionDragEnd": undefined,
                                                  "onUpdateMarker": undefined,
                                                  "onUpdateSelectionWindow": undefined,
                                                },
                                                "labelEvents": Object {
                                                  "onChannelCollapsed": undefined,
                                                  "onChannelExpanded": undefined,
                                                  "onChannelLabelClick": undefined,
                                                },
                                                "onKeyPress": undefined,
                                              },
                                            }
                                          }
                                          getCanvasBoundingRect={[Function]}
                                          getCurrentViewRangeInSeconds={[Function]}
                                          getViewRange={[Function]}
                                          glMax={100}
                                          glMin={0}
                                          initialConfiguration={
                                            Object {
                                              "colorScale": undefined,
                                              "defaultChannel": Object {
                                                "disableMaskModification": false,
                                                "disableMeasureWindow": true,
                                                "disablePreditedPhaseModification": false,
                                                "disableSignalDetectionModification": false,
                                              },
                                              "defaultChannelHeightPx": 50,
                                              "hotKeys": Object {
                                                "amplitudeScale": "KeyS",
                                                "amplitudeScaleReset": "Alt+Shift+KeyS",
                                                "amplitudeScaleSingleReset": "Alt+KeyS",
                                                "drawMeasureWindow": "Alt",
                                                "maskCreate": "KeyM",
                                              },
                                              "labelWidthPx": 65,
                                              "nonDefaultChannel": Object {
                                                "disableMaskModification": false,
                                                "disableMeasureWindow": false,
                                                "disablePreditedPhaseModification": false,
                                                "disableSignalDetectionModification": false,
                                              },
                                              "shouldRenderSpectrograms": true,
                                              "shouldRenderWaveforms": true,
                                              "suppressLabelYAxis": false,
                                              "xAxisLabel": "Time",
                                            }
                                          }
                                          isMeasureWindow={false}
                                          key="id"
                                          onMouseDown={[Function]}
                                          onMouseMove={[Function]}
                                          onMouseUp={[Function]}
                                          renderWaveforms={[Function]}
                                          selections={
                                            Object {
                                              "channels": undefined,
                                            }
                                          }
                                          shouldRenderSpectrograms={true}
                                          shouldRenderWaveforms={true}
                                          station={
                                            Object {
                                              "defaultChannel": Object {
                                                "defaultRange": Object {
                                                  "max": 9.08,
                                                  "min": 4.92,
                                                },
                                                "height": -38,
                                                "id": "id",
                                                "name": "Lag (s)",
                                                "waveform": Object {
                                                  "channelSegmentId": "data",
                                                  "channelSegments": Map {
                                                    "data" => Object {
                                                      "channelName": "LineChartChannel",
                                                      "channelSegmentBoundaries": Object {
                                                        "bottomMax": 5,
                                                        "channelAvg": 6,
                                                        "channelSegmentId": "unfiltered",
                                                        "offset": 9,
                                                        "samplesCount": 3,
                                                        "topMax": 9,
                                                      },
                                                      "dataSegments": Array [
                                                        Object {
                                                          "color": "#5973b3",
                                                          "data": Object {
                                                            "values": Float32Array [
                                                              0,
                                                              5,
                                                              50,
                                                              6,
                                                              100,
                                                              9,
                                                            ],
                                                          },
                                                          "displayType": Array [
                                                            "LINE",
                                                          ],
                                                          "pointSize": 4,
                                                        },
                                                      ],
                                                      "wfFilterId": "unfiltered",
                                                    },
                                                  },
                                                },
                                                "yAxisTicks": Array [
                                                  5,
                                                  5.8,
                                                  6.6,
                                                  7.4,
                                                  8.2,
                                                  9,
                                                ],
                                              },
                                              "id": "id",
                                              "name": "name",
                                              "nonDefaultChannels": Array [],
                                            }
                                          }
                                          toast={[Function]}
                                          updateMeasureWindow={[Function]}
                                          updateVisibleChannelForStation={[Function]}
                                          workerRpcs={
                                            Array [
                                              RpcProvider {
                                                "_dispatch": [Function],
                                                "_nextTransactionId": 0,
                                                "_pendingTransactions": Object {},
                                                "_rpcHandlers": Object {},
                                                "_rpcTimeout": 0,
                                                "_signalHandlers": Object {},
                                                "error": Event {
                                                  "_contexts": Array [],
                                                  "_handlers": Array [],
                                                  "dispatch": [Function],
                                                  "hasHandlers": false,
                                                },
                                              },
                                              RpcProvider {
                                                "_dispatch": [Function],
                                                "_nextTransactionId": 0,
                                                "_pendingTransactions": Object {},
                                                "_rpcHandlers": Object {},
                                                "_rpcTimeout": 0,
                                                "_signalHandlers": Object {},
                                                "error": Event {
                                                  "_contexts": Array [],
                                                  "_handlers": Array [],
                                                  "dispatch": [Function],
                                                  "hasHandlers": false,
                                                },
                                              },
                                              RpcProvider {
                                                "_dispatch": [Function],
                                                "_nextTransactionId": 0,
                                                "_pendingTransactions": Object {},
                                                "_rpcHandlers": Object {},
                                                "_rpcTimeout": 0,
                                                "_signalHandlers": Object {},
                                                "error": Event {
                                                  "_contexts": Array [],
                                                  "_handlers": Array [],
                                                  "dispatch": [Function],
                                                  "hasHandlers": false,
                                                },
                                              },
                                              RpcProvider {
                                                "_dispatch": [Function],
                                                "_nextTransactionId": 0,
                                                "_pendingTransactions": Object {},
                                                "_rpcHandlers": Object {},
                                                "_rpcTimeout": 0,
                                                "_signalHandlers": Object {},
                                                "error": Event {
                                                  "_contexts": Array [],
                                                  "_handlers": Array [],
                                                  "dispatch": [Function],
                                                  "hasHandlers": false,
                                                },
                                              },
                                            ]
                                          }
                                        >
                                          <div
                                            className="station"
                                            style={
                                              Object {
                                                "height": -37,
                                              }
                                            }
                                          >
                                            <Channel
                                              canvasRef={[Function]}
                                              channel={
                                                Object {
                                                  "defaultRange": Object {
                                                    "max": 9.08,
                                                    "min": 4.92,
                                                  },
                                                  "height": -38,
                                                  "id": "id",
                                                  "name": "Lag (s)",
                                                  "waveform": Object {
                                                    "channelSegmentId": "data",
                                                    "channelSegments": Map {
                                                      "data" => Object {
                                                        "channelName": "LineChartChannel",
                                                        "channelSegmentBoundaries": Object {
                                                          "bottomMax": 5,
                                                          "channelAvg": 6,
                                                          "channelSegmentId": "unfiltered",
                                                          "offset": 9,
                                                          "samplesCount": 3,
                                                          "topMax": 9,
                                                        },
                                                        "dataSegments": Array [
                                                          Object {
                                                            "color": "#5973b3",
                                                            "data": Object {
                                                              "values": Float32Array [
                                                                0,
                                                                5,
                                                                50,
                                                                6,
                                                                100,
                                                                9,
                                                              ],
                                                            },
                                                            "displayType": Array [
                                                              "LINE",
                                                            ],
                                                            "pointSize": 4,
                                                          },
                                                        ],
                                                        "wfFilterId": "unfiltered",
                                                      },
                                                    },
                                                  },
                                                  "yAxisTicks": Array [
                                                    5,
                                                    5.8,
                                                    6.6,
                                                    7.4,
                                                    8.2,
                                                    9,
                                                  ],
                                                }
                                              }
                                              converters={
                                                Object {
                                                  "computeFractionOfCanvasFromMouseXPx": [Function],
                                                  "computeTimeSecsForMouseXFractionalPosition": [Function],
                                                  "computeTimeSecsFromMouseXPixels": [Function],
                                                }
                                              }
                                              customLabel={[Function]}
                                              displayEndTimeSecs={1606818300}
                                              displayStartTimeSecs={1606818240}
                                              distance={0}
                                              distanceUnits="degrees"
                                              events={
                                                Object {
                                                  "events": Object {
                                                    "onChannelClick": undefined,
                                                    "onClickSelectionWindow": undefined,
                                                    "onContextMenu": undefined,
                                                    "onMeasureWindowUpdated": undefined,
                                                    "onMoveSelectionWindow": undefined,
                                                    "onPredictivePhaseClick": undefined,
                                                    "onPredictivePhaseContextMenu": undefined,
                                                    "onPredictivePhaseDragEnd": undefined,
                                                    "onSignalDetectionClick": undefined,
                                                    "onSignalDetectionContextMenu": undefined,
                                                    "onSignalDetectionDragEnd": undefined,
                                                    "onUpdateMarker": undefined,
                                                    "onUpdateSelectionWindow": undefined,
                                                  },
                                                  "labelEvents": Object {
                                                    "onChannelCollapsed": undefined,
                                                    "onChannelExpanded": undefined,
                                                    "onChannelLabelClick": undefined,
                                                  },
                                                  "onKeyPress": undefined,
                                                }
                                              }
                                              expanded={false}
                                              getCanvasBoundingRect={[Function]}
                                              getCurrentViewRangeInSeconds={[Function]}
                                              getViewRange={[Function]}
                                              glMax={100}
                                              glMin={0}
                                              height={-38}
                                              index={0}
                                              initialConfiguration={
                                                Object {
                                                  "colorScale": undefined,
                                                  "defaultChannel": Object {
                                                    "disableMaskModification": false,
                                                    "disableMeasureWindow": true,
                                                    "disablePreditedPhaseModification": false,
                                                    "disableSignalDetectionModification": false,
                                                  },
                                                  "defaultChannelHeightPx": 50,
                                                  "hotKeys": Object {
                                                    "amplitudeScale": "KeyS",
                                                    "amplitudeScaleReset": "Alt+Shift+KeyS",
                                                    "amplitudeScaleSingleReset": "Alt+KeyS",
                                                    "drawMeasureWindow": "Alt",
                                                    "maskCreate": "KeyM",
                                                  },
                                                  "labelWidthPx": 65,
                                                  "nonDefaultChannel": Object {
                                                    "disableMaskModification": false,
                                                    "disableMeasureWindow": false,
                                                    "disablePreditedPhaseModification": false,
                                                    "disableSignalDetectionModification": false,
                                                  },
                                                  "shouldRenderSpectrograms": true,
                                                  "shouldRenderWaveforms": true,
                                                  "suppressLabelYAxis": false,
                                                  "xAxisLabel": "Time",
                                                }
                                              }
                                              isDefaultChannel={true}
                                              isExpandable={false}
                                              isMeasureWindow={false}
                                              key="station-default-channel-id"
                                              offsetSecs={0}
                                              onMouseDown={[Function]}
                                              onMouseMove={[Function]}
                                              onMouseUp={[Function]}
                                              renderWaveforms={[Function]}
                                              selections={
                                                Object {
                                                  "channels": undefined,
                                                }
                                              }
                                              shouldRenderSpectrograms={true}
                                              shouldRenderWaveforms={true}
                                              showMaskIndicator={false}
                                              stationId="id"
                                              toast={[Function]}
                                              toggleExpansion={[Function]}
                                              updateMeasureWindow={[Function]}
                                              workerRpcs={
                                                Array [
                                                  RpcProvider {
                                                    "_dispatch": [Function],
                                                    "_nextTransactionId": 0,
                                                    "_pendingTransactions": Object {},
                                                    "_rpcHandlers": Object {},
                                                    "_rpcTimeout": 0,
                                                    "_signalHandlers": Object {},
                                                    "error": Event {
                                                      "_contexts": Array [],
                                                      "_handlers": Array [],
                                                      "dispatch": [Function],
                                                      "hasHandlers": false,
                                                    },
                                                  },
                                                  RpcProvider {
                                                    "_dispatch": [Function],
                                                    "_nextTransactionId": 0,
                                                    "_pendingTransactions": Object {},
                                                    "_rpcHandlers": Object {},
                                                    "_rpcTimeout": 0,
                                                    "_signalHandlers": Object {},
                                                    "error": Event {
                                                      "_contexts": Array [],
                                                      "_handlers": Array [],
                                                      "dispatch": [Function],
                                                      "hasHandlers": false,
                                                    },
                                                  },
                                                  RpcProvider {
                                                    "_dispatch": [Function],
                                                    "_nextTransactionId": 0,
                                                    "_pendingTransactions": Object {},
                                                    "_rpcHandlers": Object {},
                                                    "_rpcTimeout": 0,
                                                    "_signalHandlers": Object {},
                                                    "error": Event {
                                                      "_contexts": Array [],
                                                      "_handlers": Array [],
                                                      "dispatch": [Function],
                                                      "hasHandlers": false,
                                                    },
                                                  },
                                                  RpcProvider {
                                                    "_dispatch": [Function],
                                                    "_nextTransactionId": 0,
                                                    "_pendingTransactions": Object {},
                                                    "_rpcHandlers": Object {},
                                                    "_rpcTimeout": 0,
                                                    "_signalHandlers": Object {},
                                                    "error": Event {
                                                      "_contexts": Array [],
                                                      "_handlers": Array [],
                                                      "dispatch": [Function],
                                                      "hasHandlers": false,
                                                    },
                                                  },
                                                ]
                                              }
                                            >
                                              <div
                                                className="channel"
                                                data-cy="Lag (s)-channel"
                                                onKeyDown={[Function]}
                                                style={
                                                  Object {
                                                    "height": "-38px",
                                                    "maxHeight": "-38px",
                                                  }
                                                }
                                                tabIndex={0}
                                              >
                                                <div
                                                  className="channel-label-container"
                                                  data-cy="Lag (s)-label"
                                                  style={
                                                    Object {
                                                      "height": "-38px",
                                                      "width": "65px",
                                                    }
                                                  }
                                                  tabIndex={0}
                                                >
                                                  <Label
                                                    canvasRef={[Function]}
                                                    channel={
                                                      Object {
                                                        "defaultRange": Object {
                                                          "max": 9.08,
                                                          "min": 4.92,
                                                        },
                                                        "height": -38,
                                                        "id": "id",
                                                        "name": "Lag (s)",
                                                        "waveform": Object {
                                                          "channelSegmentId": "data",
                                                          "channelSegments": Map {
                                                            "data" => Object {
                                                              "channelName": "LineChartChannel",
                                                              "channelSegmentBoundaries": Object {
                                                                "bottomMax": 5,
                                                                "channelAvg": 6,
                                                                "channelSegmentId": "unfiltered",
                                                                "offset": 9,
                                                                "samplesCount": 3,
                                                                "topMax": 9,
                                                              },
                                                              "dataSegments": Array [
                                                                Object {
                                                                  "color": "#5973b3",
                                                                  "data": Object {
                                                                    "values": Float32Array [
                                                                      0,
                                                                      5,
                                                                      50,
                                                                      6,
                                                                      100,
                                                                      9,
                                                                    ],
                                                                  },
                                                                  "displayType": Array [
                                                                    "LINE",
                                                                  ],
                                                                  "pointSize": 4,
                                                                },
                                                              ],
                                                              "wfFilterId": "unfiltered",
                                                            },
                                                          },
                                                        },
                                                        "yAxisTicks": Array [
                                                          5,
                                                          5.8,
                                                          6.6,
                                                          7.4,
                                                          8.2,
                                                          9,
                                                        ],
                                                      }
                                                    }
                                                    channelName="id"
                                                    converters={
                                                      Object {
                                                        "computeFractionOfCanvasFromMouseXPx": [Function],
                                                        "computeTimeSecsForMouseXFractionalPosition": [Function],
                                                        "computeTimeSecsFromMouseXPixels": [Function],
                                                      }
                                                    }
                                                    customLabel={[Function]}
                                                    displayEndTimeSecs={1606818300}
                                                    displayStartTimeSecs={1606818240}
                                                    distance={0}
                                                    distanceUnits="degrees"
                                                    events={
                                                      Object {
                                                        "onChannelCollapsed": undefined,
                                                        "onChannelExpanded": undefined,
                                                        "onChannelLabelClick": undefined,
                                                      }
                                                    }
                                                    expanded={false}
                                                    getCanvasBoundingRect={[Function]}
                                                    getCurrentViewRangeInSeconds={[Function]}
                                                    getViewRange={[Function]}
                                                    glMax={100}
                                                    glMin={0}
                                                    height={-38}
                                                    index={0}
                                                    initialConfiguration={
                                                      Object {
                                                        "colorScale": undefined,
                                                        "defaultChannel": Object {
                                                          "disableMaskModification": false,
                                                          "disableMeasureWindow": true,
                                                          "disablePreditedPhaseModification": false,
                                                          "disableSignalDetectionModification": false,
                                                        },
                                                        "defaultChannelHeightPx": 50,
                                                        "hotKeys": Object {
                                                          "amplitudeScale": "KeyS",
                                                          "amplitudeScaleReset": "Alt+Shift+KeyS",
                                                          "amplitudeScaleSingleReset": "Alt+KeyS",
                                                          "drawMeasureWindow": "Alt",
                                                          "maskCreate": "KeyM",
                                                        },
                                                        "labelWidthPx": 65,
                                                        "nonDefaultChannel": Object {
                                                          "disableMaskModification": false,
                                                          "disableMeasureWindow": false,
                                                          "disablePreditedPhaseModification": false,
                                                          "disableSignalDetectionModification": false,
                                                        },
                                                        "shouldRenderSpectrograms": true,
                                                        "shouldRenderWaveforms": true,
                                                        "suppressLabelYAxis": false,
                                                        "xAxisLabel": "Time",
                                                      }
                                                    }
                                                    isDefaultChannel={true}
                                                    isExpandable={false}
                                                    isMeasureWindow={false}
                                                    offsetSecs={0}
                                                    onMouseDown={[Function]}
                                                    onMouseMove={[Function]}
                                                    onMouseUp={[Function]}
                                                    renderWaveforms={[Function]}
                                                    selections={
                                                      Object {
                                                        "channels": undefined,
                                                      }
                                                    }
                                                    shouldRenderSpectrograms={true}
                                                    shouldRenderWaveforms={true}
                                                    showMaskIndicator={false}
                                                    stationId="id"
                                                    toast={[Function]}
                                                    toggleExpansion={[Function]}
                                                    updateMeasureWindow={[Function]}
                                                    workerRpcs={
                                                      Array [
                                                        RpcProvider {
                                                          "_dispatch": [Function],
                                                          "_nextTransactionId": 0,
                                                          "_pendingTransactions": Object {},
                                                          "_rpcHandlers": Object {},
                                                          "_rpcTimeout": 0,
                                                          "_signalHandlers": Object {},
                                                          "error": Event {
                                                            "_contexts": Array [],
                                                            "_handlers": Array [],
                                                            "dispatch": [Function],
                                                            "hasHandlers": false,
                                                          },
                                                        },
                                                        RpcProvider {
                                                          "_dispatch": [Function],
                                                          "_nextTransactionId": 0,
                                                          "_pendingTransactions": Object {},
                                                          "_rpcHandlers": Object {},
                                                          "_rpcTimeout": 0,
                                                          "_signalHandlers": Object {},
                                                          "error": Event {
                                                            "_contexts": Array [],
                                                            "_handlers": Array [],
                                                            "dispatch": [Function],
                                                            "hasHandlers": false,
                                                          },
                                                        },
                                                        RpcProvider {
                                                          "_dispatch": [Function],
                                                          "_nextTransactionId": 0,
                                                          "_pendingTransactions": Object {},
                                                          "_rpcHandlers": Object {},
                                                          "_rpcTimeout": 0,
                                                          "_signalHandlers": Object {},
                                                          "error": Event {
                                                            "_contexts": Array [],
                                                            "_handlers": Array [],
                                                            "dispatch": [Function],
                                                            "hasHandlers": false,
                                                          },
                                                        },
                                                        RpcProvider {
                                                          "_dispatch": [Function],
                                                          "_nextTransactionId": 0,
                                                          "_pendingTransactions": Object {},
                                                          "_rpcHandlers": Object {},
                                                          "_rpcTimeout": 0,
                                                          "_signalHandlers": Object {},
                                                          "error": Event {
                                                            "_contexts": Array [],
                                                            "_handlers": Array [],
                                                            "dispatch": [Function],
                                                            "hasHandlers": false,
                                                          },
                                                        },
                                                      ]
                                                    }
                                                    yAxisBounds={
                                                      Array [
                                                        Object {
                                                          "heightInPercentage": 100,
                                                          "maxAmplitude": 1,
                                                          "minAmplitude": -1,
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <div
                                                      className="label"
                                                      onContextMenu={[Function]}
                                                      tabIndex={0}
                                                    >
                                                      <div
                                                        className="label-container"
                                                      >
                                                        <div
                                                          className="label-container-left-parent"
                                                        />
                                                        <div
                                                          className="label-container-content"
                                                        >
                                                          <div
                                                            className="label-container-content-label"
                                                            data-cy="channel-label-id"
                                                            onClick={[Function]}
                                                          >
                                                            <YAxisLabel
                                                              canvasRef={[Function]}
                                                              channel={
                                                                Object {
                                                                  "defaultRange": Object {
                                                                    "max": 9.08,
                                                                    "min": 4.92,
                                                                  },
                                                                  "height": -38,
                                                                  "id": "id",
                                                                  "name": "Lag (s)",
                                                                  "waveform": Object {
                                                                    "channelSegmentId": "data",
                                                                    "channelSegments": Map {
                                                                      "data" => Object {
                                                                        "channelName": "LineChartChannel",
                                                                        "channelSegmentBoundaries": Object {
                                                                          "bottomMax": 5,
                                                                          "channelAvg": 6,
                                                                          "channelSegmentId": "unfiltered",
                                                                          "offset": 9,
                                                                          "samplesCount": 3,
                                                                          "topMax": 9,
                                                                        },
                                                                        "dataSegments": Array [
                                                                          Object {
                                                                            "color": "#5973b3",
                                                                            "data": Object {
                                                                              "values": Float32Array [
                                                                                0,
                                                                                5,
                                                                                50,
                                                                                6,
                                                                                100,
                                                                                9,
                                                                              ],
                                                                            },
                                                                            "displayType": Array [
                                                                              "LINE",
                                                                            ],
                                                                            "pointSize": 4,
                                                                          },
                                                                        ],
                                                                        "wfFilterId": "unfiltered",
                                                                      },
                                                                    },
                                                                  },
                                                                  "yAxisTicks": Array [
                                                                    5,
                                                                    5.8,
                                                                    6.6,
                                                                    7.4,
                                                                    8.2,
                                                                    9,
                                                                  ],
                                                                }
                                                              }
                                                              channelName="id"
                                                              converters={
                                                                Object {
                                                                  "computeFractionOfCanvasFromMouseXPx": [Function],
                                                                  "computeTimeSecsForMouseXFractionalPosition": [Function],
                                                                  "computeTimeSecsFromMouseXPixels": [Function],
                                                                }
                                                              }
                                                              customLabel={[Function]}
                                                              displayEndTimeSecs={1606818300}
                                                              displayStartTimeSecs={1606818240}
                                                              distance={0}
                                                              distanceUnits="degrees"
                                                              events={
                                                                Object {
                                                                  "onChannelCollapsed": undefined,
                                                                  "onChannelExpanded": undefined,
                                                                  "onChannelLabelClick": undefined,
                                                                }
                                                              }
                                                              expanded={false}
                                                              getCanvasBoundingRect={[Function]}
                                                              getCurrentViewRangeInSeconds={[Function]}
                                                              getViewRange={[Function]}
                                                              glMax={100}
                                                              glMin={0}
                                                              height={-38}
                                                              index={0}
                                                              initialConfiguration={
                                                                Object {
                                                                  "colorScale": undefined,
                                                                  "defaultChannel": Object {
                                                                    "disableMaskModification": false,
                                                                    "disableMeasureWindow": true,
                                                                    "disablePreditedPhaseModification": false,
                                                                    "disableSignalDetectionModification": false,
                                                                  },
                                                                  "defaultChannelHeightPx": 50,
                                                                  "hotKeys": Object {
                                                                    "amplitudeScale": "KeyS",
                                                                    "amplitudeScaleReset": "Alt+Shift+KeyS",
                                                                    "amplitudeScaleSingleReset": "Alt+KeyS",
                                                                    "drawMeasureWindow": "Alt",
                                                                    "maskCreate": "KeyM",
                                                                  },
                                                                  "labelWidthPx": 65,
                                                                  "nonDefaultChannel": Object {
                                                                    "disableMaskModification": false,
                                                                    "disableMeasureWindow": false,
                                                                    "disablePreditedPhaseModification": false,
                                                                    "disableSignalDetectionModification": false,
                                                                  },
                                                                  "shouldRenderSpectrograms": true,
                                                                  "shouldRenderWaveforms": true,
                                                                  "suppressLabelYAxis": false,
                                                                  "xAxisLabel": "Time",
                                                                }
                                                              }
                                                              isDefaultChannel={true}
                                                              isExpandable={false}
                                                              isMeasureWindow={false}
                                                              offsetSecs={0}
                                                              onMouseDown={[Function]}
                                                              onMouseMove={[Function]}
                                                              onMouseUp={[Function]}
                                                              renderWaveforms={[Function]}
                                                              selections={
                                                                Object {
                                                                  "channels": undefined,
                                                                }
                                                              }
                                                              shouldRenderSpectrograms={true}
                                                              shouldRenderWaveforms={true}
                                                              showMaskIndicator={false}
                                                              stationId="id"
                                                              toast={[Function]}
                                                              toggleExpansion={[Function]}
                                                              updateMeasureWindow={[Function]}
                                                              workerRpcs={
                                                                Array [
                                                                  RpcProvider {
                                                                    "_dispatch": [Function],
                                                                    "_nextTransactionId": 0,
                                                                    "_pendingTransactions": Object {},
                                                                    "_rpcHandlers": Object {},
                                                                    "_rpcTimeout": 0,
                                                                    "_signalHandlers": Object {},
                                                                    "error": Event {
                                                                      "_contexts": Array [],
                                                                      "_handlers": Array [],
                                                                      "dispatch": [Function],
                                                                      "hasHandlers": false,
                                                                    },
                                                                  },
                                                                  RpcProvider {
                                                                    "_dispatch": [Function],
                                                                    "_nextTransactionId": 0,
                                                                    "_pendingTransactions": Object {},
                                                                    "_rpcHandlers": Object {},
                                                                    "_rpcTimeout": 0,
                                                                    "_signalHandlers": Object {},
                                                                    "error": Event {
                                                                      "_contexts": Array [],
                                                                      "_handlers": Array [],
                                                                      "dispatch": [Function],
                                                                      "hasHandlers": false,
                                                                    },
                                                                  },
                                                                  RpcProvider {
                                                                    "_dispatch": [Function],
                                                                    "_nextTransactionId": 0,
                                                                    "_pendingTransactions": Object {},
                                                                    "_rpcHandlers": Object {},
                                                                    "_rpcTimeout": 0,
                                                                    "_signalHandlers": Object {},
                                                                    "error": Event {
                                                                      "_contexts": Array [],
                                                                      "_handlers": Array [],
                                                                      "dispatch": [Function],
                                                                      "hasHandlers": false,
                                                                    },
                                                                  },
                                                                  RpcProvider {
                                                                    "_dispatch": [Function],
                                                                    "_nextTransactionId": 0,
                                                                    "_pendingTransactions": Object {},
                                                                    "_rpcHandlers": Object {},
                                                                    "_rpcTimeout": 0,
                                                                    "_signalHandlers": Object {},
                                                                    "error": Event {
                                                                      "_contexts": Array [],
                                                                      "_handlers": Array [],
                                                                      "dispatch": [Function],
                                                                      "hasHandlers": false,
                                                                    },
                                                                  },
                                                                ]
                                                              }
                                                              yAxisBounds={
                                                                Array [
                                                                  Object {
                                                                    "heightInPercentage": 100,
                                                                    "maxAmplitude": 1,
                                                                    "minAmplitude": -1,
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <div
                                                                className="chart__axis"
                                                              >
                                                                <div
                                                                  className="inner rotate"
                                                                >
                                                                  Lag (s)
                                                                </div>
                                                              </div>
                                                            </YAxisLabel>
                                                          </div>
                                                          <div
                                                            data-cy-contains-amplitude-markers={true}
                                                            style={
                                                              Object {
                                                                "height": "100%",
                                                              }
                                                            }
                                                          >
                                                            <YAxis
                                                              heightInPercentage={100}
                                                              key="id_yaxis_0"
                                                              maxAmplitude={1}
                                                              minAmplitude={-1}
                                                              yAxisTicks={
                                                                Array [
                                                                  5,
                                                                  5.8,
                                                                  6.6,
                                                                  7.4,
                                                                  8.2,
                                                                  9,
                                                                ]
                                                              }
                                                            >
                                                              <div
                                                                className="y-axis"
                                                                style={
                                                                  Object {
                                                                    "height": "calc(100% - 4px)",
                                                                    "margin": "2px 0 2px 0",
                                                                  }
                                                                }
                                                              />
                                                            </YAxis>
                                                          </div>
                                                        </div>
                                                      </div>
                                                    </div>
                                                  </Label>
                                                </div>
                                                <MeasureWindowSelectionListener
                                                  computeTimeSecsFromMouseXPixels={[Function]}
                                                  displayTimeRange={
                                                    Object {
                                                      "endTimeSecs": 1606818300,
                                                      "startTimeSecs": 1606818240,
                                                    }
                                                  }
                                                  hotKeys={
                                                    Object {
                                                      "amplitudeScale": "KeyS",
                                                      "amplitudeScaleReset": "Alt+Shift+KeyS",
                                                      "amplitudeScaleSingleReset": "Alt+KeyS",
                                                      "drawMeasureWindow": "Alt",
                                                      "maskCreate": "KeyM",
                                                    }
                                                  }
                                                  isMeasureWindowEnabled={[Function]}
                                                  toast={[Function]}
                                                  updateMeasureWindowPanel={[Function]}
                                                >
                                                  <div
                                                    className="channel-content-container"
                                                    key="channel-segment-data"
                                                    style={
                                                      Object {
                                                        "height": "-38px",
                                                        "left": "65px",
                                                        "width": "calc(100% - 65px)",
                                                      }
                                                    }
                                                  >
                                                    <ContentRenderer
                                                      canvasRef={[Function]}
                                                      channel={
                                                        Object {
                                                          "defaultRange": Object {
                                                            "max": 9.08,
                                                            "min": 4.92,
                                                          },
                                                          "height": -38,
                                                          "id": "id",
                                                          "name": "Lag (s)",
                                                          "waveform": Object {
                                                            "channelSegmentId": "data",
                                                            "channelSegments": Map {
                                                              "data" => Object {
                                                                "channelName": "LineChartChannel",
                                                                "channelSegmentBoundaries": Object {
                                                                  "bottomMax": 5,
                                                                  "channelAvg": 6,
                                                                  "channelSegmentId": "unfiltered",
                                                                  "offset": 9,
                                                                  "samplesCount": 3,
                                                                  "topMax": 9,
                                                                },
                                                                "dataSegments": Array [
                                                                  Object {
                                                                    "color": "#5973b3",
                                                                    "data": Object {
                                                                      "values": Float32Array [
                                                                        0,
                                                                        5,
                                                                        50,
                                                                        6,
                                                                        100,
                                                                        9,
                                                                      ],
                                                                    },
                                                                    "displayType": Array [
                                                                      "LINE",
                                                                    ],
                                                                    "pointSize": 4,
                                                                  },
                                                                ],
                                                                "wfFilterId": "unfiltered",
                                                              },
                                                            },
                                                          },
                                                          "yAxisTicks": Array [
                                                            5,
                                                            5.8,
                                                            6.6,
                                                            7.4,
                                                            8.2,
                                                            9,
                                                          ],
                                                        }
                                                      }
                                                      channelId="id"
                                                      color="#4580E6"
                                                      contentRenderers={
                                                        Array [
                                                          <UNDEFINED
                                                            onClick={[Function]}
                                                          />,
                                                        ]
                                                      }
                                                      converters={
                                                        Object {
                                                          "computeFractionOfCanvasFromMouseXPx": [Function],
                                                          "computeTimeSecsForMouseXFractionalPosition": [Function],
                                                          "computeTimeSecsFromMouseXPixels": [Function],
                                                        }
                                                      }
                                                      customLabel={[Function]}
                                                      disablePredictedPhaseModification={false}
                                                      disableSignalDetectionModification={false}
                                                      displayEndTimeSecs={1606818300}
                                                      displayStartTimeSecs={1606818240}
                                                      displayType={
                                                        Array [
                                                          "LINE",
                                                        ]
                                                      }
                                                      distance={0}
                                                      distanceUnits="degrees"
                                                      events={
                                                        Object {
                                                          "onChannelClick": undefined,
                                                          "onClickSelectionWindow": undefined,
                                                          "onContextMenu": undefined,
                                                          "onMeasureWindowUpdated": undefined,
                                                          "onMoveSelectionWindow": undefined,
                                                          "onPredictivePhaseClick": undefined,
                                                          "onPredictivePhaseContextMenu": undefined,
                                                          "onPredictivePhaseDragEnd": undefined,
                                                          "onSignalDetectionClick": undefined,
                                                          "onSignalDetectionContextMenu": undefined,
                                                          "onSignalDetectionDragEnd": undefined,
                                                          "onUpdateMarker": undefined,
                                                          "onUpdateSelectionWindow": undefined,
                                                        }
                                                      }
                                                      expanded={false}
                                                      getCanvasBoundingRect={[Function]}
                                                      getCurrentViewRangeInSeconds={[Function]}
                                                      getViewRange={[Function]}
                                                      glMax={100}
                                                      glMin={0}
                                                      height={-38}
                                                      index={0}
                                                      initialConfiguration={
                                                        Object {
                                                          "colorScale": undefined,
                                                          "defaultChannel": Object {
                                                            "disableMaskModification": false,
                                                            "disableMeasureWindow": true,
                                                            "disablePreditedPhaseModification": false,
                                                            "disableSignalDetectionModification": false,
                                                          },
                                                          "defaultChannelHeightPx": 50,
                                                          "hotKeys": Object {
                                                            "amplitudeScale": "KeyS",
                                                            "amplitudeScaleReset": "Alt+Shift+KeyS",
                                                            "amplitudeScaleSingleReset": "Alt+KeyS",
                                                            "drawMeasureWindow": "Alt",
                                                            "maskCreate": "KeyM",
                                                          },
                                                          "labelWidthPx": 65,
                                                          "nonDefaultChannel": Object {
                                                            "disableMaskModification": false,
                                                            "disableMeasureWindow": false,
                                                            "disablePreditedPhaseModification": false,
                                                            "disableSignalDetectionModification": false,
                                                          },
                                                          "shouldRenderSpectrograms": true,
                                                          "shouldRenderWaveforms": true,
                                                          "suppressLabelYAxis": false,
                                                          "xAxisLabel": "Time",
                                                        }
                                                      }
                                                      isDefaultChannel={true}
                                                      isExpandable={false}
                                                      isMeasureWindow={false}
                                                      offsetSecs={0}
                                                      onContextMenu={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseMove={[Function]}
                                                      onMouseUp={[Function]}
                                                      pointSize={2}
                                                      renderWaveforms={[Function]}
                                                      selections={
                                                        Object {
                                                          "channels": undefined,
                                                        }
                                                      }
                                                      setYAxisBounds={[Function]}
                                                      shouldRenderSpectrograms={true}
                                                      shouldRenderWaveforms={true}
                                                      showMaskIndicator={false}
                                                      stationId="id"
                                                      toast={[Function]}
                                                      toggleExpansion={[Function]}
                                                      updateMeasureWindow={[Function]}
                                                      workerRpcs={
                                                        Array [
                                                          RpcProvider {
                                                            "_dispatch": [Function],
                                                            "_nextTransactionId": 0,
                                                            "_pendingTransactions": Object {},
                                                            "_rpcHandlers": Object {},
                                                            "_rpcTimeout": 0,
                                                            "_signalHandlers": Object {},
                                                            "error": Event {
                                                              "_contexts": Array [],
                                                              "_handlers": Array [],
                                                              "dispatch": [Function],
                                                              "hasHandlers": false,
                                                            },
                                                          },
                                                          RpcProvider {
                                                            "_dispatch": [Function],
                                                            "_nextTransactionId": 0,
                                                            "_pendingTransactions": Object {},
                                                            "_rpcHandlers": Object {},
                                                            "_rpcTimeout": 0,
                                                            "_signalHandlers": Object {},
                                                            "error": Event {
                                                              "_contexts": Array [],
                                                              "_handlers": Array [],
                                                              "dispatch": [Function],
                                                              "hasHandlers": false,
                                                            },
                                                          },
                                                          RpcProvider {
                                                            "_dispatch": [Function],
                                                            "_nextTransactionId": 0,
                                                            "_pendingTransactions": Object {},
                                                            "_rpcHandlers": Object {},
                                                            "_rpcTimeout": 0,
                                                            "_signalHandlers": Object {},
                                                            "error": Event {
                                                              "_contexts": Array [],
                                                              "_handlers": Array [],
                                                              "dispatch": [Function],
                                                              "hasHandlers": false,
                                                            },
                                                          },
                                                          RpcProvider {
                                                            "_dispatch": [Function],
                                                            "_nextTransactionId": 0,
                                                            "_pendingTransactions": Object {},
                                                            "_rpcHandlers": Object {},
                                                            "_rpcTimeout": 0,
                                                            "_signalHandlers": Object {},
                                                            "error": Event {
                                                              "_contexts": Array [],
                                                              "_handlers": Array [],
                                                              "dispatch": [Function],
                                                              "hasHandlers": false,
                                                            },
                                                          },
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="contentrenderer"
                                                        onContextMenu={[Function]}
                                                        onKeyDown={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseMove={[Function]}
                                                        onMouseUp={[Function]}
                                                        style={
                                                          Object {
                                                            "backgroundColor": "initial",
                                                          }
                                                        }
                                                        tabIndex={0}
                                                      >
                                                        <WaveformRenderer
                                                          canvasRef={[Function]}
                                                          channel={
                                                            Object {
                                                              "defaultRange": Object {
                                                                "max": 9.08,
                                                                "min": 4.92,
                                                              },
                                                              "height": -38,
                                                              "id": "id",
                                                              "name": "Lag (s)",
                                                              "waveform": Object {
                                                                "channelSegmentId": "data",
                                                                "channelSegments": Map {
                                                                  "data" => Object {
                                                                    "channelName": "LineChartChannel",
                                                                    "channelSegmentBoundaries": Object {
                                                                      "bottomMax": 5,
                                                                      "channelAvg": 6,
                                                                      "channelSegmentId": "unfiltered",
                                                                      "offset": 9,
                                                                      "samplesCount": 3,
                                                                      "topMax": 9,
                                                                    },
                                                                    "dataSegments": Array [
                                                                      Object {
                                                                        "color": "#5973b3",
                                                                        "data": Object {
                                                                          "values": Float32Array [
                                                                            0,
                                                                            5,
                                                                            50,
                                                                            6,
                                                                            100,
                                                                            9,
                                                                          ],
                                                                        },
                                                                        "displayType": Array [
                                                                          "LINE",
                                                                        ],
                                                                        "pointSize": 4,
                                                                      },
                                                                    ],
                                                                    "wfFilterId": "unfiltered",
                                                                  },
                                                                },
                                                              },
                                                              "yAxisTicks": Array [
                                                                5,
                                                                5.8,
                                                                6.6,
                                                                7.4,
                                                                8.2,
                                                                9,
                                                              ],
                                                            }
                                                          }
                                                          channelName="id"
                                                          channelSegmentId="data"
                                                          channelSegments={
                                                            Map {
                                                              "data" => Object {
                                                                "channelName": "LineChartChannel",
                                                                "channelSegmentBoundaries": Object {
                                                                  "bottomMax": 5,
                                                                  "channelAvg": 6,
                                                                  "channelSegmentId": "unfiltered",
                                                                  "offset": 9,
                                                                  "samplesCount": 3,
                                                                  "topMax": 9,
                                                                },
                                                                "dataSegments": Array [
                                                                  Object {
                                                                    "color": "#5973b3",
                                                                    "data": Object {
                                                                      "values": Float32Array [
                                                                        0,
                                                                        5,
                                                                        50,
                                                                        6,
                                                                        100,
                                                                        9,
                                                                      ],
                                                                    },
                                                                    "displayType": Array [
                                                                      "LINE",
                                                                    ],
                                                                    "pointSize": 4,
                                                                  },
                                                                ],
                                                                "wfFilterId": "unfiltered",
                                                              },
                                                            }
                                                          }
                                                          color="#4580E6"
                                                          converters={
                                                            Object {
                                                              "computeFractionOfCanvasFromMouseXPx": [Function],
                                                              "computeTimeSecsForMouseXFractionalPosition": [Function],
                                                              "computeTimeSecsFromMouseXPixels": [Function],
                                                            }
                                                          }
                                                          customLabel={[Function]}
                                                          defaultRange={
                                                            Object {
                                                              "max": 9.08,
                                                              "min": 4.92,
                                                            }
                                                          }
                                                          displayEndTimeSecs={1606818300}
                                                          displayStartTimeSecs={1606818240}
                                                          displayType={
                                                            Array [
                                                              "LINE",
                                                            ]
                                                          }
                                                          distance={0}
                                                          distanceUnits="degrees"
                                                          events={
                                                            Object {
                                                              "events": Object {
                                                                "onChannelClick": undefined,
                                                                "onClickSelectionWindow": undefined,
                                                                "onContextMenu": undefined,
                                                                "onMeasureWindowUpdated": undefined,
                                                                "onMoveSelectionWindow": undefined,
                                                                "onPredictivePhaseClick": undefined,
                                                                "onPredictivePhaseContextMenu": undefined,
                                                                "onPredictivePhaseDragEnd": undefined,
                                                                "onSignalDetectionClick": undefined,
                                                                "onSignalDetectionContextMenu": undefined,
                                                                "onSignalDetectionDragEnd": undefined,
                                                                "onUpdateMarker": undefined,
                                                                "onUpdateSelectionWindow": undefined,
                                                              },
                                                              "labelEvents": Object {
                                                                "onChannelCollapsed": undefined,
                                                                "onChannelExpanded": undefined,
                                                                "onChannelLabelClick": undefined,
                                                              },
                                                              "onKeyPress": undefined,
                                                            }
                                                          }
                                                          expanded={false}
                                                          getCanvasBoundingRect={[Function]}
                                                          getCurrentViewRangeInSeconds={[Function]}
                                                          getViewRange={[Function]}
                                                          glMax={100}
                                                          glMin={0}
                                                          height={-38}
                                                          index={0}
                                                          initialConfiguration={
                                                            Object {
                                                              "colorScale": undefined,
                                                              "defaultChannel": Object {
                                                                "disableMaskModification": false,
                                                                "disableMeasureWindow": true,
                                                                "disablePreditedPhaseModification": false,
                                                                "disableSignalDetectionModification": false,
                                                              },
                                                              "defaultChannelHeightPx": 50,
                                                              "hotKeys": Object {
                                                                "amplitudeScale": "KeyS",
                                                                "amplitudeScaleReset": "Alt+Shift+KeyS",
                                                                "amplitudeScaleSingleReset": "Alt+KeyS",
                                                                "drawMeasureWindow": "Alt",
                                                                "maskCreate": "KeyM",
                                                              },
                                                              "labelWidthPx": 65,
                                                              "nonDefaultChannel": Object {
                                                                "disableMaskModification": false,
                                                                "disableMeasureWindow": false,
                                                                "disablePreditedPhaseModification": false,
                                                                "disableSignalDetectionModification": false,
                                                              },
                                                              "shouldRenderSpectrograms": true,
                                                              "shouldRenderWaveforms": true,
                                                              "suppressLabelYAxis": false,
                                                              "xAxisLabel": "Time",
                                                            }
                                                          }
                                                          isDefaultChannel={true}
                                                          isExpandable={false}
                                                          isMeasureWindow={false}
                                                          offsetSecs={0}
                                                          onMouseDown={[Function]}
                                                          onMouseMove={[Function]}
                                                          onMouseUp={[Function]}
                                                          pointSize={2}
                                                          renderWaveforms={[Function]}
                                                          selections={
                                                            Object {
                                                              "channels": undefined,
                                                            }
                                                          }
                                                          setYAxisBounds={[Function]}
                                                          shouldRenderSpectrograms={true}
                                                          shouldRenderWaveforms={true}
                                                          showMaskIndicator={false}
                                                          stationId="id"
                                                          toast={[Function]}
                                                          toggleExpansion={[Function]}
                                                          updateMeasureWindow={[Function]}
                                                          workerRpcs={
                                                            Array [
                                                              RpcProvider {
                                                                "_dispatch": [Function],
                                                                "_nextTransactionId": 0,
                                                                "_pendingTransactions": Object {},
                                                                "_rpcHandlers": Object {},
                                                                "_rpcTimeout": 0,
                                                                "_signalHandlers": Object {},
                                                                "error": Event {
                                                                  "_contexts": Array [],
                                                                  "_handlers": Array [],
                                                                  "dispatch": [Function],
                                                                  "hasHandlers": false,
                                                                },
                                                              },
                                                              RpcProvider {
                                                                "_dispatch": [Function],
                                                                "_nextTransactionId": 0,
                                                                "_pendingTransactions": Object {},
                                                                "_rpcHandlers": Object {},
                                                                "_rpcTimeout": 0,
                                                                "_signalHandlers": Object {},
                                                                "error": Event {
                                                                  "_contexts": Array [],
                                                                  "_handlers": Array [],
                                                                  "dispatch": [Function],
                                                                  "hasHandlers": false,
                                                                },
                                                              },
                                                              RpcProvider {
                                                                "_dispatch": [Function],
                                                                "_nextTransactionId": 0,
                                                                "_pendingTransactions": Object {},
                                                                "_rpcHandlers": Object {},
                                                                "_rpcTimeout": 0,
                                                                "_signalHandlers": Object {},
                                                                "error": Event {
                                                                  "_contexts": Array [],
                                                                  "_handlers": Array [],
                                                                  "dispatch": [Function],
                                                                  "hasHandlers": false,
                                                                },
                                                              },
                                                              RpcProvider {
                                                                "_dispatch": [Function],
                                                                "_nextTransactionId": 0,
                                                                "_pendingTransactions": Object {},
                                                                "_rpcHandlers": Object {},
                                                                "_rpcTimeout": 0,
                                                                "_signalHandlers": Object {},
                                                                "error": Event {
                                                                  "_contexts": Array [],
                                                                  "_handlers": Array [],
                                                                  "dispatch": [Function],
                                                                  "hasHandlers": false,
                                                                },
                                                              },
                                                            ]
                                                          }
                                                        />
                                                        <div
                                                          className="contentrenderer-content contentrenderer-content--sticky"
                                                          style={
                                                            Object {
                                                              "width": "calc(100vw - 65)",
                                                            }
                                                          }
                                                        />
                                                        <div
                                                          className="contentrenderer-content"
                                                          style={
                                                            Object {
                                                              "left": 65,
                                                              "width": "calc(100% - 65)",
                                                            }
                                                          }
                                                        >
                                                          <div
                                                            className="contentrenderer-content-drag-indicator"
                                                          />
                                                          <Memo()
                                                            key="8"
                                                            onClick={[Function]}
                                                          >
                                                            <div
                                                              className="measure-window-selection measure-window-selection__container"
                                                              style={
                                                                Object {
                                                                  "display": "none",
                                                                  "transform": "translateX(-50%)",
                                                                }
                                                              }
                                                            >
                                                              <div
                                                                className="measure-window-selection__overlay"
                                                                draggable={true}
                                                                onDragStart={[Function]}
                                                                style={
                                                                  Object {
                                                                    "display": "none",
                                                                    "left": "50%",
                                                                    "width": "0%",
                                                                  }
                                                                }
                                                              />
                                                            </div>
                                                          </Memo()>
                                                          <div
                                                            className="contentrenderer-content-markers"
                                                          />
                                                          <SignalDetections
                                                            channelId="id"
                                                            disableModification={false}
                                                            displayEndTimeSecs={1606818300}
                                                            displayStartTimeSecs={1606818240}
                                                            events={
                                                              Object {
                                                                "onChannelClick": undefined,
                                                                "onClickSelectionWindow": undefined,
                                                                "onContextMenu": undefined,
                                                                "onMeasureWindowUpdated": undefined,
                                                                "onMoveSelectionWindow": undefined,
                                                                "onPredictivePhaseClick": undefined,
                                                                "onPredictivePhaseContextMenu": undefined,
                                                                "onPredictivePhaseDragEnd": undefined,
                                                                "onSignalDetectionClick": undefined,
                                                                "onSignalDetectionContextMenu": undefined,
                                                                "onSignalDetectionDragEnd": undefined,
                                                                "onUpdateMarker": undefined,
                                                                "onUpdateSelectionWindow": undefined,
                                                              }
                                                            }
                                                            getTimeSecsForClientX={[Function]}
                                                            isDefaultChannel={true}
                                                            positionDragIndicator={[Function]}
                                                            stationId="id"
                                                            toast={[Function]}
                                                            toggleDragIndicator={[Function]}
                                                          />
                                                          <PredictedPhases
                                                            channelId="id"
                                                            disableModification={false}
                                                            displayEndTimeSecs={1606818300}
                                                            displayStartTimeSecs={1606818240}
                                                            events={
                                                              Object {
                                                                "onChannelClick": undefined,
                                                                "onClickSelectionWindow": undefined,
                                                                "onContextMenu": undefined,
                                                                "onMeasureWindowUpdated": undefined,
                                                                "onMoveSelectionWindow": undefined,
                                                                "onPredictivePhaseClick": undefined,
                                                                "onPredictivePhaseContextMenu": undefined,
                                                                "onPredictivePhaseDragEnd": undefined,
                                                                "onSignalDetectionClick": undefined,
                                                                "onSignalDetectionContextMenu": undefined,
                                                                "onSignalDetectionDragEnd": undefined,
                                                                "onUpdateMarker": undefined,
                                                                "onUpdateSelectionWindow": undefined,
                                                              }
                                                            }
                                                            getTimeSecsForClientX={[Function]}
                                                            isDefaultChannel={true}
                                                            positionDragIndicator={[Function]}
                                                            stationId="id"
                                                            toast={[Function]}
                                                            toggleDragIndicator={[Function]}
                                                          />
                                                          <TheoreticalPhases
                                                            displayEndTimeSecs={1606818300}
                                                            displayStartTimeSecs={1606818240}
                                                            events={
                                                              Object {
                                                                "onChannelClick": undefined,
                                                                "onClickSelectionWindow": undefined,
                                                                "onContextMenu": undefined,
                                                                "onMeasureWindowUpdated": undefined,
                                                                "onMoveSelectionWindow": undefined,
                                                                "onPredictivePhaseClick": undefined,
                                                                "onPredictivePhaseContextMenu": undefined,
                                                                "onPredictivePhaseDragEnd": undefined,
                                                                "onSignalDetectionClick": undefined,
                                                                "onSignalDetectionContextMenu": undefined,
                                                                "onSignalDetectionDragEnd": undefined,
                                                                "onUpdateMarker": undefined,
                                                                "onUpdateSelectionWindow": undefined,
                                                              }
                                                            }
                                                            getTimeSecsForClientX={[Function]}
                                                            isDefaultChannel={true}
                                                            positionDragIndicator={[Function]}
                                                            stationId="id"
                                                            toast={[Function]}
                                                            toggleDragIndicator={[Function]}
                                                          />
                                                        </div>
                                                      </div>
                                                    </ContentRenderer>
                                                  </div>
                                                </MeasureWindowSelectionListener>
                                              </div>
                                            </Channel>
                                          </div>
                                        </Station>
                                        <div
                                          className="weavess-wp-container-viewport-content-markers"
                                          style={
                                            Object {
                                              "left": "65px",
                                              "width": "calc(100% - 65px)",
                                            }
                                          }
                                        />
                                      </div>
                                    </div>
                                  </div>
                                </div>
                                <div
                                  className="weavess-wp-container-overlay"
                                  style={
                                    Object {
                                      "width": "calc(100% - (65px + 10px))",
                                    }
                                  }
                                >
                                  <Blueprint3.Popover
                                    boundary="scrollParent"
                                    captureDismiss={false}
                                    content={
                                      <div
                                        className="weavess-wp-time-popover-content"
                                      />
                                    }
                                    defaultIsOpen={false}
                                    disabled={false}
                                    fill={false}
                                    hasBackdrop={false}
                                    hoverCloseDelay={300}
                                    hoverOpenDelay={150}
                                    inheritDarkTheme={true}
                                    interactionKind="click"
                                    isOpen={false}
                                    minimal={false}
                                    modifiers={Object {}}
                                    openOnTargetFocus={true}
                                    position="top"
                                    targetTagName="span"
                                    transitionDuration={300}
                                    usePortal={true}
                                    wrapperTagName="span"
                                  >
                                    <Manager>
                                      <span
                                        className="bp3-popover-wrapper"
                                      >
                                        <Reference
                                          innerRef={[Function]}
                                        >
                                          <InnerReference
                                            innerRef={[Function]}
                                            setReferenceNode={[Function]}
                                          >
                                            <Blueprint3.ResizeSensor
                                              onResize={[Function]}
                                            >
                                              <span
                                                className="bp3-popover-target"
                                                onClick={[Function]}
                                              >
                                                <div
                                                  className=""
                                                  key=".0"
                                                />
                                              </span>
                                            </Blueprint3.ResizeSensor>
                                          </InnerReference>
                                        </Reference>
                                        <Blueprint3.Overlay
                                          autoFocus={true}
                                          backdropClassName="bp3-popover-backdrop"
                                          backdropProps={Object {}}
                                          canEscapeKeyClose={true}
                                          canOutsideClickClose={true}
                                          enforceFocus={true}
                                          hasBackdrop={false}
                                          isOpen={false}
                                          lazy={true}
                                          onClose={[Function]}
                                          transitionDuration={300}
                                          transitionName="bp3-popover"
                                          usePortal={true}
                                        />
                                      </span>
                                    </Manager>
                                  </Blueprint3.Popover>
                                  <div
                                    className="weavess-wp-container-overlay-cross-hair"
                                  />
                                  <div
                                    className="weavess-wp-container-overlay-selection-area"
                                  />
                                </div>
                              </div>
                              <XAxis
                                borderTop={true}
                                endTimeSecs={1606818300}
                                getViewRange={[Function]}
                                label="Time"
                                labelWidthPx={65}
                                scrollbarWidthPx={10}
                                startTimeSecs={1606818240}
                              >
                                <div
                                  className="x-axis"
                                  style={
                                    Object {
                                      "height": "35px",
                                    }
                                  }
                                >
                                  <div
                                    style={
                                      Object {
                                        "width": "100%",
                                      }
                                    }
                                  />
                                  <div
                                    style={
                                      Object {
                                        "textAlign": "center",
                                      }
                                    }
                                  >
                                    Time
                                  </div>
                                </div>
                              </XAxis>
                            </div>
                            <Memo(InternalTimeRange)
                              labelWidthPx={65}
                            >
                              <div
                                className="weavess-wp-time-range"
                                style={
                                  Object {
                                    "left": "65px",
                                  }
                                }
                              >
                                <span>
                                  2020-12-01 10:24:00.000 + 1 minute
                                </span>
                              </div>
                            </Memo(InternalTimeRange)>
                          </div>
                        </WaveformPanel>
                      </div>
                    </HorizontalDivider>
                    <Blueprint3.Toaster
                      autoFocus={false}
                      canEscapeKeyClear={true}
                      position="bottom-right"
                      usePortal={false}
                    >
                      <Blueprint3.Overlay
                        autoFocus={false}
                        backdropProps={Object {}}
                        canEscapeKeyClose={true}
                        canOutsideClickClose={false}
                        className="bp3-toast-container bp3-toast-container-bottom bp3-toast-container-right"
                        enforceFocus={false}
                        hasBackdrop={false}
                        isOpen={false}
                        lazy={true}
                        onClose={[Function]}
                        transitionDuration={350}
                        transitionName="bp3-toast"
                        usePortal={false}
                      />
                    </Blueprint3.Toaster>
                  </div>
                </WaveformDisplay>
              </div>
            </div>
          </div>
        </div>
      </LineChartWeavess>
    </div>
  </BarAndLineChart>
</BarLineChartPanel>
`;

exports[`BarLineChartPanel renders BarLineChartPanel with percent data 1`] = `
<Blueprint3.NonIdealState
  description={null}
  title={null}
/>
`;
