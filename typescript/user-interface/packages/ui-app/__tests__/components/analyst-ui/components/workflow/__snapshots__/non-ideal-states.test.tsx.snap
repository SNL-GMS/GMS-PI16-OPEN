// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`workflow non-ideal-states workflow interval query empty matches snapshot 1`] = `
<BaseDisplay
  glContainer={
    Object {
      "close": [MockFunction],
      "emit": [MockFunction],
      "extendState": [MockFunction],
      "getElement": [MockFunction],
      "getState": [MockFunction],
      "height": 1200,
      "hide": [MockFunction],
      "isHidden": false,
      "layoutManager": undefined,
      "off": [MockFunction],
      "on": [MockFunction],
      "parent": undefined,
      "setSize": [MockFunction],
      "setState": [MockFunction],
      "setTitle": [MockFunction],
      "show": [MockFunction],
      "tab": undefined,
      "title": "workflow",
      "trigger": [MockFunction],
      "unbind": [MockFunction],
      "width": 1900,
    }
  }
>
  <div
    className="base-display "
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <WrappedWithNonIdealStateChecker
        operationalTimePeriodConfigurationQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": false,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": false,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
        timeRange={
          Object {
            "endTimeSecs": 2000,
            "startTimeSecs": 1000,
          }
        }
        workflowIntervalQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": false,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": false,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
        workflowQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": false,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": false,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
      >
        <Blueprint3.NonIdealState
          description="Stage intervals returned empty"
          title="No data"
        >
          <div
            className="bp3-non-ideal-state"
          >
            <Component>
              <h4
                className="bp3-heading"
              >
                No data
              </h4>
            </Component>
            <div>
              Stage intervals returned empty
            </div>
          </div>
        </Blueprint3.NonIdealState>
      </WrappedWithNonIdealStateChecker>
    </Provider>
  </div>
</BaseDisplay>
`;

exports[`workflow non-ideal-states workflow interval query error matches snapshot 1`] = `
<BaseDisplay
  glContainer={
    Object {
      "close": [MockFunction],
      "emit": [MockFunction],
      "extendState": [MockFunction],
      "getElement": [MockFunction],
      "getState": [MockFunction],
      "height": 1200,
      "hide": [MockFunction],
      "isHidden": false,
      "layoutManager": undefined,
      "off": [MockFunction],
      "on": [MockFunction],
      "parent": undefined,
      "setSize": [MockFunction],
      "setState": [MockFunction],
      "setTitle": [MockFunction],
      "show": [MockFunction],
      "tab": undefined,
      "title": "workflow",
      "trigger": [MockFunction],
      "unbind": [MockFunction],
      "width": 1900,
    }
  }
>
  <div
    className="base-display "
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <WrappedWithNonIdealStateChecker
        operationalTimePeriodConfigurationQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": false,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": false,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
        timeRange={
          Object {
            "endTimeSecs": 2000,
            "startTimeSecs": 1000,
          }
        }
        workflowIntervalQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": true,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": false,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
        workflowQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": false,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": false,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
      >
        <Blueprint3.NonIdealState
          description="Problem Loading Workflow Interval Data"
          title="Error"
        >
          <div
            className="bp3-non-ideal-state"
          >
            <Component>
              <h4
                className="bp3-heading"
              >
                Error
              </h4>
            </Component>
            <div>
              Problem Loading Workflow Interval Data
            </div>
          </div>
        </Blueprint3.NonIdealState>
      </WrappedWithNonIdealStateChecker>
    </Provider>
  </div>
</BaseDisplay>
`;

exports[`workflow non-ideal-states workflow interval query loading matches snapshot 1`] = `
<BaseDisplay
  glContainer={
    Object {
      "close": [MockFunction],
      "emit": [MockFunction],
      "extendState": [MockFunction],
      "getElement": [MockFunction],
      "getState": [MockFunction],
      "height": 1200,
      "hide": [MockFunction],
      "isHidden": false,
      "layoutManager": undefined,
      "off": [MockFunction],
      "on": [MockFunction],
      "parent": undefined,
      "setSize": [MockFunction],
      "setState": [MockFunction],
      "setTitle": [MockFunction],
      "show": [MockFunction],
      "tab": undefined,
      "title": "workflow",
      "trigger": [MockFunction],
      "unbind": [MockFunction],
      "width": 1900,
    }
  }
>
  <div
    className="base-display "
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <WrappedWithNonIdealStateChecker
        operationalTimePeriodConfigurationQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": false,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": false,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
        timeRange={
          Object {
            "endTimeSecs": 2000,
            "startTimeSecs": 1000,
          }
        }
        workflowIntervalQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": false,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": true,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
        workflowQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": false,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": false,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
      >
        <Blueprint3.NonIdealState
          action={
            <Blueprint3.Spinner
              intent="primary"
            />
          }
          description="Workflow Interval Data"
          title="Loading"
        >
          <div
            className="bp3-non-ideal-state"
          >
            <Component>
              <h4
                className="bp3-heading"
              >
                Loading
              </h4>
            </Component>
            <div>
              Workflow Interval Data
            </div>
            <Blueprint3.Spinner
              intent="primary"
            >
              <div
                className="bp3-spinner bp3-intent-primary"
              >
                <div
                  className="bp3-spinner-animation"
                >
                  <svg
                    height={50}
                    strokeWidth="8.00"
                    viewBox="1.00 1.00 98.00 98.00"
                    width={50}
                  >
                    <path
                      className="bp3-spinner-track"
                      d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                    />
                    <path
                      className="bp3-spinner-head"
                      d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                      pathLength={280}
                      strokeDasharray="280 280"
                      strokeDashoffset={210}
                    />
                  </svg>
                </div>
              </div>
            </Blueprint3.Spinner>
          </div>
        </Blueprint3.NonIdealState>
      </WrappedWithNonIdealStateChecker>
    </Provider>
  </div>
</BaseDisplay>
`;

exports[`workflow non-ideal-states workflow query error matches snapshot 1`] = `
<BaseDisplay
  glContainer={
    Object {
      "close": [MockFunction],
      "emit": [MockFunction],
      "extendState": [MockFunction],
      "getElement": [MockFunction],
      "getState": [MockFunction],
      "height": 1200,
      "hide": [MockFunction],
      "isHidden": false,
      "layoutManager": undefined,
      "off": [MockFunction],
      "on": [MockFunction],
      "parent": undefined,
      "setSize": [MockFunction],
      "setState": [MockFunction],
      "setTitle": [MockFunction],
      "show": [MockFunction],
      "tab": undefined,
      "title": "workflow",
      "trigger": [MockFunction],
      "unbind": [MockFunction],
      "width": 1900,
    }
  }
>
  <div
    className="base-display "
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <WrappedWithNonIdealStateChecker
        operationalTimePeriodConfigurationQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": false,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": false,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
        timeRange={
          Object {
            "endTimeSecs": 2000,
            "startTimeSecs": 1000,
          }
        }
        workflowIntervalQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": false,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": false,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
        workflowQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": true,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": false,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
      >
        <Blueprint3.NonIdealState
          action={
            <Blueprint3.Spinner
              intent="primary"
            />
          }
          description="Problem Loading Workflow Data"
          title="Error"
        >
          <div
            className="bp3-non-ideal-state"
          >
            <Component>
              <h4
                className="bp3-heading"
              >
                Error
              </h4>
            </Component>
            <div>
              Problem Loading Workflow Data
            </div>
            <Blueprint3.Spinner
              intent="primary"
            >
              <div
                className="bp3-spinner bp3-intent-primary"
              >
                <div
                  className="bp3-spinner-animation"
                >
                  <svg
                    height={50}
                    strokeWidth="8.00"
                    viewBox="1.00 1.00 98.00 98.00"
                    width={50}
                  >
                    <path
                      className="bp3-spinner-track"
                      d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                    />
                    <path
                      className="bp3-spinner-head"
                      d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                      pathLength={280}
                      strokeDasharray="280 280"
                      strokeDashoffset={210}
                    />
                  </svg>
                </div>
              </div>
            </Blueprint3.Spinner>
          </div>
        </Blueprint3.NonIdealState>
      </WrappedWithNonIdealStateChecker>
    </Provider>
  </div>
</BaseDisplay>
`;

exports[`workflow non-ideal-states workflow query loading matches snapshot 1`] = `
<BaseDisplay
  glContainer={
    Object {
      "close": [MockFunction],
      "emit": [MockFunction],
      "extendState": [MockFunction],
      "getElement": [MockFunction],
      "getState": [MockFunction],
      "height": 1200,
      "hide": [MockFunction],
      "isHidden": false,
      "layoutManager": undefined,
      "off": [MockFunction],
      "on": [MockFunction],
      "parent": undefined,
      "setSize": [MockFunction],
      "setState": [MockFunction],
      "setTitle": [MockFunction],
      "show": [MockFunction],
      "tab": undefined,
      "title": "workflow",
      "trigger": [MockFunction],
      "unbind": [MockFunction],
      "width": 1900,
    }
  }
>
  <div
    className="base-display "
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <WrappedWithNonIdealStateChecker
        operationalTimePeriodConfigurationQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": false,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": false,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
        timeRange={
          Object {
            "endTimeSecs": 2000,
            "startTimeSecs": 1000,
          }
        }
        workflowIntervalQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": false,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": false,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
        workflowQuery={
          Object {
            "canFetchMore": false,
            "clear": undefined,
            "data": undefined,
            "error": undefined,
            "failureCount": 0,
            "fetchMore": undefined,
            "isError": false,
            "isFetched": false,
            "isFetchedAfterMount": undefined,
            "isFetching": false,
            "isIdle": false,
            "isInitialData": undefined,
            "isLoading": true,
            "isPlaceholderData": undefined,
            "isPreviousData": undefined,
            "isStale": true,
            "isSuccess": true,
            "refetch": undefined,
            "remove": undefined,
            "status": undefined,
            "updatedAt": undefined,
          }
        }
      >
        <Blueprint3.NonIdealState
          action={
            <Blueprint3.Spinner
              intent="primary"
            />
          }
          description="Workflow Data"
          title="Loading"
        >
          <div
            className="bp3-non-ideal-state"
          >
            <Component>
              <h4
                className="bp3-heading"
              >
                Loading
              </h4>
            </Component>
            <div>
              Workflow Data
            </div>
            <Blueprint3.Spinner
              intent="primary"
            >
              <div
                className="bp3-spinner bp3-intent-primary"
              >
                <div
                  className="bp3-spinner-animation"
                >
                  <svg
                    height={50}
                    strokeWidth="8.00"
                    viewBox="1.00 1.00 98.00 98.00"
                    width={50}
                  >
                    <path
                      className="bp3-spinner-track"
                      d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                    />
                    <path
                      className="bp3-spinner-head"
                      d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                      pathLength={280}
                      strokeDasharray="280 280"
                      strokeDashoffset={210}
                    />
                  </svg>
                </div>
              </div>
            </Blueprint3.Spinner>
          </div>
        </Blueprint3.NonIdealState>
      </WrappedWithNonIdealStateChecker>
    </Provider>
  </div>
</BaseDisplay>
`;
