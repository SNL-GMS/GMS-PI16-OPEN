// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Workflow Toolbar matches default value snapshot 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <BaseDisplay
    glContainer={
      Object {
        "close": [MockFunction],
        "emit": [MockFunction],
        "extendState": [MockFunction],
        "getElement": [MockFunction],
        "getState": [MockFunction],
        "height": 1200,
        "hide": [MockFunction],
        "isHidden": false,
        "layoutManager": undefined,
        "off": [MockFunction],
        "on": [MockFunction],
        "parent": undefined,
        "setSize": [MockFunction],
        "setState": [MockFunction],
        "setTitle": [MockFunction],
        "show": [MockFunction],
        "tab": undefined,
        "title": "workflow",
        "trigger": [MockFunction],
        "unbind": [MockFunction],
        "width": 1900,
      }
    }
  >
    <div
      className="base-display "
    >
      <Memo()
        onPan={[MockFunction]}
      >
        <ToolbarComponent
          items={
            Array [
              Object {
                "cyData": "workflow-doubleLeftArrowItem",
                "icon": "double-chevron-left",
                "onClick": [Function],
                "onlyShowIcon": true,
                "rank": 0,
                "tooltip": "Pan the workflow to the left by 7 days",
                "type": "Button",
                "widthPx": 20,
              },
              Object {
                "cyData": "workflow-singleLeftArrowItem",
                "icon": "chevron-left",
                "onClick": [Function],
                "onlyShowIcon": true,
                "rank": 1,
                "tooltip": "Pan the workflow to the left by 1 day",
                "type": "Button",
                "widthPx": 20,
              },
              Object {
                "cyData": "workflow-singleRightArrowItem",
                "icon": "chevron-right",
                "onClick": [Function],
                "onlyShowIcon": true,
                "rank": 2,
                "tooltip": "Pan the workflow to the right by 1 day",
                "type": "Button",
                "widthPx": 20,
              },
              Object {
                "cyData": "workflow-doubleRightArrowItem",
                "icon": "double-chevron-right",
                "onClick": [Function],
                "onlyShowIcon": true,
                "rank": 3,
                "tooltip": "Pan the workflow to the right by 7 days",
                "type": "Button",
                "widthPx": 20,
              },
              Object {
                "cyData": "workflow-openAnythingItem",
                "icon": "search-template",
                "labelRight": "Open anything...",
                "onClick": [Function],
                "onlyShowIcon": false,
                "rank": 4,
                "tooltip": "Open anything",
                "type": "Button",
                "widthPx": 160,
              },
            ]
          }
          itemsLeft={
            Array [
              Object {
                "hasIssue": false,
                "label": "Open time range",
                "rank": 0,
                "style": Object {
                  "marginLeft": "1em",
                },
                "tooltip": "The opened time range",
                "tooltipForIssue": undefined,
                "type": "LabelValue",
                "value": "2020-12-01 10:24  to  2020-12-01 10:24",
                "widthPx": 400,
              },
              Object {
                "hasIssue": false,
                "label": "Processing stage",
                "rank": 1,
                "style": Object {
                  "marginLeft": "8em",
                },
                "tooltip": "The opened processing stage",
                "tooltipForIssue": undefined,
                "type": "LabelValue",
                "value": "Al1",
                "widthPx": 400,
              },
            ]
          }
          minWhiteSpacePx={1}
          toolbarWidthPx={1860}
        >
          <div
            className="toolbar"
            style={
              Object {
                "width": "1860px",
              }
            }
          >
            <div
              className="toolbar__left-group"
            >
              <div
                className="toolbar-item toolbar-item__left"
                key="0"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "hasIssue": false,
                      "label": "Open time range",
                      "rank": 0,
                      "style": Object {
                        "marginLeft": "1em",
                      },
                      "tooltip": "The opened time range",
                      "tooltipForIssue": undefined,
                      "type": "LabelValue",
                      "value": "2020-12-01 10:24  to  2020-12-01 10:24",
                      "widthPx": 400,
                    }
                  }
                  key="0"
                >
                  <div
                    className="toolbar-label-value"
                    style={
                      Object {
                        "marginLeft": "1em",
                      }
                    }
                  >
                    <LabelValue
                      label="Open time range"
                      tooltip="The opened time range"
                      value="2020-12-01 10:24  to  2020-12-01 10:24"
                    >
                      <div
                        className="label-value-container"
                      >
                        <div
                          className="label-value__label"
                        >
                          Open time range: 
                        </div>
                        <div
                          className="label-value__value"
                          style={
                            Object {
                              "color": "",
                            }
                          }
                          title="The opened time range"
                        >
                          2020-12-01 10:24  to  2020-12-01 10:24
                        </div>
                      </div>
                    </LabelValue>
                  </div>
                </ToolbarItemRenderer>
              </div>
              <div
                className="toolbar-item toolbar-item__left"
                key="1"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "hasIssue": false,
                      "label": "Processing stage",
                      "rank": 1,
                      "style": Object {
                        "marginLeft": "8em",
                      },
                      "tooltip": "The opened processing stage",
                      "tooltipForIssue": undefined,
                      "type": "LabelValue",
                      "value": "Al1",
                      "widthPx": 400,
                    }
                  }
                  key="1"
                >
                  <div
                    className="toolbar-label-value"
                    style={
                      Object {
                        "marginLeft": "8em",
                      }
                    }
                  >
                    <LabelValue
                      label="Processing stage"
                      tooltip="The opened processing stage"
                      value="Al1"
                    >
                      <div
                        className="label-value-container"
                      >
                        <div
                          className="label-value__label"
                        >
                          Processing stage: 
                        </div>
                        <div
                          className="label-value__value"
                          style={
                            Object {
                              "color": "",
                            }
                          }
                          title="The opened processing stage"
                        >
                          Al1
                        </div>
                      </div>
                    </LabelValue>
                  </div>
                </ToolbarItemRenderer>
              </div>
            </div>
            <div
              className="toolbar__center-group"
            >
              <div
                className="toolbar__whitespace"
                style={
                  Object {
                    "width": "1844px",
                  }
                }
              />
            </div>
            <div
              className="toolbar__right-group"
            >
              <div
                className="toolbar-item
                    "
                key="0"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "cyData": "workflow-doubleLeftArrowItem",
                      "icon": "double-chevron-left",
                      "onClick": [Function],
                      "onlyShowIcon": true,
                      "rank": 0,
                      "tooltip": "Pan the workflow to the left by 7 days",
                      "type": "Button",
                      "widthPx": 20,
                    }
                  }
                  key="0"
                >
                  <div
                    key="0"
                    style={Object {}}
                  >
                    <Blueprint3.Button
                      alignText="center"
                      className="toolbar-button--icon-only"
                      data-cy="workflow-doubleLeftArrowItem"
                      key="0"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseOut={[Function]}
                      style={
                        Object {
                          "marginRight": undefined,
                          "width": "20px",
                        }
                      }
                      title="Pan the workflow to the left by 7 days"
                    >
                      <button
                        className="bp3-button toolbar-button--icon-only"
                        data-cy="workflow-doubleLeftArrowItem"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseEnter={[Function]}
                        onMouseOut={[Function]}
                        style={
                          Object {
                            "marginRight": undefined,
                            "width": "20px",
                          }
                        }
                        title="Pan the workflow to the left by 7 days"
                        type="button"
                      >
                        <Blueprint3.Icon
                          key="leftIcon"
                        />
                        <span
                          className="bp3-button-text"
                          key="text"
                        >
                          <Blueprint3.Icon
                            icon="double-chevron-left"
                            key="2"
                            title={false}
                          >
                            <span
                              className="bp3-icon bp3-icon-double-chevron-left"
                              icon="double-chevron-left"
                            >
                              <svg
                                data-icon="double-chevron-left"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <path
                                  d="M4.41 8L7.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C2.11 7.47 2 7.72 2 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.41 8zm5 0l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C7.11 7.47 7 7.72 7 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L9.41 8z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                        </span>
                        <Blueprint3.Icon
                          key="rightIcon"
                        />
                      </button>
                    </Blueprint3.Button>
                  </div>
                </ToolbarItemRenderer>
              </div>
              <div
                className="toolbar-item
                    "
                key="1"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "cyData": "workflow-singleLeftArrowItem",
                      "icon": "chevron-left",
                      "onClick": [Function],
                      "onlyShowIcon": true,
                      "rank": 1,
                      "tooltip": "Pan the workflow to the left by 1 day",
                      "type": "Button",
                      "widthPx": 20,
                    }
                  }
                  key="1"
                >
                  <div
                    key="1"
                    style={Object {}}
                  >
                    <Blueprint3.Button
                      alignText="center"
                      className="toolbar-button--icon-only"
                      data-cy="workflow-singleLeftArrowItem"
                      key="1"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseOut={[Function]}
                      style={
                        Object {
                          "marginRight": undefined,
                          "width": "20px",
                        }
                      }
                      title="Pan the workflow to the left by 1 day"
                    >
                      <button
                        className="bp3-button toolbar-button--icon-only"
                        data-cy="workflow-singleLeftArrowItem"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseEnter={[Function]}
                        onMouseOut={[Function]}
                        style={
                          Object {
                            "marginRight": undefined,
                            "width": "20px",
                          }
                        }
                        title="Pan the workflow to the left by 1 day"
                        type="button"
                      >
                        <Blueprint3.Icon
                          key="leftIcon"
                        />
                        <span
                          className="bp3-button-text"
                          key="text"
                        >
                          <Blueprint3.Icon
                            icon="chevron-left"
                            key="2"
                            title={false}
                          >
                            <span
                              className="bp3-icon bp3-icon-chevron-left"
                              icon="chevron-left"
                            >
                              <svg
                                data-icon="chevron-left"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <path
                                  d="M7.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C5.11 7.47 5 7.72 5 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L7.41 8z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                        </span>
                        <Blueprint3.Icon
                          key="rightIcon"
                        />
                      </button>
                    </Blueprint3.Button>
                  </div>
                </ToolbarItemRenderer>
              </div>
              <div
                className="toolbar-item
                    "
                key="2"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "cyData": "workflow-singleRightArrowItem",
                      "icon": "chevron-right",
                      "onClick": [Function],
                      "onlyShowIcon": true,
                      "rank": 2,
                      "tooltip": "Pan the workflow to the right by 1 day",
                      "type": "Button",
                      "widthPx": 20,
                    }
                  }
                  key="2"
                >
                  <div
                    key="2"
                    style={Object {}}
                  >
                    <Blueprint3.Button
                      alignText="center"
                      className="toolbar-button--icon-only"
                      data-cy="workflow-singleRightArrowItem"
                      key="2"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseOut={[Function]}
                      style={
                        Object {
                          "marginRight": undefined,
                          "width": "20px",
                        }
                      }
                      title="Pan the workflow to the right by 1 day"
                    >
                      <button
                        className="bp3-button toolbar-button--icon-only"
                        data-cy="workflow-singleRightArrowItem"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseEnter={[Function]}
                        onMouseOut={[Function]}
                        style={
                          Object {
                            "marginRight": undefined,
                            "width": "20px",
                          }
                        }
                        title="Pan the workflow to the right by 1 day"
                        type="button"
                      >
                        <Blueprint3.Icon
                          key="leftIcon"
                        />
                        <span
                          className="bp3-button-text"
                          key="text"
                        >
                          <Blueprint3.Icon
                            icon="chevron-right"
                            key="2"
                            title={false}
                          >
                            <span
                              className="bp3-icon bp3-icon-chevron-right"
                              icon="chevron-right"
                            >
                              <svg
                                data-icon="chevron-right"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <path
                                  d="M10.71 7.29l-4-4a1.003 1.003 0 00-1.42 1.42L8.59 8 5.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                        </span>
                        <Blueprint3.Icon
                          key="rightIcon"
                        />
                      </button>
                    </Blueprint3.Button>
                  </div>
                </ToolbarItemRenderer>
              </div>
              <div
                className="toolbar-item
                    "
                key="3"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "cyData": "workflow-doubleRightArrowItem",
                      "icon": "double-chevron-right",
                      "onClick": [Function],
                      "onlyShowIcon": true,
                      "rank": 3,
                      "tooltip": "Pan the workflow to the right by 7 days",
                      "type": "Button",
                      "widthPx": 20,
                    }
                  }
                  key="3"
                >
                  <div
                    key="3"
                    style={Object {}}
                  >
                    <Blueprint3.Button
                      alignText="center"
                      className="toolbar-button--icon-only"
                      data-cy="workflow-doubleRightArrowItem"
                      key="3"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseOut={[Function]}
                      style={
                        Object {
                          "marginRight": undefined,
                          "width": "20px",
                        }
                      }
                      title="Pan the workflow to the right by 7 days"
                    >
                      <button
                        className="bp3-button toolbar-button--icon-only"
                        data-cy="workflow-doubleRightArrowItem"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseEnter={[Function]}
                        onMouseOut={[Function]}
                        style={
                          Object {
                            "marginRight": undefined,
                            "width": "20px",
                          }
                        }
                        title="Pan the workflow to the right by 7 days"
                        type="button"
                      >
                        <Blueprint3.Icon
                          key="leftIcon"
                        />
                        <span
                          className="bp3-button-text"
                          key="text"
                        >
                          <Blueprint3.Icon
                            icon="double-chevron-right"
                            key="2"
                            title={false}
                          >
                            <span
                              className="bp3-icon bp3-icon-double-chevron-right"
                              icon="double-chevron-right"
                            >
                              <svg
                                data-icon="double-chevron-right"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <path
                                  d="M9 8c0-.28-.11-.53-.29-.71l-4-4a1.003 1.003 0 00-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4C8.89 8.53 9 8.28 9 8zm4.71-.71l-4-4a1.003 1.003 0 00-1.42 1.42L11.59 8 8.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                        </span>
                        <Blueprint3.Icon
                          key="rightIcon"
                        />
                      </button>
                    </Blueprint3.Button>
                  </div>
                </ToolbarItemRenderer>
              </div>
              <div
                className="toolbar-item
                    "
                key="4"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "cyData": "workflow-openAnythingItem",
                      "icon": "search-template",
                      "labelRight": "Open anything...",
                      "onClick": [Function],
                      "onlyShowIcon": false,
                      "rank": 4,
                      "tooltip": "Open anything",
                      "type": "Button",
                      "widthPx": 160,
                    }
                  }
                  key="4"
                >
                  <div
                    key="4"
                    style={Object {}}
                  >
                    <Blueprint3.Button
                      alignText="left"
                      className="toolbar-button"
                      data-cy="workflow-openAnythingItem"
                      key="4"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseOut={[Function]}
                      style={
                        Object {
                          "marginRight": undefined,
                          "width": "160px",
                        }
                      }
                      title="Open anything"
                    >
                      <button
                        className="bp3-button bp3-align-left toolbar-button"
                        data-cy="workflow-openAnythingItem"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseEnter={[Function]}
                        onMouseOut={[Function]}
                        style={
                          Object {
                            "marginRight": undefined,
                            "width": "160px",
                          }
                        }
                        title="Open anything"
                        type="button"
                      >
                        <Blueprint3.Icon
                          key="leftIcon"
                        />
                        <span
                          className="bp3-button-text"
                          key="text"
                        >
                          <span
                            key="1"
                          />
                          <Blueprint3.Icon
                            icon="search-template"
                            key="2"
                            title={false}
                          >
                            <span
                              className="bp3-icon bp3-icon-search-template"
                              icon="search-template"
                            >
                              <svg
                                data-icon="search-template"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <path
                                  d="M15.55 13.43l-2.67-2.67c.7-1.09 1.11-2.38 1.11-3.77 0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.41 3.77-1.11l2.67 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm2.5-6h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm0-2h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm0 4h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                          <span
                            key="3"
                          >
                            Open anything...
                          </span>
                        </span>
                        <Blueprint3.Icon
                          key="rightIcon"
                        />
                      </button>
                    </Blueprint3.Button>
                  </div>
                </ToolbarItemRenderer>
              </div>
            </div>
          </div>
        </ToolbarComponent>
        <Memo(OpenAnythingDialogComponent)
          isVisible={false}
          onCancel={[Function]}
          onOpen={[Function]}
        >
          <ModalPrompt
            actionCallback={[Function]}
            actionDisabled={false}
            actionText="Open"
            actionTooltipText="Open"
            cancelButtonCallback={[Function]}
            cancelText="Cancel"
            cancelTooltipText="Cancel"
            isOpen={false}
            onCloseCallback={[Function]}
            title="Open Anything"
          >
            <Blueprint3.Dialog
              canOutsideClickClose={true}
              className="dialog_parent dialog_parent--wide"
              isOpen={false}
              onClose={[Function]}
              title="Open Anything"
            >
              <Blueprint3.Overlay
                autoFocus={true}
                backdropProps={Object {}}
                canEscapeKeyClose={true}
                canOutsideClickClose={true}
                className="bp3-overlay-scroll-container"
                enforceFocus={true}
                hasBackdrop={true}
                isOpen={false}
                lazy={true}
                onClose={[Function]}
                title="Open Anything"
                transitionDuration={300}
                transitionName="bp3-overlay"
                usePortal={true}
              />
            </Blueprint3.Dialog>
          </ModalPrompt>
        </Memo(OpenAnythingDialogComponent)>
      </Memo()>
    </div>
  </BaseDisplay>
</Provider>
`;

exports[`Workflow Toolbar matches snapshot 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <BaseDisplay
    glContainer={
      Object {
        "close": [MockFunction],
        "emit": [MockFunction],
        "extendState": [MockFunction],
        "getElement": [MockFunction],
        "getState": [MockFunction],
        "height": 1200,
        "hide": [MockFunction],
        "isHidden": false,
        "layoutManager": undefined,
        "off": [MockFunction],
        "on": [MockFunction],
        "parent": undefined,
        "setSize": [MockFunction],
        "setState": [MockFunction],
        "setTitle": [MockFunction],
        "show": [MockFunction],
        "tab": undefined,
        "title": "workflow",
        "trigger": [MockFunction],
        "unbind": [MockFunction],
        "width": 1900,
      }
    }
  >
    <div
      className="base-display "
    >
      <Memo()
        onPan={[MockFunction]}
      >
        <ToolbarComponent
          items={
            Array [
              Object {
                "cyData": "workflow-doubleLeftArrowItem",
                "icon": "double-chevron-left",
                "onClick": [Function],
                "onlyShowIcon": true,
                "rank": 0,
                "tooltip": "Pan the workflow to the left by 7 days",
                "type": "Button",
                "widthPx": 20,
              },
              Object {
                "cyData": "workflow-singleLeftArrowItem",
                "icon": "chevron-left",
                "onClick": [Function],
                "onlyShowIcon": true,
                "rank": 1,
                "tooltip": "Pan the workflow to the left by 1 day",
                "type": "Button",
                "widthPx": 20,
              },
              Object {
                "cyData": "workflow-singleRightArrowItem",
                "icon": "chevron-right",
                "onClick": [Function],
                "onlyShowIcon": true,
                "rank": 2,
                "tooltip": "Pan the workflow to the right by 1 day",
                "type": "Button",
                "widthPx": 20,
              },
              Object {
                "cyData": "workflow-doubleRightArrowItem",
                "icon": "double-chevron-right",
                "onClick": [Function],
                "onlyShowIcon": true,
                "rank": 3,
                "tooltip": "Pan the workflow to the right by 7 days",
                "type": "Button",
                "widthPx": 20,
              },
              Object {
                "cyData": "workflow-openAnythingItem",
                "icon": "search-template",
                "labelRight": "Open anything...",
                "onClick": [Function],
                "onlyShowIcon": false,
                "rank": 4,
                "tooltip": "Open anything",
                "type": "Button",
                "widthPx": 160,
              },
            ]
          }
          itemsLeft={
            Array [
              Object {
                "hasIssue": false,
                "label": "Open time range",
                "rank": 0,
                "style": Object {
                  "marginLeft": "1em",
                },
                "tooltip": "The opened time range",
                "tooltipForIssue": undefined,
                "type": "LabelValue",
                "value": "2020-12-01 10:24  to  2020-12-01 10:24",
                "widthPx": 400,
              },
              Object {
                "hasIssue": false,
                "label": "Processing stage",
                "rank": 1,
                "style": Object {
                  "marginLeft": "8em",
                },
                "tooltip": "The opened processing stage",
                "tooltipForIssue": undefined,
                "type": "LabelValue",
                "value": "Al1",
                "widthPx": 400,
              },
            ]
          }
          minWhiteSpacePx={1}
          toolbarWidthPx={1860}
        >
          <div
            className="toolbar"
            style={
              Object {
                "width": "1860px",
              }
            }
          >
            <div
              className="toolbar__left-group"
            >
              <div
                className="toolbar-item toolbar-item__left"
                key="0"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "hasIssue": false,
                      "label": "Open time range",
                      "rank": 0,
                      "style": Object {
                        "marginLeft": "1em",
                      },
                      "tooltip": "The opened time range",
                      "tooltipForIssue": undefined,
                      "type": "LabelValue",
                      "value": "2020-12-01 10:24  to  2020-12-01 10:24",
                      "widthPx": 400,
                    }
                  }
                  key="0"
                >
                  <div
                    className="toolbar-label-value"
                    style={
                      Object {
                        "marginLeft": "1em",
                      }
                    }
                  >
                    <LabelValue
                      label="Open time range"
                      tooltip="The opened time range"
                      value="2020-12-01 10:24  to  2020-12-01 10:24"
                    >
                      <div
                        className="label-value-container"
                      >
                        <div
                          className="label-value__label"
                        >
                          Open time range: 
                        </div>
                        <div
                          className="label-value__value"
                          style={
                            Object {
                              "color": "",
                            }
                          }
                          title="The opened time range"
                        >
                          2020-12-01 10:24  to  2020-12-01 10:24
                        </div>
                      </div>
                    </LabelValue>
                  </div>
                </ToolbarItemRenderer>
              </div>
              <div
                className="toolbar-item toolbar-item__left"
                key="1"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "hasIssue": false,
                      "label": "Processing stage",
                      "rank": 1,
                      "style": Object {
                        "marginLeft": "8em",
                      },
                      "tooltip": "The opened processing stage",
                      "tooltipForIssue": undefined,
                      "type": "LabelValue",
                      "value": "Al1",
                      "widthPx": 400,
                    }
                  }
                  key="1"
                >
                  <div
                    className="toolbar-label-value"
                    style={
                      Object {
                        "marginLeft": "8em",
                      }
                    }
                  >
                    <LabelValue
                      label="Processing stage"
                      tooltip="The opened processing stage"
                      value="Al1"
                    >
                      <div
                        className="label-value-container"
                      >
                        <div
                          className="label-value__label"
                        >
                          Processing stage: 
                        </div>
                        <div
                          className="label-value__value"
                          style={
                            Object {
                              "color": "",
                            }
                          }
                          title="The opened processing stage"
                        >
                          Al1
                        </div>
                      </div>
                    </LabelValue>
                  </div>
                </ToolbarItemRenderer>
              </div>
            </div>
            <div
              className="toolbar__center-group"
            >
              <div
                className="toolbar__whitespace"
                style={
                  Object {
                    "width": "1844px",
                  }
                }
              />
            </div>
            <div
              className="toolbar__right-group"
            >
              <div
                className="toolbar-item
                    "
                key="0"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "cyData": "workflow-doubleLeftArrowItem",
                      "icon": "double-chevron-left",
                      "onClick": [Function],
                      "onlyShowIcon": true,
                      "rank": 0,
                      "tooltip": "Pan the workflow to the left by 7 days",
                      "type": "Button",
                      "widthPx": 20,
                    }
                  }
                  key="0"
                >
                  <div
                    key="0"
                    style={Object {}}
                  >
                    <Blueprint3.Button
                      alignText="center"
                      className="toolbar-button--icon-only"
                      data-cy="workflow-doubleLeftArrowItem"
                      key="0"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseOut={[Function]}
                      style={
                        Object {
                          "marginRight": undefined,
                          "width": "20px",
                        }
                      }
                      title="Pan the workflow to the left by 7 days"
                    >
                      <button
                        className="bp3-button toolbar-button--icon-only"
                        data-cy="workflow-doubleLeftArrowItem"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseEnter={[Function]}
                        onMouseOut={[Function]}
                        style={
                          Object {
                            "marginRight": undefined,
                            "width": "20px",
                          }
                        }
                        title="Pan the workflow to the left by 7 days"
                        type="button"
                      >
                        <Blueprint3.Icon
                          key="leftIcon"
                        />
                        <span
                          className="bp3-button-text"
                          key="text"
                        >
                          <Blueprint3.Icon
                            icon="double-chevron-left"
                            key="2"
                            title={false}
                          >
                            <span
                              className="bp3-icon bp3-icon-double-chevron-left"
                              icon="double-chevron-left"
                            >
                              <svg
                                data-icon="double-chevron-left"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <path
                                  d="M4.41 8L7.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C2.11 7.47 2 7.72 2 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.41 8zm5 0l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C7.11 7.47 7 7.72 7 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L9.41 8z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                        </span>
                        <Blueprint3.Icon
                          key="rightIcon"
                        />
                      </button>
                    </Blueprint3.Button>
                  </div>
                </ToolbarItemRenderer>
              </div>
              <div
                className="toolbar-item
                    "
                key="1"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "cyData": "workflow-singleLeftArrowItem",
                      "icon": "chevron-left",
                      "onClick": [Function],
                      "onlyShowIcon": true,
                      "rank": 1,
                      "tooltip": "Pan the workflow to the left by 1 day",
                      "type": "Button",
                      "widthPx": 20,
                    }
                  }
                  key="1"
                >
                  <div
                    key="1"
                    style={Object {}}
                  >
                    <Blueprint3.Button
                      alignText="center"
                      className="toolbar-button--icon-only"
                      data-cy="workflow-singleLeftArrowItem"
                      key="1"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseOut={[Function]}
                      style={
                        Object {
                          "marginRight": undefined,
                          "width": "20px",
                        }
                      }
                      title="Pan the workflow to the left by 1 day"
                    >
                      <button
                        className="bp3-button toolbar-button--icon-only"
                        data-cy="workflow-singleLeftArrowItem"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseEnter={[Function]}
                        onMouseOut={[Function]}
                        style={
                          Object {
                            "marginRight": undefined,
                            "width": "20px",
                          }
                        }
                        title="Pan the workflow to the left by 1 day"
                        type="button"
                      >
                        <Blueprint3.Icon
                          key="leftIcon"
                        />
                        <span
                          className="bp3-button-text"
                          key="text"
                        >
                          <Blueprint3.Icon
                            icon="chevron-left"
                            key="2"
                            title={false}
                          >
                            <span
                              className="bp3-icon bp3-icon-chevron-left"
                              icon="chevron-left"
                            >
                              <svg
                                data-icon="chevron-left"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <path
                                  d="M7.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C5.11 7.47 5 7.72 5 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L7.41 8z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                        </span>
                        <Blueprint3.Icon
                          key="rightIcon"
                        />
                      </button>
                    </Blueprint3.Button>
                  </div>
                </ToolbarItemRenderer>
              </div>
              <div
                className="toolbar-item
                    "
                key="2"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "cyData": "workflow-singleRightArrowItem",
                      "icon": "chevron-right",
                      "onClick": [Function],
                      "onlyShowIcon": true,
                      "rank": 2,
                      "tooltip": "Pan the workflow to the right by 1 day",
                      "type": "Button",
                      "widthPx": 20,
                    }
                  }
                  key="2"
                >
                  <div
                    key="2"
                    style={Object {}}
                  >
                    <Blueprint3.Button
                      alignText="center"
                      className="toolbar-button--icon-only"
                      data-cy="workflow-singleRightArrowItem"
                      key="2"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseOut={[Function]}
                      style={
                        Object {
                          "marginRight": undefined,
                          "width": "20px",
                        }
                      }
                      title="Pan the workflow to the right by 1 day"
                    >
                      <button
                        className="bp3-button toolbar-button--icon-only"
                        data-cy="workflow-singleRightArrowItem"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseEnter={[Function]}
                        onMouseOut={[Function]}
                        style={
                          Object {
                            "marginRight": undefined,
                            "width": "20px",
                          }
                        }
                        title="Pan the workflow to the right by 1 day"
                        type="button"
                      >
                        <Blueprint3.Icon
                          key="leftIcon"
                        />
                        <span
                          className="bp3-button-text"
                          key="text"
                        >
                          <Blueprint3.Icon
                            icon="chevron-right"
                            key="2"
                            title={false}
                          >
                            <span
                              className="bp3-icon bp3-icon-chevron-right"
                              icon="chevron-right"
                            >
                              <svg
                                data-icon="chevron-right"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <path
                                  d="M10.71 7.29l-4-4a1.003 1.003 0 00-1.42 1.42L8.59 8 5.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                        </span>
                        <Blueprint3.Icon
                          key="rightIcon"
                        />
                      </button>
                    </Blueprint3.Button>
                  </div>
                </ToolbarItemRenderer>
              </div>
              <div
                className="toolbar-item
                    "
                key="3"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "cyData": "workflow-doubleRightArrowItem",
                      "icon": "double-chevron-right",
                      "onClick": [Function],
                      "onlyShowIcon": true,
                      "rank": 3,
                      "tooltip": "Pan the workflow to the right by 7 days",
                      "type": "Button",
                      "widthPx": 20,
                    }
                  }
                  key="3"
                >
                  <div
                    key="3"
                    style={Object {}}
                  >
                    <Blueprint3.Button
                      alignText="center"
                      className="toolbar-button--icon-only"
                      data-cy="workflow-doubleRightArrowItem"
                      key="3"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseOut={[Function]}
                      style={
                        Object {
                          "marginRight": undefined,
                          "width": "20px",
                        }
                      }
                      title="Pan the workflow to the right by 7 days"
                    >
                      <button
                        className="bp3-button toolbar-button--icon-only"
                        data-cy="workflow-doubleRightArrowItem"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseEnter={[Function]}
                        onMouseOut={[Function]}
                        style={
                          Object {
                            "marginRight": undefined,
                            "width": "20px",
                          }
                        }
                        title="Pan the workflow to the right by 7 days"
                        type="button"
                      >
                        <Blueprint3.Icon
                          key="leftIcon"
                        />
                        <span
                          className="bp3-button-text"
                          key="text"
                        >
                          <Blueprint3.Icon
                            icon="double-chevron-right"
                            key="2"
                            title={false}
                          >
                            <span
                              className="bp3-icon bp3-icon-double-chevron-right"
                              icon="double-chevron-right"
                            >
                              <svg
                                data-icon="double-chevron-right"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <path
                                  d="M9 8c0-.28-.11-.53-.29-.71l-4-4a1.003 1.003 0 00-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4C8.89 8.53 9 8.28 9 8zm4.71-.71l-4-4a1.003 1.003 0 00-1.42 1.42L11.59 8 8.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                        </span>
                        <Blueprint3.Icon
                          key="rightIcon"
                        />
                      </button>
                    </Blueprint3.Button>
                  </div>
                </ToolbarItemRenderer>
              </div>
              <div
                className="toolbar-item
                    "
                key="4"
              >
                <ToolbarItemRenderer
                  addToPopoverMap={[Function]}
                  hasIssue={false}
                  item={
                    Object {
                      "cyData": "workflow-openAnythingItem",
                      "icon": "search-template",
                      "labelRight": "Open anything...",
                      "onClick": [Function],
                      "onlyShowIcon": false,
                      "rank": 4,
                      "tooltip": "Open anything",
                      "type": "Button",
                      "widthPx": 160,
                    }
                  }
                  key="4"
                >
                  <div
                    key="4"
                    style={Object {}}
                  >
                    <Blueprint3.Button
                      alignText="left"
                      className="toolbar-button"
                      data-cy="workflow-openAnythingItem"
                      key="4"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseOut={[Function]}
                      style={
                        Object {
                          "marginRight": undefined,
                          "width": "160px",
                        }
                      }
                      title="Open anything"
                    >
                      <button
                        className="bp3-button bp3-align-left toolbar-button"
                        data-cy="workflow-openAnythingItem"
                        onClick={[Function]}
                        onKeyDown={[Function]}
                        onKeyUp={[Function]}
                        onMouseEnter={[Function]}
                        onMouseOut={[Function]}
                        style={
                          Object {
                            "marginRight": undefined,
                            "width": "160px",
                          }
                        }
                        title="Open anything"
                        type="button"
                      >
                        <Blueprint3.Icon
                          key="leftIcon"
                        />
                        <span
                          className="bp3-button-text"
                          key="text"
                        >
                          <span
                            key="1"
                          />
                          <Blueprint3.Icon
                            icon="search-template"
                            key="2"
                            title={false}
                          >
                            <span
                              className="bp3-icon bp3-icon-search-template"
                              icon="search-template"
                            >
                              <svg
                                data-icon="search-template"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <path
                                  d="M15.55 13.43l-2.67-2.67c.7-1.09 1.11-2.38 1.11-3.77 0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.41 3.77-1.11l2.67 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm2.5-6h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm0-2h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm0 4h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                          <span
                            key="3"
                          >
                            Open anything...
                          </span>
                        </span>
                        <Blueprint3.Icon
                          key="rightIcon"
                        />
                      </button>
                    </Blueprint3.Button>
                  </div>
                </ToolbarItemRenderer>
              </div>
            </div>
          </div>
        </ToolbarComponent>
        <Memo(OpenAnythingDialogComponent)
          isVisible={false}
          onCancel={[Function]}
          onOpen={[Function]}
        >
          <ModalPrompt
            actionCallback={[Function]}
            actionDisabled={false}
            actionText="Open"
            actionTooltipText="Open"
            cancelButtonCallback={[Function]}
            cancelText="Cancel"
            cancelTooltipText="Cancel"
            isOpen={false}
            onCloseCallback={[Function]}
            title="Open Anything"
          >
            <Blueprint3.Dialog
              canOutsideClickClose={true}
              className="dialog_parent dialog_parent--wide"
              isOpen={false}
              onClose={[Function]}
              title="Open Anything"
            >
              <Blueprint3.Overlay
                autoFocus={true}
                backdropProps={Object {}}
                canEscapeKeyClose={true}
                canOutsideClickClose={true}
                className="bp3-overlay-scroll-container"
                enforceFocus={true}
                hasBackdrop={true}
                isOpen={false}
                lazy={true}
                onClose={[Function]}
                title="Open Anything"
                transitionDuration={300}
                transitionName="bp3-overlay"
                usePortal={true}
              />
            </Blueprint3.Dialog>
          </ModalPrompt>
        </Memo(OpenAnythingDialogComponent)>
      </Memo()>
    </div>
  </BaseDisplay>
</Provider>
`;
